[{"C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\index.js":"1","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\App.js":"2","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\reportWebVitals.js":"3","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Header\\Header.js":"4","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Content.js":"5","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Messages\\Messages.js":"6","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Profile\\Profile.js":"7","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\Redux\\profileReducer.js":"8","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\Redux\\message-reducer.js":"9","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\Redux\\redux-store.js":"10","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Messages\\MessageContainer.js":"11","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Profile\\ProfileContainer.js":"12","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Users\\UsersContainer.js":"13","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Users\\Users.js":"14","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\Redux\\users-reducer.js":"15","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\common\\preloader\\preloader.js":"16","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\Redux\\auth-reducer.js":"17","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Header\\HeaderContainer.js":"18","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\ api\\api.js":"19","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\HOCs\\WIthAuthRedirect.js":"20","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\Redux\\app-reducer.js":"21","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\Redux\\users_selectors.js":"22","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Login\\Login.js":"23","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Header\\Navbar\\Navbar.js":"24"},{"size":449,"mtime":1650120857774,"results":"25","hashOfConfig":"26"},{"size":888,"mtime":1649191719691,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1638637168797,"results":"28","hashOfConfig":"26"},{"size":1403,"mtime":1648288916080,"results":"29","hashOfConfig":"26"},{"size":747,"mtime":1649675813768,"results":"30","hashOfConfig":"26"},{"size":5100,"mtime":1649759787785,"results":"31","hashOfConfig":"26"},{"size":11690,"mtime":1649601470299,"results":"32","hashOfConfig":"26"},{"size":3009,"mtime":1649601646102,"results":"33","hashOfConfig":"26"},{"size":3222,"mtime":1649588813035,"results":"34","hashOfConfig":"26"},{"size":620,"mtime":1650120925022,"results":"35","hashOfConfig":"26"},{"size":1722,"mtime":1649758578670,"results":"36","hashOfConfig":"26"},{"size":1626,"mtime":1649592570553,"results":"37","hashOfConfig":"26"},{"size":1283,"mtime":1648979997152,"results":"38","hashOfConfig":"26"},{"size":4223,"mtime":1649675071942,"results":"39","hashOfConfig":"26"},{"size":4310,"mtime":1649759779126,"results":"40","hashOfConfig":"26"},{"size":268,"mtime":1648448620235,"results":"41","hashOfConfig":"26"},{"size":1926,"mtime":1644780871561,"results":"42","hashOfConfig":"26"},{"size":389,"mtime":1646599733910,"results":"43","hashOfConfig":"26"},{"size":2595,"mtime":1649319587211,"results":"44","hashOfConfig":"26"},{"size":803,"mtime":1646697092426,"results":"45","hashOfConfig":"26"},{"size":717,"mtime":1644961401473,"results":"46","hashOfConfig":"26"},{"size":261,"mtime":1646758693507,"results":"47","hashOfConfig":"26"},{"size":2014,"mtime":1649319596042,"results":"48","hashOfConfig":"26"},{"size":600,"mtime":1646759901447,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19aw8bt",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"57"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\index.js",[],"C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\App.js",["114","115"],"import './App.css';\nimport Content from './components/Content/Content';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect} from \"react-redux\";\nimport {initThunkCreator} from \"./Redux/app-reducer\";\nimport Preloader from \"./components/common/preloader/preloader\";\nimport {useEffect} from \"react\";\n\nconst App = (props) => {\n\n    useEffect(() => {\n        props.initThunkCreator();\n    }, []);\n\n    if (!props.initialized) {\n        return <Preloader/>\n    } else return (\n        <div className={\"app-wrapper\"}>\n            <HashRouter>\n                <HeaderContainer/>\n                <Content/>\n            </HashRouter>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n})\n\nexport default connect(mapStateToProps, {initThunkCreator})(App);\n","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\reportWebVitals.js",[],["116","117"],"C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Header\\Header.js",["118"],"import css from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport LogoutButton from \".././common/images/LogOut.png\";\r\n\r\nconst Header = (props) => {\r\n    let [currentPage, setCurrentPage] = useState();\r\n    return (\r\n        <div className={css.header}>\r\n\r\n            <div className={currentPage===\"Profile\" ? css.ActivePage : null}>\r\n                <NavLink onClick={()=>setCurrentPage(\"Profile\")} to=\"/profile/\"><span>Profile</span></NavLink>\r\n            </div>\r\n            <div className={currentPage===\"Messages\" ? css.ActivePage : null}>\r\n                <NavLink onClick={()=>setCurrentPage(\"Messages\")} to=\"/messages\"><span>Messages</span></NavLink>\r\n            </div>\r\n            <div className={currentPage===\"Users\" ? css.ActivePage : null}>\r\n                <NavLink onClick={()=>setCurrentPage(\"Users\")} to=\"/users\"><span>Users</span></NavLink>\r\n            </div>\r\n\r\n            <div className={css.loginBlock}>\r\n                {props.loggedIn\r\n                    ? <div className={css.login}>\r\n                        <span>{props.login}</span>\r\n                        <button onClick={props.logoutThunkCreator}><img width={\"20px\"} src={LogoutButton}/></button>\r\n                    </div>\r\n                    : <NavLink to={\"/login\"}>Login</NavLink>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Content.js",["119"],"import {BrowserRouter, Routes, Route} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport MessagesContainer from \"./Messages/MessageContainer\";\r\nimport ProfileContainer from \"./Profile/ProfileContainer\";\r\nimport UsersContainer from \"./Users/UsersContainer\";\r\nimport Login from \"./Login/Login\";\r\n\r\n\r\nconst Content = (props) => {\r\n\r\n    return (\r\n        <Routes>\r\n            <Route path={\"/login/*\"} element={<Login/>}/>}\r\n            <Route path={\"\"} element={<Login/>}/>}\r\n            <Route path=\"/profile/*\" element={<ProfileContainer/>}/>\r\n            <Route path=\"/messages/*\" element={<MessagesContainer/>}/>\r\n            <Route path=\"/users/*\" element={<UsersContainer/>}/>\r\n        </Routes>\r\n    );\r\n}\r\n\r\nexport default Content;","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Messages\\Messages.js",["120","121","122","123","124","125","126"],"import {NavLink, Navigate, Route, Routes} from \"react-router-dom\";\r\nimport css from \"./Messages.module.css\"\r\nimport React, {useEffect, useState} from \"react\";\r\nimport SendPostButton from \"../../common/images/send.png\";\r\nimport WarningImage from \"../../common/images/warning.png\";\r\nimport DeleteButton from \"../../common/images/delete.png\";\r\n\r\nlet crutch429 = false;\r\nconst DialogItem = (props) => {\r\n    return <div className={css.DialogItem}>\r\n        <button onClick={()=> {\r\n            try {\r\n                props.deleteFriend(props.userId)\r\n            }\r\n            catch {\r\n                crutch429 = true\r\n            }\r\n        }}><img width={\"10px\"} src={DeleteButton}/></button>\r\n        <NavLink onClick={() => {\r\n            props.setActiveDialog(props.name)\r\n        }}       className={props.messageData.activeDialog === props.name ? css.active : null}\r\n                 to={\"/messages/\" + props.name}><span>{props.name}</span></NavLink>\r\n    </div>\r\n}\r\nconst MessageItem = (props) => {\r\n    return <div className={css.MessageItem}>\r\n        <div className={css.Message}>\r\n            <span className={css.MessageContent}>{props.message}</span>\r\n        </div>\r\n    </div>\r\n}\r\nlet idCrutch = 0;\r\nconst Messages = (props) => {\r\n\r\n    let text = React.createRef();\r\n    const dialogList = props.messageData.friends.map(d => <DialogItem\r\n        messageData={props.messageData}\r\n        setActiveDialog={props.setActiveDialog}\r\n        userId={d.id}\r\n        deleteFriend={props.deleteFriend}\r\n        id={d.id} name={d.name} key={d.id}/>);\r\n    let messageList = props.messageData.dialogs.map(m => <Route\r\n        path={m.name}\r\n        key={m.name}\r\n        element={m.messages.map(ml => <MessageItem message={ml.message} name={props.login} key={idCrutch++}/>)}/>);\r\n\r\n    return <div className={css.Messages}>\r\n        <div className={css.LeftColumn}>\r\n            {dialogList}\r\n        </div>\r\n        <div className={css.RightColumn}>\r\n            <div className={css.MessageWarning}>\r\n                <img src={WarningImage} width={\"40px\"}/>\r\n                <span>Current version of API doesn't support proper message exchange, this page exist as a space for\r\n                future improvement!</span>\r\n            </div>\r\n            <div className={css.MessageSpace}>\r\n                <Routes>\r\n                    {messageList}\r\n                </Routes>\r\n            </div>\r\n            <div className={css.MessagePanel}>\r\n                <textarea ref={text}\r\n                          value={props.messageData.newMessageText.message}\r\n                          onChange={() => props.textareaChange(text.current.value)}\r\n                          placeholder={\"Enter your message...\"}\r\n                          onFocus={()=>{\r\n                              let flag = 0;\r\n                              if (props.messageData.activeDialog === \"\") {\r\n                                  text.current.placeholder = \"Select a dialog\"\r\n                                  text.current.blur();\r\n                                  flag = 1;\r\n                              }\r\n                              if (flag == 0){\r\n                                  text.current.placeholder = \"Enter your message...\"\r\n                              }\r\n                          }}\r\n                          onKeyDown={(event)=>{\r\n                              if (event.key === \"Enter\"){\r\n                                  event.preventDefault();\r\n                                  props.addMessage();\r\n                              }}}/>\r\n                <button onClick={() => {\r\n                    props.addMessage();\r\n                }}><img src={SendPostButton} width={\"40px\"}/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        {crutch429\r\n            ? <div className = {css.Warning} > Too many requests, please wait a little! < /div>\r\n            : null}\r\n    </div>\r\n\r\n\r\n    // let messageList;\r\n    // let dialogList = props.messageData.dialogs.map(d => <DialogItem dialogName={d.name} key={d.name}/>);\r\n    // let messages = props.messageData.dialogs.map(m => <Route\r\n    //     path={m.name}\r\n    //     key={m.name}\r\n    //     element={messageList = m.messages.map(ml => <MessageItem message={ml.message} key={ml.message}/>)}>\r\n    // </Route>);\r\n    // let text = React.createRef();\r\n    // return (\r\n    //     <div className={css.Messages}>\r\n    //         <div className={css.leftbar}>\r\n    //             {dialogList}\r\n    //         </div>\r\n    //         <div className={css.rightBar}>\r\n    //             <Routes>\r\n    //                 {messages}\r\n    //             </Routes>\r\n    //             <textarea ref={text}\r\n    //                       value={props.messageData.newMessageText.message}\r\n    //                       onChange={() => props.textareaChange(text)}></textarea>\r\n    //             <br/>\r\n    //             <button onClick={() => {\r\n    //                 props.addMessage()\r\n    //             }}> send\r\n    //             </button>\r\n    //\r\n    //         </div>\r\n    //     </div>\r\n    // );\r\n}\r\n\r\nexport default Messages;","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Profile\\Profile.js",["127","128","129","130","131","132","133","134","135","136","137","138"],"import css from \"./Profile.module.css\"\r\nimport React, {PureComponent, useEffect, useState} from \"react\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport {updateAvatarThunkCreator} from \"../../../Redux/profileReducer\";\r\nimport AddFriendButton from \"../../common/images/AddFriend.png\"\r\nimport OkButton from \"../../common/images/ok.png\"\r\nimport SettingsButton from \"../../common/images/Settings.png\"\r\nimport ChangeAvaButton from \"../../common/images/ChangeAvatar.png\"\r\nimport MessageButton from \"../../common/images/Message.png\"\r\nimport SendPostButton from \"../../common/images/send.png\"\r\nimport { Transition } from 'react-transition-group';\r\nimport NoAvatarPicture from \"../../common/images/User.png\"\r\nimport {useNavigate} from \"react-router\";\r\nimport Messages from \"../Messages/Messages\";\r\n\r\n\r\nconst Post = (props) => {\r\n    return <div className={css.Post}>\r\n        <img width={\"60px\"} src={props.profileInfo.profile.photos.small\r\n            ? props.profileInfo.profile.photos.small\r\n            : NoAvatarPicture\r\n        }/>\r\n        <div>\r\n            <span>{props.profileInfo.profile.fullName}</span>\r\n            <p>{props.text}</p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nclass ProfileStatus extends PureComponent {\r\n    state = {\r\n        editMode: false, status: this.props.status,\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({status: e.currentTarget.value})\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <div> {this.state.editMode ? <input onChange={this.onStatusChange} value={this.state.status} onBlur={() => {\r\n                this.setState({editMode: false});\r\n                this.props.updateStatus(this.state.status);\r\n            }}/> : <div onClick={() => {\r\n                this.setState({editMode: true});\r\n            }}>{this.props.status || \"no status\"}</ div>}\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\nlet idCrutch = 0;\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    let unfollow = (userId) => {\r\n        props.unfollowThunkCreator(userId);\r\n    }\r\n    let follow = (userId) => {\r\n        props.followThunkCreator(userId);\r\n    }\r\n\r\n    let postElements = props.ProfileData.posts.map(p => <Post profileInfo={props.ProfileData} text={p.text}\r\n                                                              key={idCrutch++}/>);\r\n    let text = React.createRef();\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [localProfile, setLocalProfile] = useState({});\r\n    useEffect(() => {\r\n        setLocalProfile({...props.ProfileData.profile});\r\n    }, [props.ProfileData.profile])\r\n    let navigate = useNavigate();\r\n\r\n    if (!props.ProfileData.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (<div className={css.Profile}>\r\n\r\n        <div className={css.Columns}>\r\n            <div className={css.LeftColumn}>\r\n                <img className={css.ProfilePicture}\r\n                     src={props.ProfileData.profile.photos.large ? props.ProfileData.profile.photos.large : NoAvatarPicture}/>\r\n\r\n                <div className={css.UnderPicture}>\r\n                    {(props.myId === props.userId)\r\n                        ? <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <button className={css.UserButton} onClick={() => {\r\n                                if (editMode) props.updateProfileThunkCreator(localProfile);\r\n                                setEditMode(!editMode);\r\n                            }}> {editMode\r\n                                ? <img width={\"40px\"} src={OkButton}/>\r\n                                : <img width={\"40px\"} src={SettingsButton}/>}</button>\r\n                            <label htmlFor={\"avatar\"} className={css.Label}>\r\n                                <img width={\"40px\"} src={ChangeAvaButton}/>\r\n                                <input className={css.AvatarInput} type={\"file\"} id={\"avatar\"} onChange={() => {\r\n                                    let avatar = document.getElementById('avatar').files[0];\r\n                                    props.updateAvatarThunkCreator(avatar);\r\n                                }}/>\r\n                            </label>\r\n                        </div>\r\n                        : <div>\r\n                            <button onClick={()=>follow(localProfile.userId)} className={css.UserButton}><img width={\"40px\"} src={AddFriendButton}/></button>\r\n                            <button onClick={()=>{\r\n                                follow(localProfile.userId);\r\n                                navigate(\"/messages/\"+localProfile.fullName)\r\n                            }} className={css.UserButton}><img width={\"40px\"} src={MessageButton}/></button>\r\n                        </div>}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={css.RightColumn}>\r\n                <div><span className={css.Name}>{props.ProfileData.profile.fullName}</span></div>\r\n                <div className={css.Status}><ProfileStatus status={props.ProfileData.status}\r\n                                                           updateStatus={props.updateStatus}/></div>\r\n\r\n                <div className={css.Info}>\r\n                    {/*about me*/}\r\n                    <div className={css.AboutMe}>\r\n                        <div style={{display: \"inline\"}}>About me:</div>\r\n                        {editMode\r\n                            ? <input className={css.AboutMeInput} style={{display: \"inline\"}} onChange={(event) => {\r\n                                setLocalProfile({...localProfile, aboutMe: event.currentTarget.value})\r\n                            }\r\n                            } type={\"text\"} value={localProfile.aboutMe || \"\"}/>\r\n                            : <div\r\n                                style={{display: \"inline\"}}>{localProfile.aboutMe ?\r\n                                <span>{localProfile.aboutMe}</span> : <span>no info</span>}</div>}\r\n                    </div>\r\n                    {/*looking for a job*/}\r\n                    <div className={css.LookingForAJob}>\r\n                        <div style={{display: \"inline\"}}>Looking for a Job:</div>\r\n                        {editMode\r\n                            ? <input onChange={() => {\r\n                                setLocalProfile({\r\n                                    ...localProfile,\r\n                                    lookingForAJob: !localProfile.lookingForAJob,\r\n                                    lookingForAJobDescription: \"nothing here\"\r\n                                })\r\n                            }} type={\"checkbox\"} checked={localProfile.lookingForAJob}/>\r\n                            : <div style={{display: \"inline\"}}>{localProfile.lookingForAJob ? <span>yes</span> :\r\n                                <span>no</span>}</div>}\r\n                    </div>\r\n                    {/*{vk}*/}\r\n                    <div className={css.Contacts}>\r\n                        <div style={{display: \"inline\"}}>{\"vk: \"}</div>\r\n                        {editMode\r\n                            ? <input style={{display: \"inline\"}} onChange={(event) => {\r\n                                setLocalProfile({\r\n                                    ...localProfile,\r\n                                    contacts: {...localProfile.contacts, vk: event.currentTarget.value}\r\n                                })\r\n                            }\r\n                            } type={\"text\"} value={localProfile.contacts.vk || \"\"}/>\r\n                            : <div\r\n                                style={{display: \"inline\"}}>{localProfile.contacts ? localProfile.contacts.vk ?\r\n                                    <span>{localProfile.contacts.vk}</span> : <span>no info</span> :\r\n                                <span>no info</span>}</div>}\r\n                    </div>\r\n                    {/*github*/}\r\n                    <div className={css.Contacts}>\r\n                        <div style={{display: \"inline\"}}>{\"github: \"}</div>\r\n                        {editMode\r\n                            ? <input style={{display: \"inline\"}} onChange={(event) => {\r\n                                setLocalProfile({\r\n                                    ...localProfile,\r\n                                    contacts: {...localProfile.contacts, github: event.currentTarget.value}\r\n                                })\r\n                            }\r\n                            } type={\"text\"} value={localProfile.contacts.github || \"\"}/>\r\n                            : <div\r\n                                style={{display: \"inline\"}}>{localProfile.contacts ? localProfile.contacts.github ?\r\n                                    <span>{localProfile.contacts.github}</span> : <span>no info</span> :\r\n                                <span>no info</span>}</div>}\r\n                    </div>\r\n                    {/*website*/}\r\n                    <div className={css.Contacts}>\r\n                        <div style={{display: \"inline\"}}>{\"website: \"}</div>\r\n                        {editMode\r\n                            ? <input style={{display: \"inline\"}} onChange={(event) => {\r\n                                setLocalProfile({\r\n                                    ...localProfile,\r\n                                    contacts: {...localProfile.contacts, website: event.currentTarget.value}\r\n                                })\r\n                            }\r\n                            } type={\"text\"} value={localProfile.contacts.website || \"\"}/>\r\n                            : <div\r\n                                style={{display: \"inline\"}}>{localProfile.contacts ? localProfile.contacts.website ?\r\n                                    <span>{localProfile.contacts.website}</span> : <span>no info</span> :\r\n                                <span>no info</span>}</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        {(props.myId === props.userId)\r\n            ? <div className={css.PostMenu}>\r\n        <textarea onChange={() => props.textareaChange(text)}\r\n                  ref={text}\r\n                  value={props.ProfileData.newPostText.text}>\r\n        </textarea>\r\n                <button className={css.AddPostButton} onClick={() => {\r\n                    props.addPost();\r\n                }}><img src={SendPostButton} width={\"40px\"}/>\r\n                </button>\r\n            </div>\r\n        : null}\r\n        <div className={css.MyPosts}>\r\n            {postElements}\r\n        </div>\r\n    </div>);\r\n\r\n\r\n    // return (\r\n    //     <div className={css.Profile}>\r\n    //         <div className={css.ProfileName}>{props.ProfileData.profile.fullName}</div>\r\n    //         <img className={css.ProfilePicture}\r\n    //              src={props.ProfileData.profile.photos.large}/>\r\n    //         <br/>\r\n    //         <div>\r\n    //             {props.isOwner && <input type={\"file\"}/>}\r\n    //         </div>\r\n    //         <ProfileStatus status={props.ProfileData.status} updateStatus={props.updateStatus}/>\r\n    //         <br/>\r\n    //         <textarea onChange={() => props.textareaChange(text)}\r\n    //                   ref={text}\r\n    //                   value={props.ProfileData.newPostText.text}>\r\n    //         </textarea>\r\n    //         <br/>\r\n    //         <button onClick={() => {\r\n    //             props.addPost();\r\n    //         }}>Add new post\r\n    //         </button>\r\n    //         <br/>\r\n    //         <div className={css.MyPosts}>\r\n    //             {postElements}\r\n    //         </div>\r\n    //     </div>);\r\n}\r\nexport default Profile;","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\Redux\\profileReducer.js",["139"],"import {profileAPI, usersAPI} from \"../ api/api\";\r\n\r\nlet initValue = {\r\n    posts: [\r\n        {id: \"1\", likesCount: 3, text: \"Hi! Unfortunately, current version of API doesn't support post creation on the server side, but you can add them localy, in your profile page!\"},\r\n    ],\r\n    newPostText: {id: \"5\", likesCount: 0, text: \"\"},\r\n    profile: null,\r\n    status: null,\r\n};\r\nconst profileReducer = (state = initValue, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD-POST\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.posts = [...state.posts]\r\n            stateCopy.posts.push(Object.assign({}, state.newPostText));\r\n            stateCopy.newPostText.text = '';\r\n            return stateCopy;}\r\n        case \"CHANGE-POST\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.newPostText.text = action.text;\r\n            return stateCopy;\r\n        }\r\n        case \"SET-USER-PROFILE\":{\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case \"SET-USER-STATUS\":{\r\n            return {...state, status: action.status}\r\n        }\r\n        case \"SET-USER-AVATAR\":{\r\n            return {...state, profile:{...this, photos: action.photos}}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const addPost = () => ({type: \"ADD-POST\"});\r\nexport const textareaChange = (text) => ({type: \"CHANGE-POST\",text: text.current.value});\r\nexport const setUserProfile = (profile) => ({type:\"SET-USER-PROFILE\", profile:profile});\r\nexport const setProfileStatus = (status) => ({type:\"SET-USER-STATUS\", status:status})\r\nexport const setUserAvatar = (photos) => ({type:\"SET-USER-AVATAR\", photos:photos})\r\n\r\nexport const getProfileThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId)\r\n            .then(data => {\r\n                dispatch(setUserProfile(data));\r\n            })\r\n    }\r\n}\r\n\r\nexport const getStatusThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        if(userId==\"\"){\r\n            userId=2;\r\n        }\r\n        profileAPI.getStatus(userId)\r\n            .then(response => {\r\n                dispatch(setProfileStatus(response.data));\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateStatusThunkCreator = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(setProfileStatus(status));\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateProfileThunkCreator = (profile) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateProfile(profile)\r\n            .then(response => {\r\n                dispatch(setUserProfile(profile));\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateAvatarThunkCreator = (avatar) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateAvatar(avatar)\r\n            .then(response => {\r\n                dispatch(setUserAvatar(response.data.data.photos));\r\n            })\r\n    }\r\n}\r\n\r\nexport default profileReducer;","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\Redux\\message-reducer.js",["140","141","142","143","144"],"import {usersAPI} from \"../ api/api\";\r\nimport {isLoading, setCurrentPage, setUsers} from \"./users-reducer\";\r\n\r\nlet initValue = {\r\n    // dialogs: [\r\n    //     {   id: \"stepa\",\r\n    //         messages: [\r\n    //             {name: \"user1\", message: \"sup brah\"},\r\n    //             {name: \"user1\", message: \"sup brahh\"},\r\n    //             {name: \"user1\", message: \"sup brahhhh\"},\r\n    //             {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\r\n    //     },\r\n    //     {   id: \"sssstepa\",\r\n    //         messages: [\r\n    //             {name: \"user1\", message: \"sussssp brah\"},\r\n    //             {name: \"user1\", message: \"sup brahh\"},\r\n    //             {name: \"user1\", message: \"sup brahhhh\"},\r\n    //             {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\r\n    //     },\r\n    //     {   id: \"seeeeetepa\",\r\n    //         messages: [\r\n    //             {name: \"user1\", message: \"sup brah\"},\r\n    //             {name: \"user1\", message: \"sup brahh\"},\r\n    //             {name: \"user1\", message: \"sussssssssssp brahhhh\"},\r\n    //             {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\r\n    //     },\r\n    // ],\r\n    newMessageText: {name: \"user1\", message: \"\"},\r\n    friends: [],\r\n    dialogs:[],\r\n    activeDialog:\"\",\r\n};\r\nconst messageReducer = (state = initValue, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD-MESSAGE\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.dialogs = [...state.dialogs];\r\n            stateCopy.newMessageText = {...state.newMessageText};\r\n            let currentDialogNumber = stateCopy.dialogs.findIndex((obj)=>{return obj.name===stateCopy.activeDialog});\r\n            stateCopy.dialogs[currentDialogNumber].messages.push(Object.assign({}, stateCopy.newMessageText));\r\n            stateCopy.newMessageText.message = \"\";\r\n            return stateCopy;\r\n        }\r\n        case \"CHANGE-MESSAGE\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.dialogs = [...state.dialogs];\r\n            stateCopy.newMessageText = {...state.newMessageText};\r\n            stateCopy.newMessageText.message = action.text;\r\n            return stateCopy;\r\n        }\r\n        case \"SET-FRIENDS\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.friends = action.friends;\r\n            return stateCopy;\r\n        }\r\n        case \"SET-DIALOGS\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.dialogs = stateCopy.friends.map(f => ({\r\n                name:f.name,\r\n                id: f.id,\r\n                messages:[]\r\n            }));\r\n            return stateCopy;\r\n        }\r\n        case \"SET-ACTIVE-DIALOG\":{\r\n                let stateCopy = {...state};\r\n                stateCopy.activeDialog = action.dialogName;\r\n                return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst setFriends = (friends) => ({type: \"SET-FRIENDS\", friends: friends});\r\n\r\n// export const getFriendsThunkCreator = () => {\r\n//     return (dispatch) => {\r\n//         usersAPI.getFriends().then(data => {\r\n//             dispatch({type: \"SET-FRIENDS\", friends: data.items});\r\n//             dispatch({type: \"SET-DIALOGS\"});\r\n//         });\r\n//     }\r\n// }\r\n\r\nexport default messageReducer;","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\Redux\\redux-store.js",[],"C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Messages\\MessageContainer.js",["145"],"import React, {useEffect} from \"react\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../HOCs/WIthAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {usersAPI} from \"../../../ api/api\";\r\nimport {useParams} from \"react-router\";\r\nimport {unfollowThunkCreator} from \"../../../Redux/users-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messageData: state.messageData,\r\n        login:state.auth.login,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage() {\r\n            dispatch({type: \"ADD-MESSAGE\"});\r\n        },\r\n        textareaChange(text) {\r\n            dispatch({type: \"CHANGE-MESSAGE\", text: text});\r\n        },\r\n        getFriends() {\r\n            usersAPI.getFriends().then(data => {\r\n                dispatch({type: \"SET-FRIENDS\", friends: data.items});\r\n                dispatch({type: \"SET-DIALOGS\"})\r\n            });\r\n        },\r\n        setActiveDialog(dialogName){\r\n          dispatch({type:\"SET-ACTIVE-DIALOG\", dialogName:dialogName})\r\n        },\r\n        deleteFriend(userId){\r\n            dispatch(unfollowThunkCreator(userId));\r\n            usersAPI.getFriends().then(data => {\r\n                dispatch({type: \"SET-FRIENDS\", friends: data.items});\r\n                dispatch({type: \"SET-DIALOGS\"})\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nlet MessageAPI = (props) => {\r\n    let userId = Object.values(useParams())[0];\r\n    useEffect(() => {\r\n        props.getFriends();\r\n        props.setActiveDialog(userId);\r\n    }, [])\r\n    return <Messages {...props}/>\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(MessageAPI);","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Profile\\ProfileContainer.js",["146"],"import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {useParams} from \"react-router\";\r\nimport {\r\n    textareaChange,\r\n    addPost,\r\n    setUserProfile,\r\n    getProfileThunkCreator,\r\n    getStatusThunkCreator,\r\n    updateStatusThunkCreator, updateProfileThunkCreator, updateAvatarThunkCreator\r\n} from \"../../../Redux/profileReducer\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../HOCs/WIthAuthRedirect\";\r\nimport Profile from \"./Profile\";\r\nimport {followThunkCreator, unfollowThunkCreator} from \"../../../Redux/users-reducer\";\r\n\r\nlet UrlDataContainer = (props) => {\r\n    let userId = Object.values(useParams())[0];\r\n    if (userId === \"\") userId=props.myId;\r\n    return <ProfileAPI {...props} userId={userId}/>\r\n}\r\n\r\nconst ProfileAPI = (props) => {\r\n    useEffect(() => {\r\n        props.getProfileThunkCreator(props.userId);\r\n        props.getStatusThunkCreator(props.userId);\r\n    }, [props.userId]);\r\n    return <Profile {...props} updateStatus={props.updateStatusThunkCreator}/>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        ProfileData: state.ProfileData,\r\n        isAuth: state.auth.loggedIn,\r\n        myId: state.auth.id,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        followThunkCreator,\r\n        unfollowThunkCreator,\r\n        textareaChange,\r\n        addPost,\r\n        setUserProfile,\r\n        getProfileThunkCreator,\r\n        getStatusThunkCreator,\r\n        updateStatusThunkCreator,\r\n        updateProfileThunkCreator,\r\n        updateAvatarThunkCreator,\r\n    }),\r\n)(UrlDataContainer);","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Users\\UsersContainer.js",["147","148"],"import {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsersThunkCreator,\r\n    followThunkCreator,\r\n    unfollowThunkCreator, searchUsersThunkCreator\r\n} from \"../../../Redux/users-reducer\";\r\nimport {getFollowingInProgress, getPageInfo, getUsers} from \"../../../Redux/users_selectors\";\r\nimport React, {useEffect} from \"react\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport Users from \"./Users\";\r\nimport {withAuthRedirect} from \"../../../HOCs/WIthAuthRedirect\";\r\n\r\nconst UsersAPI = (props) => {\r\n    useEffect(() => {\r\n        props.getUsersThunkCreator(props.pageInfo.currentPage, props.pageInfo.pageSize);\r\n    }, []);\r\n\r\n    let onPageChange = (pageNumber) => {\r\n        props.getUsersThunkCreator(pageNumber, props.pageInfo.pageSize);\r\n    }\r\n    return props.pageInfo.isLoading ? <Preloader/> :\r\n        <Users {...props} onPageChange={onPageChange}/>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageInfo: getPageInfo(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUsersThunkCreator, followThunkCreator, unfollowThunkCreator, searchUsersThunkCreator\r\n    })\r\n)(UsersAPI);","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Users\\Users.js",["149","150","151","152","153","154","155","156"],"import React, {useEffect, useState} from \"react\";\r\nimport css from \"./Users.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport NoAvatarPicture from \"../../common/images/User.png\"\r\nimport AddFriendButton from \"../../common/images/AddFriend.png\"\r\nimport OkButton from \"../../common/images/ok.png\"\r\nimport ArowButton from \"../../common/images/arrow.png\"\r\nimport SearchButton from \"../../common/images/search.png\"\r\n\r\nlet Paginator = (props) => {\r\n    let portionSize = 10; //количество порций юзеров\r\n    let pagesCount = Math.ceil(props.pageInfo.pageCount / props.pageInfo.pageSize); // всего страниц\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let [portionNumber, setPortionNumber] = useState(Math.floor(props.pageInfo.currentPage/portionSize) + 1);\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1; // самое левое число\r\n    let rightPortionNumber = portionNumber * portionSize; // самое правое число\r\n    pages = pages.filter(p => p >= leftPortionNumber && p <= rightPortionNumber).map(p => <span\r\n        key={p}\r\n        className={props.pageInfo.currentPage === p ? css.SelectedPage : css.UnselectedPage}\r\n        onClick={() => props.onPageChange(p)}> {p} </span>);\r\n\r\n    return <div className={css.Paginator}>\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}> <img style={{\"transform\": \"scaleX(-1)\"}} src={ArowButton} width={\"30px\"}/>\r\n        </button>\r\n        <div className={css.PageNumbers}>\r\n            {pages}\r\n        </div>\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}> <img src={ArowButton} width={\"30px\"}/>\r\n        </button>\r\n    </div>\r\n}\r\n\r\nlet Users = (props) => {\r\n\r\n    let unfollow = (userId) => {\r\n        props.unfollowThunkCreator(userId);\r\n    }\r\n    let follow = (userId) => {\r\n        props.followThunkCreator(userId);\r\n    }\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    return (<div className={css.Users}>\r\n        <div className={css.SearchContainer}>\r\n            <div className={css.Searcher}>\r\n                <input value={search} onChange={(event)=>{setSearch(event.currentTarget.value)}}/>\r\n                <button onClick={()=>props.searchUsersThunkCreator(search)}>\r\n                    <img src={SearchButton} width={\"30px\"}/>\r\n                </button>\r\n            </div>\r\n                <Paginator {...props} />\r\n        </div>\r\n        {\r\n            props.users.length === 0\r\n                ? <div className={css.Warning}> No such users found </div>\r\n                : props.users.map(u => {\r\n                return (\r\n                    <div key={u.name} className={css.UsersContainer}>\r\n                        <NavLink className={css.UserPicture} to={\"/profile/\" + u.id}>\r\n                            <div>{u.photos.small ? <img src={u.photos.small}/> :\r\n                                <img style={{width: \"100px\"}} src={NoAvatarPicture}/>}</div>\r\n                        </NavLink>\r\n\r\n                        <NavLink className={css.UserName} to={\"/profile/\" + u.id}>\r\n                            <span>{u.name}</span>\r\n                            <br/>\r\n                            <p>{u.status}</p>\r\n                        </NavLink>\r\n\r\n                        <div className={css.UserFollowButton}>\r\n                            {u.followed\r\n                                ? <div>\r\n                                    <span> Followed </span>\r\n                                    <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                            onClick={() => unfollow(u.id)}><img width={\"50px\"} src={OkButton}/></button>\r\n                                </div>\r\n                                : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                          onClick={() => follow(u.id)}><img width={\"50px\"} src={AddFriendButton}/>\r\n                                </button>}\r\n                        </div>\r\n                    </div>)\r\n            })\r\n        }\r\n    </div>)\r\n}\r\n\r\nexport default Users;\r\n","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\Redux\\users-reducer.js",["157","158","159","160","161","162"],"import {usersAPI} from \"../ api/api\";\r\n\r\nlet initValue = {\r\n        users: [],\r\n        pageInfo: {\r\n            pageCount: 8,\r\n            pageSize: 5,\r\n            currentPage: 1,\r\n            isLoading: true,\r\n            isFollowing: [],\r\n        },\r\n    }\r\n\r\nconst usersReducer = (state = initValue, action) => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.users = [...state.users];\r\n            stateCopy.users.map(u => {\r\n                if (u.id == action.userId) {\r\n                    u.followed = true;\r\n                }\r\n            })\r\n            return stateCopy;\r\n        }\r\n        case \"UNFOLLOW\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.users = [...state.users];\r\n            stateCopy.users.map(u => {\r\n                if (u.id == action.userId) {\r\n                    u.followed = false\r\n                }\r\n            })\r\n            return stateCopy;\r\n        }\r\n        case \"SET-CURRENT-PAGE\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.pageInfo = {...state.pageInfo};\r\n            stateCopy.pageInfo.currentPage = action.currentPage;\r\n            return stateCopy;\r\n        }\r\n        case \"SET-USERS\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.users = [...action.users];\r\n            stateCopy.pageInfo.pageCount = action.pageCount;\r\n            return stateCopy;\r\n        }\r\n        case \"IS-LOADING\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.pageInfo = {...state.pageInfo};\r\n            stateCopy.pageInfo.isLoading = action.isLoading;\r\n            return stateCopy;\r\n        }\r\n        case \"IS-FOLLOWING\": {\r\n            return {\r\n                ...state,\r\n                pageInfo: {\r\n                    ...state.pageInfo,\r\n                    isFollowing: action.isFollowing\r\n                        ? [...state.pageInfo.isFollowing, action.userId]\r\n                        : state.pageInfo.isFollowing.filter(id => id != action.userId)\r\n                },\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => ({type: \"FOLLOW\", userId: userId});\r\nexport const unfollow = (userId) => ({type: \"UNFOLLOW\", userId: userId});\r\nexport const setUsers = (users, pageCount) => ({type: \"SET-USERS\", users: users, pageCount: pageCount});\r\nexport const setCurrentPage = (currentPage) => ({type: \"SET-CURRENT-PAGE\", currentPage: currentPage});\r\nexport const isLoading = (isLoading) => ({type: \"IS-LOADING\", isLoading: isLoading})\r\nexport const isFollowing = (isFollowing, userId) => ({type: \"IS-FOLLOWING\",isFollowing: isFollowing,userId: userId})\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(isLoading(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        usersAPI.getUsersPage(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(setUsers(data.items, data.totalCount));\r\n                dispatch(isLoading(false));\r\n            });\r\n    }\r\n}\r\nexport const searchUsersThunkCreator = (userName) => {\r\n    return (dispatch) => {\r\n        dispatch(isLoading(true));\r\n        usersAPI.searchUser(userName)\r\n            .then(data => {\r\n                dispatch(setUsers(data.items, data.totalCount));\r\n                dispatch(isLoading(false));\r\n            });\r\n    }\r\n}\r\n\r\nexport const unfollowThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n            dispatch(isFollowing(true, userId));\r\n            usersAPI.sendUnfollowRequest(userId).then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unfollow(userId));\r\n                    dispatch(isFollowing(false, userId));\r\n                }\r\n                else{\r\n                    throw \"too many requests\";\r\n                }\r\n            });\r\n    }\r\n}\r\nexport const followThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(isFollowing(true, userId));\r\n        usersAPI.sendFollowRequest(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(follow(userId));\r\n                dispatch(isFollowing(false, userId));\r\n            }\r\n        });\r\n    }\r\n}\r\nexport default usersReducer;","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\common\\preloader\\preloader.js",["163"],"import preloader from \"./Gear-1.4s-200px.svg\"\r\nimport React from \"react\";\r\nimport css from \"./Preloader.module.css\"\r\n\r\nconst Preloader = (props) => {\r\n    return <div className={css.Preloader}>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\Redux\\auth-reducer.js",[],"C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Header\\HeaderContainer.js",["164"],"import Header from \"./Header\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutThunkCreator, setAuth} from \"../../Redux/auth-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedIn: state.auth.loggedIn,\r\n        login: state.auth.login,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {setAuth, logoutThunkCreator})(Header);","C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\ api\\api.js",[],"C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\HOCs\\WIthAuthRedirect.js",[],"C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\Redux\\app-reducer.js",[],"C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\Redux\\users_selectors.js",[],"C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Content\\Login\\Login.js",[],["165","166"],"C:\\Users\\Philippos\\Documents\\WebDev\\ULTRA_REACT\\01\\src\\components\\Header\\Navbar\\Navbar.js",[],{"ruleId":"167","severity":1,"message":"168","line":3,"column":9,"nodeType":"169","messageId":"170","endLine":3,"endColumn":22},{"ruleId":"171","severity":1,"message":"172","line":14,"column":8,"nodeType":"173","endLine":14,"endColumn":10,"suggestions":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":25,"column":68,"nodeType":"181","endLine":25,"endColumn":108},{"ruleId":"167","severity":1,"message":"168","line":1,"column":9,"nodeType":"169","messageId":"170","endLine":1,"endColumn":22},{"ruleId":"167","severity":1,"message":"182","line":1,"column":18,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"183","line":3,"column":16,"nodeType":"169","messageId":"170","endLine":3,"endColumn":25},{"ruleId":"167","severity":1,"message":"184","line":3,"column":27,"nodeType":"169","messageId":"170","endLine":3,"endColumn":35},{"ruleId":"179","severity":1,"message":"180","line":18,"column":12,"nodeType":"181","endLine":18,"endColumn":52},{"ruleId":"179","severity":1,"message":"180","line":53,"column":17,"nodeType":"181","endLine":53,"endColumn":57},{"ruleId":"185","severity":1,"message":"186","line":74,"column":40,"nodeType":"187","messageId":"188","endLine":74,"endColumn":42},{"ruleId":"179","severity":1,"message":"180","line":85,"column":20,"nodeType":"181","endLine":85,"endColumn":62},{"ruleId":"167","severity":1,"message":"189","line":4,"column":9,"nodeType":"169","messageId":"170","endLine":4,"endColumn":33},{"ruleId":"167","severity":1,"message":"190","line":11,"column":10,"nodeType":"169","messageId":"170","endLine":11,"endColumn":20},{"ruleId":"167","severity":1,"message":"191","line":14,"column":8,"nodeType":"169","messageId":"170","endLine":14,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":19,"column":9,"nodeType":"181","endLine":22,"endColumn":12},{"ruleId":"167","severity":1,"message":"192","line":62,"column":9,"nodeType":"169","messageId":"170","endLine":62,"endColumn":17},{"ruleId":"179","severity":1,"message":"180","line":86,"column":17,"nodeType":"181","endLine":87,"endColumn":127},{"ruleId":"179","severity":1,"message":"180","line":96,"column":35,"nodeType":"181","endLine":96,"endColumn":71},{"ruleId":"179","severity":1,"message":"180","line":97,"column":35,"nodeType":"181","endLine":97,"endColumn":77},{"ruleId":"179","severity":1,"message":"180","line":99,"column":33,"nodeType":"181","endLine":99,"endColumn":76},{"ruleId":"179","severity":1,"message":"180","line":107,"column":106,"nodeType":"181","endLine":107,"endColumn":149},{"ruleId":"179","severity":1,"message":"180","line":111,"column":59,"nodeType":"181","endLine":111,"endColumn":100},{"ruleId":"179","severity":1,"message":"180","line":210,"column":20,"nodeType":"181","endLine":210,"endColumn":62},{"ruleId":"185","severity":1,"message":"186","line":56,"column":18,"nodeType":"187","messageId":"188","endLine":56,"endColumn":20},{"ruleId":"167","severity":1,"message":"193","line":1,"column":9,"nodeType":"169","messageId":"170","endLine":1,"endColumn":17},{"ruleId":"167","severity":1,"message":"194","line":2,"column":9,"nodeType":"169","messageId":"170","endLine":2,"endColumn":18},{"ruleId":"167","severity":1,"message":"195","line":2,"column":20,"nodeType":"169","messageId":"170","endLine":2,"endColumn":34},{"ruleId":"167","severity":1,"message":"196","line":2,"column":36,"nodeType":"169","messageId":"170","endLine":2,"endColumn":44},{"ruleId":"167","severity":1,"message":"197","line":75,"column":7,"nodeType":"169","messageId":"170","endLine":75,"endColumn":17},{"ruleId":"171","severity":1,"message":"198","line":48,"column":8,"nodeType":"173","endLine":48,"endColumn":10,"suggestions":"199"},{"ruleId":"171","severity":1,"message":"172","line":27,"column":8,"nodeType":"173","endLine":27,"endColumn":22,"suggestions":"200"},{"ruleId":"167","severity":1,"message":"201","line":12,"column":9,"nodeType":"169","messageId":"170","endLine":12,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":17,"column":8,"nodeType":"173","endLine":17,"endColumn":10,"suggestions":"202"},{"ruleId":"167","severity":1,"message":"183","line":1,"column":16,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"180","line":28,"column":13,"nodeType":"181","endLine":28,"endColumn":87},{"ruleId":"179","severity":1,"message":"180","line":35,"column":13,"nodeType":"181","endLine":35,"endColumn":51},{"ruleId":"179","severity":1,"message":"180","line":56,"column":21,"nodeType":"181","endLine":56,"endColumn":61},{"ruleId":"179","severity":1,"message":"180","line":68,"column":52,"nodeType":"181","endLine":68,"endColumn":79},{"ruleId":"179","severity":1,"message":"180","line":69,"column":33,"nodeType":"181","endLine":69,"endColumn":86},{"ruleId":"179","severity":1,"message":"180","line":83,"column":76,"nodeType":"181","endLine":83,"endColumn":112},{"ruleId":"179","severity":1,"message":"180","line":86,"column":72,"nodeType":"181","endLine":86,"endColumn":115},{"ruleId":"203","severity":1,"message":"204","line":19,"column":35,"nodeType":"205","messageId":"206","endLine":19,"endColumn":37},{"ruleId":"185","severity":1,"message":"186","line":20,"column":26,"nodeType":"187","messageId":"188","endLine":20,"endColumn":28},{"ruleId":"203","severity":1,"message":"204","line":29,"column":35,"nodeType":"205","messageId":"206","endLine":29,"endColumn":37},{"ruleId":"185","severity":1,"message":"186","line":30,"column":26,"nodeType":"187","messageId":"188","endLine":30,"endColumn":28},{"ruleId":"185","severity":1,"message":"207","line":61,"column":70,"nodeType":"187","messageId":"188","endLine":61,"endColumn":72},{"ruleId":"208","severity":1,"message":"209","line":108,"column":21,"nodeType":"210","messageId":"211","endLine":108,"endColumn":47},{"ruleId":"179","severity":1,"message":"180","line":7,"column":9,"nodeType":"181","endLine":7,"endColumn":31},{"ruleId":"167","severity":1,"message":"212","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":13},{"ruleId":"175","replacedBy":"213"},{"ruleId":"177","replacedBy":"214"},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["215"],"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Navigate' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'updateAvatarThunkCreator' is defined but never used.","'Transition' is defined but never used.","'Messages' is defined but never used.","'unfollow' is assigned a value but never used.","'usersAPI' is defined but never used.","'isLoading' is defined but never used.","'setCurrentPage' is defined but never used.","'setUsers' is defined but never used.","'setFriends' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'userId'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["218"],["219"],"'withAuthRedirect' is defined but never used.",["220"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '!==' and instead saw '!='.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'React' is defined but never used.",["216"],["217"],{"desc":"221","fix":"222"},"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"221","fix":"227"},"Update the dependencies array to be: [props]",{"range":"228","text":"229"},"Update the dependencies array to be: [props, userId]",{"range":"230","text":"231"},"Update the dependencies array to be: [props, props.userId]",{"range":"232","text":"233"},{"range":"234","text":"229"},[478,480],"[props]",[1563,1565],"[props, userId]",[944,958],"[props, props.userId]",[667,669]]