{"ast":null,"code":"import{NavLink,Navigate,Route,Routes}from\"react-router-dom\";import css from\"./Messages.module.css\";import React,{useEffect,useState}from\"react\";import SendPostButton from\"../../common/images/send.png\";import WarningImage from\"../../common/images/warning.png\";import DeleteButton from\"../../common/images/delete.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DialogItem=function DialogItem(props){return/*#__PURE__*/_jsxs(\"div\",{className:css.DialogItem,children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return props.deleteFriend(props.userId);},children:/*#__PURE__*/_jsx(\"img\",{width:\"10px\",src:DeleteButton})}),/*#__PURE__*/_jsx(NavLink,{onClick:function onClick(){props.setActiveDialog(props.name);},className:props.messageData.activeDialog===props.name?css.active:null,to:\"/messages/\"+props.name,children:/*#__PURE__*/_jsx(\"span\",{children:props.name})})]});};var MessageItem=function MessageItem(props){return/*#__PURE__*/_jsx(\"div\",{className:css.MessageItem,children:/*#__PURE__*/_jsx(\"div\",{className:css.Message,children:/*#__PURE__*/_jsx(\"span\",{className:css.MessageContent,children:props.message})})});};var idCrutch=0;var Messages=function Messages(props){var text=/*#__PURE__*/React.createRef();var dialogList=props.messageData.friends.map(function(d){return/*#__PURE__*/_jsx(DialogItem,{messageData:props.messageData,setActiveDialog:props.setActiveDialog,userId:d.id,deleteFriend:props.deleteFriend,id:d.id,name:d.name},d.id);});var messageList=props.messageData.dialogs.map(function(m){return/*#__PURE__*/_jsx(Route,{path:m.name,element:m.messages.map(function(ml){return/*#__PURE__*/_jsx(MessageItem,{message:ml.message,name:props.login},idCrutch++);})},m.name);});return/*#__PURE__*/_jsxs(\"div\",{className:css.Messages,children:[/*#__PURE__*/_jsx(\"div\",{className:css.LeftColumn,children:dialogList}),/*#__PURE__*/_jsxs(\"div\",{className:css.RightColumn,children:[/*#__PURE__*/_jsxs(\"div\",{className:css.MessageWarning,children:[/*#__PURE__*/_jsx(\"img\",{src:WarningImage,width:\"40px\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Current version of API doesn't support proper message exchange, this page exist as a space for future improvement!\"})]}),/*#__PURE__*/_jsx(\"div\",{className:css.MessageSpace,children:/*#__PURE__*/_jsx(Routes,{children:messageList})}),/*#__PURE__*/_jsxs(\"div\",{className:css.MessagePanel,children:[/*#__PURE__*/_jsx(\"textarea\",{ref:text,value:props.messageData.newMessageText.message,onChange:function onChange(){return props.textareaChange(text);}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){props.addMessage();},children:/*#__PURE__*/_jsx(\"img\",{src:SendPostButton,width:\"40px\"})})]})]})]});// let messageList;\n// let dialogList = props.messageData.dialogs.map(d => <DialogItem dialogName={d.name} key={d.name}/>);\n// let messages = props.messageData.dialogs.map(m => <Route\n//     path={m.name}\n//     key={m.name}\n//     element={messageList = m.messages.map(ml => <MessageItem message={ml.message} key={ml.message}/>)}>\n// </Route>);\n// let text = React.createRef();\n// return (\n//     <div className={css.Messages}>\n//         <div className={css.leftbar}>\n//             {dialogList}\n//         </div>\n//         <div className={css.rightBar}>\n//             <Routes>\n//                 {messages}\n//             </Routes>\n//             <textarea ref={text}\n//                       value={props.messageData.newMessageText.message}\n//                       onChange={() => props.textareaChange(text)}></textarea>\n//             <br/>\n//             <button onClick={() => {\n//                 props.addMessage()\n//             }}> send\n//             </button>\n//\n//         </div>\n//     </div>\n// );\n};export default Messages;","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/components/Content/Messages/Messages.js"],"names":["NavLink","Navigate","Route","Routes","css","React","useEffect","useState","SendPostButton","WarningImage","DeleteButton","DialogItem","props","deleteFriend","userId","setActiveDialog","name","messageData","activeDialog","active","MessageItem","Message","MessageContent","message","idCrutch","Messages","text","createRef","dialogList","friends","map","d","id","messageList","dialogs","m","messages","ml","login","LeftColumn","RightColumn","MessageWarning","MessageSpace","MessagePanel","newMessageText","textareaChange","addMessage"],"mappings":"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","sourcesContent":["import {NavLink, Navigate, Route, Routes} from \"react-router-dom\";\r\nimport css from \"./Messages.module.css\"\r\nimport React, {useEffect, useState} from \"react\";\r\nimport SendPostButton from \"../../common/images/send.png\";\r\nimport WarningImage from \"../../common/images/warning.png\";\r\nimport DeleteButton from \"../../common/images/delete.png\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return <div className={css.DialogItem}>\r\n        <button onClick={()=>props.deleteFriend(props.userId)}><img width={\"10px\"} src={DeleteButton}/></button>\r\n        <NavLink onClick={() => {\r\n            props.setActiveDialog(props.name)\r\n        }}       className={props.messageData.activeDialog === props.name ? css.active : null}\r\n                 to={\"/messages/\" + props.name}><span>{props.name}</span></NavLink>\r\n    </div>\r\n}\r\nconst MessageItem = (props) => {\r\n    return <div className={css.MessageItem}>\r\n        <div className={css.Message}>\r\n            <span className={css.MessageContent}>{props.message}</span>\r\n        </div>\r\n    </div>\r\n}\r\nlet idCrutch = 0;\r\nconst Messages = (props) => {\r\n\r\n    let text = React.createRef();\r\n    const dialogList = props.messageData.friends.map(d => <DialogItem\r\n        messageData={props.messageData}\r\n        setActiveDialog={props.setActiveDialog}\r\n        userId={d.id}\r\n        deleteFriend={props.deleteFriend}\r\n        id={d.id} name={d.name} key={d.id}/>);\r\n    let messageList = props.messageData.dialogs.map(m => <Route\r\n        path={m.name}\r\n        key={m.name}\r\n        element={m.messages.map(ml => <MessageItem message={ml.message} name={props.login} key={idCrutch++}/>)}/>);\r\n\r\n    return <div className={css.Messages}>\r\n        <div className={css.LeftColumn}>\r\n            {dialogList}\r\n        </div>\r\n        <div className={css.RightColumn}>\r\n            <div className={css.MessageWarning}>\r\n                <img src={WarningImage} width={\"40px\"}/>\r\n                <span>Current version of API doesn't support proper message exchange, this page exist as a space for\r\n                future improvement!</span>\r\n            </div>\r\n            <div className={css.MessageSpace}>\r\n                <Routes>\r\n                    {messageList}\r\n                </Routes>\r\n            </div>\r\n            <div className={css.MessagePanel}>\r\n                <textarea ref={text}\r\n                          value={props.messageData.newMessageText.message}\r\n                          onChange={() => props.textareaChange(text)}/>\r\n                <button onClick={() => {\r\n                    props.addMessage();\r\n                }}><img src={SendPostButton} width={\"40px\"}/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    // let messageList;\r\n    // let dialogList = props.messageData.dialogs.map(d => <DialogItem dialogName={d.name} key={d.name}/>);\r\n    // let messages = props.messageData.dialogs.map(m => <Route\r\n    //     path={m.name}\r\n    //     key={m.name}\r\n    //     element={messageList = m.messages.map(ml => <MessageItem message={ml.message} key={ml.message}/>)}>\r\n    // </Route>);\r\n    // let text = React.createRef();\r\n    // return (\r\n    //     <div className={css.Messages}>\r\n    //         <div className={css.leftbar}>\r\n    //             {dialogList}\r\n    //         </div>\r\n    //         <div className={css.rightBar}>\r\n    //             <Routes>\r\n    //                 {messages}\r\n    //             </Routes>\r\n    //             <textarea ref={text}\r\n    //                       value={props.messageData.newMessageText.message}\r\n    //                       onChange={() => props.textareaChange(text)}></textarea>\r\n    //             <br/>\r\n    //             <button onClick={() => {\r\n    //                 props.addMessage()\r\n    //             }}> send\r\n    //             </button>\r\n    //\r\n    //         </div>\r\n    //     </div>\r\n    // );\r\n}\r\n\r\nexport default Messages;"]},"metadata":{},"sourceType":"module"}