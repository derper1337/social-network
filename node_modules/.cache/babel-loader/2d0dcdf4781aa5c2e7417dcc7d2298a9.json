{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Philippos\\\\Documents\\\\WebDev\\\\ULTRA_REACT\\\\01\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import React,{useEffect}from\"react\";import Messages from\"./Messages\";import{connect}from\"react-redux\";import{withAuthRedirect}from\"../../../HOCs/WIthAuthRedirect\";import{compose}from\"redux\";import{usersAPI}from\"../../../ api/api\";import{useParams}from\"react-router\";import{unfollowThunkCreator}from\"../../../Redux/users-reducer\";import{jsx as _jsx}from\"react/jsx-runtime\";var mapStateToProps=function mapStateToProps(state){return{messageData:state.messageData,login:state.auth.login};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addMessage:function addMessage(){dispatch({type:\"ADD-MESSAGE\"});},textareaChange:function textareaChange(text){dispatch({type:\"CHANGE-MESSAGE\",text:text});},getFriends:function getFriends(){usersAPI.getFriends().then(function(data){dispatch({type:\"SET-FRIENDS\",friends:data.items});dispatch({type:\"SET-DIALOGS\"});});},setActiveDialog:function setActiveDialog(dialogName){dispatch({type:\"SET-ACTIVE-DIALOG\",dialogName:dialogName});},deleteFriend:function deleteFriend(userId){dispatch(unfollowThunkCreator(userId));usersAPI.getFriends().then(function(data){dispatch({type:\"SET-FRIENDS\",friends:data.items});dispatch({type:\"SET-DIALOGS\"});});}};};var MessageAPI=function MessageAPI(props){var userId=Object.values(useParams())[0];useEffect(function(){props.getFriends();props.setActiveDialog(userId);},[]);return/*#__PURE__*/_jsx(Messages,_objectSpread({},props));};export default compose(connect(mapStateToProps,mapDispatchToProps),withAuthRedirect)(MessageAPI);","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/components/Content/Messages/MessageContainer.js"],"names":["React","useEffect","Messages","connect","withAuthRedirect","compose","usersAPI","useParams","unfollowThunkCreator","mapStateToProps","state","messageData","login","auth","mapDispatchToProps","dispatch","addMessage","type","textareaChange","text","getFriends","then","data","friends","items","setActiveDialog","dialogName","deleteFriend","userId","MessageAPI","props","Object","values"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,gBAAR,KAA+B,gCAA/B,CACA,OAAQC,OAAR,KAAsB,OAAtB,CACA,OAAQC,QAAR,KAAuB,mBAAvB,CACA,OAAQC,SAAR,KAAwB,cAAxB,CACA,OAAQC,oBAAR,KAAmC,8BAAnC,C,2CAEA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC7B,MAAO,CACHC,WAAW,CAAED,KAAK,CAACC,WADhB,CAEHC,KAAK,CAACF,KAAK,CAACG,IAAN,CAAWD,KAFd,CAAP,CAIH,CALD,CAMA,GAAIE,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACnC,MAAO,CACHC,UADG,sBACU,CACTD,QAAQ,CAAC,CAACE,IAAI,CAAE,aAAP,CAAD,CAAR,CACH,CAHE,CAIHC,cAJG,yBAIYC,IAJZ,CAIkB,CACjBJ,QAAQ,CAAC,CAACE,IAAI,CAAE,gBAAP,CAAyBE,IAAI,CAAEA,IAA/B,CAAD,CAAR,CACH,CANE,CAOHC,UAPG,sBAOU,CACTd,QAAQ,CAACc,UAAT,GAAsBC,IAAtB,CAA2B,SAAAC,IAAI,CAAI,CAC/BP,QAAQ,CAAC,CAACE,IAAI,CAAE,aAAP,CAAsBM,OAAO,CAAED,IAAI,CAACE,KAApC,CAAD,CAAR,CACAT,QAAQ,CAAC,CAACE,IAAI,CAAE,aAAP,CAAD,CAAR,CACH,CAHD,EAIH,CAZE,CAaHQ,eAbG,0BAaaC,UAbb,CAawB,CACzBX,QAAQ,CAAC,CAACE,IAAI,CAAC,mBAAN,CAA2BS,UAAU,CAACA,UAAtC,CAAD,CAAR,CACD,CAfE,CAgBHC,YAhBG,uBAgBUC,MAhBV,CAgBiB,CAChBb,QAAQ,CAACP,oBAAoB,CAACoB,MAAD,CAArB,CAAR,CACAtB,QAAQ,CAACc,UAAT,GAAsBC,IAAtB,CAA2B,SAAAC,IAAI,CAAI,CAC/BP,QAAQ,CAAC,CAACE,IAAI,CAAE,aAAP,CAAsBM,OAAO,CAAED,IAAI,CAACE,KAApC,CAAD,CAAR,CACAT,QAAQ,CAAC,CAACE,IAAI,CAAE,aAAP,CAAD,CAAR,CACH,CAHD,EAIH,CAtBE,CAAP,CAwBH,CAzBD,CA2BA,GAAIY,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CACxB,GAAIF,CAAAA,MAAM,CAAGG,MAAM,CAACC,MAAP,CAAczB,SAAS,EAAvB,EAA2B,CAA3B,CAAb,CACAN,SAAS,CAAC,UAAM,CACZ6B,KAAK,CAACV,UAAN,GACAU,KAAK,CAACL,eAAN,CAAsBG,MAAtB,EACH,CAHQ,CAGN,EAHM,CAAT,CAIA,mBAAO,KAAC,QAAD,kBAAcE,KAAd,EAAP,CACH,CAPD,CAUA,cAAezB,CAAAA,OAAO,CAClBF,OAAO,CAACM,eAAD,CAAkBK,kBAAlB,CADW,CAElBV,gBAFkB,CAAP,CAGbyB,UAHa,CAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../HOCs/WIthAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {usersAPI} from \"../../../ api/api\";\r\nimport {useParams} from \"react-router\";\r\nimport {unfollowThunkCreator} from \"../../../Redux/users-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messageData: state.messageData,\r\n        login:state.auth.login,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage() {\r\n            dispatch({type: \"ADD-MESSAGE\"});\r\n        },\r\n        textareaChange(text) {\r\n            dispatch({type: \"CHANGE-MESSAGE\", text: text});\r\n        },\r\n        getFriends() {\r\n            usersAPI.getFriends().then(data => {\r\n                dispatch({type: \"SET-FRIENDS\", friends: data.items});\r\n                dispatch({type: \"SET-DIALOGS\"})\r\n            });\r\n        },\r\n        setActiveDialog(dialogName){\r\n          dispatch({type:\"SET-ACTIVE-DIALOG\", dialogName:dialogName})\r\n        },\r\n        deleteFriend(userId){\r\n            dispatch(unfollowThunkCreator(userId));\r\n            usersAPI.getFriends().then(data => {\r\n                dispatch({type: \"SET-FRIENDS\", friends: data.items});\r\n                dispatch({type: \"SET-DIALOGS\"})\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nlet MessageAPI = (props) => {\r\n    let userId = Object.values(useParams())[0];\r\n    useEffect(() => {\r\n        props.getFriends();\r\n        props.setActiveDialog(userId);\r\n    }, [])\r\n    return <Messages {...props}/>\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(MessageAPI);"]},"metadata":{},"sourceType":"module"}