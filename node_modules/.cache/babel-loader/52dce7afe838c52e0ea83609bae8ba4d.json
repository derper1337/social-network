{"ast":null,"code":"let initValue = {\n  users: [{\n    id: 1,\n    isFollowed: true,\n    name: \"dmitry\",\n    status: \"1 hundred bucks...\",\n    location: \"jopa\"\n  }, {\n    id: 2,\n    isFollowed: false,\n    name: \"stepa\",\n    status: \"2 hundred bucks...\",\n    location: \"jopa\"\n  }, {\n    id: 3,\n    isFollowed: false,\n    name: \"petya\",\n    status: \"3 hundred bucks...\",\n    location: \"jopa\"\n  }, {\n    id: 4,\n    isFollowed: true,\n    name: \"govena\",\n    status: \"4 hundred bucks...\",\n    location: \"jopa\"\n  }]\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initValue;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FOLLOW\":\n      {\n        return { ...state,\n          users: state.users.map(u => {\n            if (u.id === action.userID) {\n              return { ...u,\n                isFollowed: true\n              };\n            }\n          })\n        };\n      }\n\n    case \"UNFOLLOW\":\n      {\n        return { ...state,\n          users: state.users.map(u => {\n            if (u.id === action.userID) {\n              return { ...u,\n                isFollowed: false\n              };\n            }\n          })\n        };\n      }\n\n    case \"SET-USERS\":\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userID => ({\n  type: \"FOLLOW\",\n  userID\n});\nexport const unfollowAC = userID => ({\n  type: \"UNFOLLOW\",\n  userID\n});\nexport const setUsersAC = users => ({\n  type: \"SET-USERS\",\n  users\n});\nexport default usersReducer;","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/Redux/users-reducer.js"],"names":["initValue","users","id","isFollowed","name","status","location","usersReducer","state","action","type","map","u","userID","followAC","unfollowAC","setUsersAC"],"mappings":"AAAA,IAAIA,SAAS,GAAG;AACZC,EAAAA,KAAK,EAAE,CACH;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,UAAU,EAAE,IAApB;AAA0BC,IAAAA,IAAI,EAAE,QAAhC;AAA0CC,IAAAA,MAAM,EAAE,oBAAlD;AAAwEC,IAAAA,QAAQ,EAAE;AAAlF,GADG,EAEH;AAACJ,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,UAAU,EAAE,KAApB;AAA2BC,IAAAA,IAAI,EAAE,OAAjC;AAA0CC,IAAAA,MAAM,EAAE,oBAAlD;AAAwEC,IAAAA,QAAQ,EAAE;AAAlF,GAFG,EAGH;AAACJ,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,UAAU,EAAE,KAApB;AAA2BC,IAAAA,IAAI,EAAE,OAAjC;AAA0CC,IAAAA,MAAM,EAAE,oBAAlD;AAAwEC,IAAAA,QAAQ,EAAE;AAAlF,GAHG,EAIH;AAACJ,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,UAAU,EAAE,IAApB;AAA0BC,IAAAA,IAAI,EAAE,QAAhC;AAA0CC,IAAAA,MAAM,EAAE,oBAAlD;AAAwEC,IAAAA,QAAQ,EAAE;AAAlF,GAJG;AADK,CAAhB;;AAUA,MAAMC,YAAY,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBR,SAAsB;AAAA,MAAXS,MAAW;;AAEhD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AAAe;AACX,eAAO,EACH,GAAGF,KADA;AAEHP,UAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgBC,CAAC,IAAI;AACxB,gBAAIA,CAAC,CAACV,EAAF,KAASO,MAAM,CAACI,MAApB,EAA4B;AACxB,qBAAO,EAAC,GAAGD,CAAJ;AAAOT,gBAAAA,UAAU,EAAE;AAAnB,eAAP;AACH;AACJ,WAJM;AAFJ,SAAP;AAQH;;AACD,SAAK,UAAL;AAAiB;AACb,eAAO,EACH,GAAGK,KADA;AAEHP,UAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgBC,CAAC,IAAI;AACxB,gBAAIA,CAAC,CAACV,EAAF,KAASO,MAAM,CAACI,MAApB,EAA4B;AACxB,qBAAO,EAAC,GAAGD,CAAJ;AAAOT,gBAAAA,UAAU,EAAE;AAAnB,eAAP;AACH;AACJ,WAJM;AAFJ,SAAP;AAQH;;AACD,SAAK,WAAL;AAAiB;AACb,eAAO,EAAC,GAAGK,KAAJ;AAAWP,UAAAA,KAAK,EAAEQ,MAAM,CAACR;AAAzB,SAAP;AACH;;AACD;AACI,aAAOO,KAAP;AAzBR;AA2BH,CA7BD;;AA8BA,OAAO,MAAMM,QAAQ,GAAID,MAAD,KAAa;AAACH,EAAAA,IAAI,EAAE,QAAP;AAAiBG,EAAAA;AAAjB,CAAb,CAAjB;AACP,OAAO,MAAME,UAAU,GAAIF,MAAD,KAAa;AAACH,EAAAA,IAAI,EAAE,UAAP;AAAmBG,EAAAA;AAAnB,CAAb,CAAnB;AACP,OAAO,MAAMG,UAAU,GAAIf,KAAD,KAAY;AAACS,EAAAA,IAAI,EAAE,WAAP;AAAoBT,EAAAA;AAApB,CAAZ,CAAnB;AACP,eAAeM,YAAf","sourcesContent":["let initValue = {\r\n    users: [\r\n        {id: 1, isFollowed: true, name: \"dmitry\", status: \"1 hundred bucks...\", location: \"jopa\"},\r\n        {id: 2, isFollowed: false, name: \"stepa\", status: \"2 hundred bucks...\", location: \"jopa\"},\r\n        {id: 3, isFollowed: false, name: \"petya\", status: \"3 hundred bucks...\", location: \"jopa\"},\r\n        {id: 4, isFollowed: true, name: \"govena\", status: \"4 hundred bucks...\", location: \"jopa\"}\r\n    ]\r\n\r\n\r\n};\r\nconst usersReducer = (state = initValue, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"FOLLOW\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, isFollowed: true}\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        case \"UNFOLLOW\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, isFollowed: false}\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        case \"SET-USERS\":{\r\n            return {...state, users: action.users}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const followAC = (userID) => ({type: \"FOLLOW\", userID});\r\nexport const unfollowAC = (userID) => ({type: \"UNFOLLOW\", userID});\r\nexport const setUsersAC = (users) => ({type: \"SET-USERS\", users});\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}