{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Philippos\\\\Documents\\\\WebDev\\\\ULTRA_REACT\\\\01\\\\src\\\\components\\\\Content\\\\Users\\\\UsersAPI.js\";\nimport React from \"react\";\nimport Users from \"./Users\";\nimport Preloader from \"../../common/preloader/preloader\";\nimport { usersAPI } from \"../../../ api/api\";\nimport { getUsersThunkCreator } from \"../../../Redux/users-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UsersAPI extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChange = pageNumber => {\n      this.props.isLoading(true);\n      this.props.setCurrentPage(pageNumber);\n      usersAPI.getUsersPage(pageNumber, this.props.pageInfo.pageSize).then(data => {\n        this.props.setUsers(data.items);\n        this.props.isLoading(false);\n      });\n    };\n  }\n\n  componentDidMount() {\n    getUsersThunkCreator(this.props.pageInfo.currentPage, this.props.pageInfo.pageSize); // this.props.isLoading(true);\n    // usersAPI.getUsersPage(this.props.pageInfo.currentPage, this.props.pageInfo.pageSize)\n    //     .then(data => {\n    //         this.props.setUsers(data.items);\n    //         this.props.isLoading(false);\n    //     });\n  }\n\n  render() {\n    return this.props.pageInfo.isLoading ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 48\n    }, this) : /*#__PURE__*/_jsxDEV(Users, { ...this.props,\n      onPageChange: this.onPageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UsersAPI;","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/components/Content/Users/UsersAPI.js"],"names":["React","Users","Preloader","usersAPI","getUsersThunkCreator","UsersAPI","Component","onPageChange","pageNumber","props","isLoading","setCurrentPage","getUsersPage","pageInfo","pageSize","then","data","setUsers","items","componentDidMount","currentPage","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AACA,SAAQC,oBAAR,QAAmC,8BAAnC;;;AAEA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAYnCC,YAZmC,GAYnBC,UAAD,IAAgB;AAC3B,WAAKC,KAAL,CAAWC,SAAX,CAAqB,IAArB;AACA,WAAKD,KAAL,CAAWE,cAAX,CAA0BH,UAA1B;AAEAL,MAAAA,QAAQ,CAACS,YAAT,CAAsBJ,UAAtB,EAAkC,KAAKC,KAAL,CAAWI,QAAX,CAAoBC,QAAtD,EACKC,IADL,CACUC,IAAI,IAAI;AACV,aAAKP,KAAL,CAAWQ,QAAX,CAAoBD,IAAI,CAACE,KAAzB;AACA,aAAKT,KAAL,CAAWC,SAAX,CAAqB,KAArB;AACH,OAJL;AAKH,KArBkC;AAAA;;AAEnCS,EAAAA,iBAAiB,GAAG;AAChBf,IAAAA,oBAAoB,CAAC,KAAKK,KAAL,CAAWI,QAAX,CAAoBO,WAArB,EAAkC,KAAKX,KAAL,CAAWI,QAAX,CAAoBC,QAAtD,CAApB,CADgB,CAEhB;AACA;AACA;AACA;AACA;AACA;AACH;;AAaDO,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKZ,KAAL,CAAWI,QAAX,CAAoBH,SAApB,gBAAgC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAhC,gBACH,QAAC,KAAD,OAAW,KAAKD,KAAhB;AAAuB,MAAA,YAAY,EAAE,KAAKF;AAA1C;AAAA;AAAA;AAAA;AAAA,YADJ;AAEH;;AA1BkC;;AA6BvC,eAAeF,QAAf","sourcesContent":["import React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport {usersAPI} from \"../../../ api/api\";\r\nimport {getUsersThunkCreator} from \"../../../Redux/users-reducer\";\r\n\r\nclass UsersAPI extends React.Component {\r\n\r\n    componentDidMount() {\r\n        getUsersThunkCreator(this.props.pageInfo.currentPage, this.props.pageInfo.pageSize);\r\n        // this.props.isLoading(true);\r\n        // usersAPI.getUsersPage(this.props.pageInfo.currentPage, this.props.pageInfo.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.setUsers(data.items);\r\n        //         this.props.isLoading(false);\r\n        //     });\r\n    }\r\n\r\n    onPageChange = (pageNumber) => {\r\n        this.props.isLoading(true);\r\n        this.props.setCurrentPage(pageNumber);\r\n\r\n        usersAPI.getUsersPage(pageNumber, this.props.pageInfo.pageSize)\r\n            .then(data => {\r\n                this.props.setUsers(data.items);\r\n                this.props.isLoading(false);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return this.props.pageInfo.isLoading ? <Preloader/> :\r\n            <Users {...this.props} onPageChange={this.onPageChange}/>\r\n    }\r\n}\r\n\r\nexport default UsersAPI;\r\n"]},"metadata":{},"sourceType":"module"}