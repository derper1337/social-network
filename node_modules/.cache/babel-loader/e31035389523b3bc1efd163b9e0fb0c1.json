{"ast":null,"code":"let initValue = {\n  users: [{\n    id: 0,\n    isFollowed: true,\n    name: \"dmitry\",\n    status: \"1 hundred bucks...\",\n    location: \"jopa\"\n  }, {\n    id: 1,\n    isFollowed: false,\n    name: \"stepa\",\n    status: \"2 hundred bucks...\",\n    location: \"jopa\"\n  }, {\n    id: 2,\n    isFollowed: false,\n    name: \"petya\",\n    status: \"3 hundred bucks...\",\n    location: \"jopa\"\n  }, {\n    id: 3,\n    isFollowed: true,\n    name: \"govena\",\n    status: \"4 hundred bucks...\",\n    location: \"jopa\"\n  }]\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initValue;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FOLLOW\":\n      {\n        return { ...state,\n          users: state.users.map(us => {\n            if (us.id === action.userID) {\n              return { ...us,\n                isFollowed: true\n              };\n            }\n          })\n        };\n      }\n\n    case \"UNFOLLOW\":\n      {\n        //     let stateCopy = {...state};\n        //     stateCopy.users = [...state.users];\n        console.log(state.users[action.userId].name);\n        state.users[action.userId].isFollowed = false;\n        return state; // action.data.isFollowed=!action.data.isFollowed;\n        // alert(action.data.isFollowed);\n        // // return {\n        //     ...state,\n        //     users: state.users.map(u => {\n        //         if (u.id === action.userID) {\n        //             return {...u, isFollowed: false};\n        //         }\n        //     })\n        // }\n      }\n\n    case \"SET-USERS\":\n      {//     return {...state, users: [...state.users, ...action.users]}\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/Redux/users-reducer.js"],"names":["initValue","users","id","isFollowed","name","status","location","usersReducer","state","action","type","map","us","userID","console","log","userId"],"mappings":"AAAA,IAAIA,SAAS,GAAG;AACZC,EAAAA,KAAK,EAAE,CACH;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,UAAU,EAAE,IAApB;AAA0BC,IAAAA,IAAI,EAAE,QAAhC;AAA0CC,IAAAA,MAAM,EAAE,oBAAlD;AAAwEC,IAAAA,QAAQ,EAAE;AAAlF,GADG,EAEH;AAACJ,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,UAAU,EAAE,KAApB;AAA2BC,IAAAA,IAAI,EAAE,OAAjC;AAA0CC,IAAAA,MAAM,EAAE,oBAAlD;AAAwEC,IAAAA,QAAQ,EAAE;AAAlF,GAFG,EAGH;AAACJ,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,UAAU,EAAE,KAApB;AAA2BC,IAAAA,IAAI,EAAE,OAAjC;AAA0CC,IAAAA,MAAM,EAAE,oBAAlD;AAAwEC,IAAAA,QAAQ,EAAE;AAAlF,GAHG,EAIH;AAACJ,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,UAAU,EAAE,IAApB;AAA0BC,IAAAA,IAAI,EAAE,QAAhC;AAA0CC,IAAAA,MAAM,EAAE,oBAAlD;AAAwEC,IAAAA,QAAQ,EAAE;AAAlF,GAJG;AADK,CAAhB;;AAUA,MAAMC,YAAY,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBR,SAAsB;AAAA,MAAXS,MAAW;;AAEhD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AAAe;AACX,eAAO,EACH,GAAGF,KADA;AAEHP,UAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgBC,EAAE,IAAI;AACzB,gBAAIA,EAAE,CAACV,EAAH,KAAUO,MAAM,CAACI,MAArB,EAA6B;AACzB,qBAAO,EAAC,GAAGD,EAAJ;AAAQT,gBAAAA,UAAU,EAAE;AAApB,eAAP;AACH;AACJ,WAJM;AAFJ,SAAP;AAQH;;AACD,SAAK,UAAL;AAAiB;AACjB;AACA;AACIW,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACP,KAAN,CAAYQ,MAAM,CAACO,MAAnB,EAA2BZ,IAAvC;AACAI,QAAAA,KAAK,CAACP,KAAN,CAAYQ,MAAM,CAACO,MAAnB,EAA2Bb,UAA3B,GAAwC,KAAxC;AACA,eAAOK,KAAP,CALa,CAMb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AACD,SAAK,WAAL;AAAiB,OAClB;AACE;;AACD;AACI,aAAOA,KAAP;AAhCR;AAkCH,CApCD;;AAsCA,eAAeD,YAAf","sourcesContent":["let initValue = {\r\n    users: [\r\n        {id: 0, isFollowed: true, name: \"dmitry\", status: \"1 hundred bucks...\", location: \"jopa\"},\r\n        {id: 1, isFollowed: false, name: \"stepa\", status: \"2 hundred bucks...\", location: \"jopa\"},\r\n        {id: 2, isFollowed: false, name: \"petya\", status: \"3 hundred bucks...\", location: \"jopa\"},\r\n        {id: 3, isFollowed: true, name: \"govena\", status: \"4 hundred bucks...\", location: \"jopa\"}\r\n    ]\r\n\r\n\r\n};\r\nconst usersReducer = (state = initValue, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"FOLLOW\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(us => {\r\n                    if (us.id === action.userID) {\r\n                        return {...us, isFollowed: true};\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        case \"UNFOLLOW\": {\r\n        //     let stateCopy = {...state};\r\n        //     stateCopy.users = [...state.users];\r\n            console.log(state.users[action.userId].name)\r\n            state.users[action.userId].isFollowed = false;\r\n            return state;\r\n            // action.data.isFollowed=!action.data.isFollowed;\r\n            // alert(action.data.isFollowed);\r\n            // // return {\r\n            //     ...state,\r\n            //     users: state.users.map(u => {\r\n            //         if (u.id === action.userID) {\r\n            //             return {...u, isFollowed: false};\r\n            //         }\r\n            //     })\r\n            // }\r\n        }\r\n        case \"SET-USERS\":{\r\n       //     return {...state, users: [...state.users, ...action.users]}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}