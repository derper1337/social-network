{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Philippos\\\\Documents\\\\WebDev\\\\ULTRA_REACT\\\\01\\\\src\\\\components\\\\Content\\\\Login\\\\Login.js\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { loginThunkCreator } from \"../../../Redux/auth-reducer\";\nimport { Navigate } from \"react-router-dom\";\nimport React from \"react\";\nimport css from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  // formik consts\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n\n  const validate = values => {\n    let errors = {};\n\n    if (!values.email) {\n      errors.email = \"Required field\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Required field\";\n    }\n\n    return errors;\n  };\n\n  const onSubmit = (values, _ref) => {\n    let {\n      setStatus\n    } = _ref;\n    props.loginThunkCreator(values.email, values.password, values.rememberMe, setStatus);\n  };\n\n  if (props.isAuth) return /*#__PURE__*/_jsxDEV(Navigate, {\n    replace: true,\n    to: \"/profile\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 30\n  }, this);else return /*#__PURE__*/_jsxDEV(Formik, {\n    onSubmit: onSubmit,\n    initialValues: initialValues,\n    validate: validate,\n    children: _ref2 => {\n      let {\n        status\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        className: css.Login,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.LoginContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: 'email',\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: 'email',\n            id: 'email',\n            name: 'email'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.Error,\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: 'password',\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: 'password',\n            id: 'password',\n            name: 'password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.Error,\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              className: css.Error,\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \" Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Login;\n\nlet mapStateToProps = state => {\n  return {\n    isAuth: state.auth.loggedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginThunkCreator\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/components/Content/Login/Login.js"],"names":["ErrorMessage","Formik","Form","Field","connect","loginThunkCreator","Navigate","React","css","Login","props","initialValues","email","password","validate","values","errors","onSubmit","setStatus","rememberMe","isAuth","status","LoginContainer","Error","mapStateToProps","state","auth","loggedIn"],"mappings":"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","sourcesContent":["import {ErrorMessage, Formik, Form, Field} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../../Redux/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport css from \"./Login.module.css\"\r\n\r\nconst Login = (props) => {\r\n    // formik consts\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n    const validate = (values) => {\r\n        let errors = {};\r\n        if (!values.email) {\r\n            errors.email = \"Required field\";\r\n        }\r\n        if (!values.password) {\r\n            errors.password = \"Required field\";\r\n        }\r\n        return errors;\r\n    }\r\n    const onSubmit = (values, {setStatus}) => {\r\n        props.loginThunkCreator(values.email, values.password, values.rememberMe, setStatus);\r\n    }\r\n\r\n    if (props.isAuth) return <Navigate replace to=\"/profile\"/>\r\n    else return (\r\n        <Formik onSubmit={onSubmit} initialValues={initialValues} validate={validate}>\r\n            {({status}) => (\r\n                <Form className={css.Login}>\r\n                    <div className={css.LoginContainer}>\r\n                        <div>{status}</div>\r\n                        <label htmlFor={'email'}>Email</label>\r\n                        <Field type={'email'} id={'email'} name={'email'}/>\r\n                        <div className={css.Error}><ErrorMessage name={\"email\"}/></div>\r\n\r\n                        <label htmlFor={'password'}>Password</label>\r\n                        <Field type={'password'} id={'password'} name={'password'}/>\r\n                        <div className={css.Error}><ErrorMessage className={css.Error} name={\"password\"}/></div>\r\n                        <button type='submit'> Submit</button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.loggedIn,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {loginThunkCreator})(Login);"]},"metadata":{},"sourceType":"module"}