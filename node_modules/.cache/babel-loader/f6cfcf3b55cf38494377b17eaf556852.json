{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Philippos\\\\Documents\\\\WebDev\\\\ULTRA_REACT\\\\01\\\\src\\\\components\\\\Content\\\\Profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport css from \"./Profile.module.css\";\nimport React, { PureComponent, useEffect, useState } from \"react\";\nimport Preloader from \"../../common/preloader/preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.Post,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Post;\n\nclass ProfileStatus extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      editMode: false,\n      status: this.props.status\n    };\n\n    this.onStatusChange = e => {\n      this.setState({\n        status: e.currentTarget.value\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({\n        status: this.props.status\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", this.state.editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.onStatusChange,\n          value: this.state.status,\n          onBlur: () => {\n            this.setState({\n              editMode: false\n            });\n            this.props.updateStatus(this.state.status);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            this.setState({\n              editMode: true\n            });\n          },\n          children: this.props.status || \"no status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst Profile = props => {\n  _s();\n\n  let postElements = props.ProfileData.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    text: p.text\n  }, p.text, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 57\n  }, this));\n  let text = /*#__PURE__*/React.createRef();\n  const [editMode, setEditMode] = useState(false);\n  const [localProfile, setLocalProfile] = useState({});\n  useEffect(() => {\n    setLocalProfile({ ...props.ProfileData.profile\n    });\n  }, [props.ProfileData.profile]);\n\n  if (!props.ProfileData.profile) {\n    return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.Profile,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.Name,\n      children: props.ProfileData.profile.fullName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.AboutMe,\n      children: [\"About me: \", localProfile.aboutMe ? localProfile.aboutMe : \"no info\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {},\n      children: [\" \", editMode ? \"change profile info\" : \"submit changes\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this); // return (\n  //     <div className={css.Profile}>\n  //         <div className={css.ProfileName}>{props.ProfileData.profile.fullName}</div>\n  //         <img className={css.ProfilePicture}\n  //              src={props.ProfileData.profile.photos.large}/>\n  //         <br/>\n  //         <div>\n  //             {props.isOwner && <input type={\"file\"}/>}\n  //         </div>\n  //         <ProfileStatus status={props.ProfileData.status} updateStatus={props.updateStatus}/>\n  //         <br/>\n  //         <textarea onChange={() => props.textareaChange(text)}\n  //                   ref={text}\n  //                   value={props.ProfileData.newPostText.text}>\n  //         </textarea>\n  //         <br/>\n  //         <button onClick={() => {\n  //             props.addPost();\n  //         }}>Add new post\n  //         </button>\n  //         <br/>\n  //         <div className={css.MyPosts}>\n  //             {postElements}\n  //         </div>\n  //     </div>);\n};\n\n_s(Profile, \"9ibWErgunSd2rsZy9AaQ97z1J+k=\");\n\n_c2 = Profile;\nexport default Profile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/components/Content/Profile/Profile.js"],"names":["css","React","PureComponent","useEffect","useState","Preloader","Post","props","text","ProfileStatus","state","editMode","status","onStatusChange","e","setState","currentTarget","value","componentDidUpdate","prevProps","prevState","render","updateStatus","Profile","postElements","ProfileData","posts","map","p","createRef","setEditMode","localProfile","setLocalProfile","profile","Name","fullName","AboutMe","aboutMe"],"mappings":"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","sourcesContent":["import css from \"./Profile.module.css\"\r\nimport React, {PureComponent, useEffect, useState} from \"react\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\n\r\nconst Post = (props) => {\r\n    return <div className={css.Post}>\r\n        {props.text}\r\n    </div>\r\n}\r\nclass ProfileStatus extends PureComponent {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({status: e.currentTarget.value})\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <div> {this.state.editMode ? <input onChange={this.onStatusChange} value={this.state.status} onBlur={() => {\r\n                this.setState({editMode: false});\r\n                this.props.updateStatus(this.state.status);\r\n            }}/> : <div onClick={() => {\r\n                this.setState({editMode: true});\r\n            }}>{this.props.status || \"no status\"}</ div>}\r\n            </div>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst Profile = (props) => {\r\n    let postElements = props.ProfileData.posts.map(p => <Post text={p.text} key={p.text}/>);\r\n    let text = React.createRef();\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [localProfile, setLocalProfile] = useState({});\r\n    useEffect(()=>{\r\n        setLocalProfile({...props.ProfileData.profile});\r\n    }, [props.ProfileData.profile])\r\n\r\n\r\n    if (!props.ProfileData.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={css.Profile}>\r\n            <div className={css.Name}>{props.ProfileData.profile.fullName}</div>\r\n\r\n            <div className={css.AboutMe}>\r\n                {\"About me: \"}\r\n                {localProfile.aboutMe ? localProfile.aboutMe : \"no info\"}\r\n            </div>\r\n\r\n            <button onClick={()=>{\r\n\r\n            }}> {editMode ? \"change profile info\" : \"submit changes\"} </button>\r\n        </div>\r\n    );\r\n    // return (\r\n    //     <div className={css.Profile}>\r\n    //         <div className={css.ProfileName}>{props.ProfileData.profile.fullName}</div>\r\n    //         <img className={css.ProfilePicture}\r\n    //              src={props.ProfileData.profile.photos.large}/>\r\n    //         <br/>\r\n    //         <div>\r\n    //             {props.isOwner && <input type={\"file\"}/>}\r\n    //         </div>\r\n    //         <ProfileStatus status={props.ProfileData.status} updateStatus={props.updateStatus}/>\r\n    //         <br/>\r\n    //         <textarea onChange={() => props.textareaChange(text)}\r\n    //                   ref={text}\r\n    //                   value={props.ProfileData.newPostText.text}>\r\n    //         </textarea>\r\n    //         <br/>\r\n    //         <button onClick={() => {\r\n    //             props.addPost();\r\n    //         }}>Add new post\r\n    //         </button>\r\n    //         <br/>\r\n    //         <div className={css.MyPosts}>\r\n    //             {postElements}\r\n    //         </div>\r\n    //     </div>);\r\n}\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}