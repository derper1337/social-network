{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Philippos\\\\Documents\\\\WebDev\\\\ULTRA_REACT\\\\01\\\\src\\\\components\\\\Content\\\\Profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport css from \"./Profile.module.css\";\nimport React, { PureComponent, useEffect, useState } from \"react\";\nimport Preloader from \"../../common/preloader/preloader\";\nimport { updateAvatarThunkCreator } from \"../../../Redux/profileReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.Post,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Post;\n\nclass ProfileStatus extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      editMode: false,\n      status: this.props.status\n    };\n\n    this.onStatusChange = e => {\n      this.setState({\n        status: e.currentTarget.value\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({\n        status: this.props.status\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", this.state.editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.onStatusChange,\n          value: this.state.status,\n          onBlur: () => {\n            this.setState({\n              editMode: false\n            });\n            this.props.updateStatus(this.state.status);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            this.setState({\n              editMode: true\n            });\n          },\n          children: this.props.status || \"no status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst Profile = props => {\n  _s();\n\n  let postElements = props.ProfileData.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    text: p.text\n  }, p.text, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 57\n  }, this));\n  let text = /*#__PURE__*/React.createRef();\n  const [editMode, setEditMode] = useState(false);\n  const [localProfile, setLocalProfile] = useState({});\n  useEffect(() => {\n    setLocalProfile({ ...props.ProfileData.profile\n    });\n  }, [props.ProfileData.profile]);\n\n  if (!props.ProfileData.profile) {\n    return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.Profile,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.Columns,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.LeftColumn,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: css.ProfilePicture,\n          src: props.ProfileData.profile.photos.large ? props.ProfileData.profile.photos.large : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"avatar\",\n            onChange: () => {\n              let avatar = document.getElementById('avatar').files[0];\n              props.updateAvatarThunkCreator(avatar);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.RightColumn,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: css.Name,\n            children: props.ProfileData.profile.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.Status,\n          children: /*#__PURE__*/_jsxDEV(ProfileStatus, {\n            status: props.ProfileData.status,\n            updateStatus: props.updateStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.Info,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.AboutMe,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline\"\n              },\n              children: \"About me:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                display: \"inline\"\n              },\n              onChange: event => {\n                setLocalProfile({ ...localProfile,\n                  aboutMe: event.currentTarget.value\n                });\n              },\n              type: \"text\",\n              value: localProfile.aboutMe || \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline\"\n              },\n              children: localProfile.aboutMe ? localProfile.aboutMe : \" no info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.LookingForAJob,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline\"\n              },\n              children: \"Looking for a Job:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: () => {\n                setLocalProfile({ ...localProfile,\n                  lookingForAJob: !localProfile.lookingForAJob,\n                  lookingForAJobDescription: \"nothing here\"\n                });\n              },\n              type: \"checkbox\",\n              checked: localProfile.lookingForAJob\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline\"\n              },\n              children: localProfile.lookingForAJob ? \"yes\" : \"no\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.Contacts,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline\"\n              },\n              children: \"vk:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                display: \"inline\"\n              },\n              onChange: event => {\n                setLocalProfile({ ...localProfile,\n                  contacts: { ...localProfile.contacts,\n                    vk: event.currentTarget.value\n                  }\n                });\n              },\n              type: \"text\",\n              value: localProfile.contacts.vk || \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline\"\n              },\n              children: localProfile.contacts ? localProfile.contacts.vk ? localProfile.contacts.vk : \" no info\" : \" no info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.Contacts,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline\"\n              },\n              children: \"github:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                display: \"inline\"\n              },\n              onChange: event => {\n                setLocalProfile({ ...localProfile,\n                  contacts: { ...localProfile.contacts,\n                    github: event.currentTarget.value\n                  }\n                });\n              },\n              type: \"text\",\n              value: localProfile.contacts.github || \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline\"\n              },\n              children: localProfile.contacts ? localProfile.contacts.github ? localProfile.contacts.github : \" no info\" : \" no info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.Contacts,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline\"\n              },\n              children: \"website:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                display: \"inline\"\n              },\n              onChange: event => {\n                setLocalProfile({ ...localProfile,\n                  contacts: { ...localProfile.contacts,\n                    website: event.currentTarget.value\n                  }\n                });\n              },\n              type: \"text\",\n              value: localProfile.contacts.website || \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline\"\n              },\n              children: localProfile.contacts ? localProfile.contacts.website ? localProfile.contacts.website : \" no info\" : \" no info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), props.myId === props.userId ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (editMode) props.updateProfileThunkCreator(localProfile);\n        setEditMode(!editMode);\n      },\n      children: [\" \", editMode ? \"submit changes\" : \"change profile info\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 42\n    }, this) : null, \";\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: () => props.textareaChange(text),\n      ref: text,\n      value: props.ProfileData.newPostText.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        props.addPost();\n      },\n      children: \"Add new post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.MyPosts,\n      children: postElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this); // return (\n  //     <div className={css.Profile}>\n  //         <div className={css.ProfileName}>{props.ProfileData.profile.fullName}</div>\n  //         <img className={css.ProfilePicture}\n  //              src={props.ProfileData.profile.photos.large}/>\n  //         <br/>\n  //         <div>\n  //             {props.isOwner && <input type={\"file\"}/>}\n  //         </div>\n  //         <ProfileStatus status={props.ProfileData.status} updateStatus={props.updateStatus}/>\n  //         <br/>\n  //         <textarea onChange={() => props.textareaChange(text)}\n  //                   ref={text}\n  //                   value={props.ProfileData.newPostText.text}>\n  //         </textarea>\n  //         <br/>\n  //         <button onClick={() => {\n  //             props.addPost();\n  //         }}>Add new post\n  //         </button>\n  //         <br/>\n  //         <div className={css.MyPosts}>\n  //             {postElements}\n  //         </div>\n  //     </div>);\n};\n\n_s(Profile, \"9ibWErgunSd2rsZy9AaQ97z1J+k=\");\n\n_c2 = Profile;\nexport default Profile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/components/Content/Profile/Profile.js"],"names":["css","React","PureComponent","useEffect","useState","Preloader","updateAvatarThunkCreator","Post","props","text","ProfileStatus","state","editMode","status","onStatusChange","e","setState","currentTarget","value","componentDidUpdate","prevProps","prevState","render","updateStatus","Profile","postElements","ProfileData","posts","map","p","createRef","setEditMode","localProfile","setLocalProfile","profile","Columns","LeftColumn","ProfilePicture","photos","large","avatar","document","getElementById","files","RightColumn","Name","fullName","Status","Info","AboutMe","display","event","aboutMe","LookingForAJob","lookingForAJob","lookingForAJobDescription","Contacts","contacts","vk","github","website","myId","userId","updateProfileThunkCreator","textareaChange","newPostText","addPost","MyPosts"],"mappings":"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","sourcesContent":["import css from \"./Profile.module.css\"\r\nimport React, {PureComponent, useEffect, useState} from \"react\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport {updateAvatarThunkCreator} from \"../../../Redux/profileReducer\";\r\n\r\nconst Post = (props) => {\r\n    return <div className={css.Post}>\r\n        {props.text}\r\n    </div>\r\n}\r\n\r\nclass ProfileStatus extends PureComponent {\r\n    state = {\r\n        editMode: false, status: this.props.status,\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({status: e.currentTarget.value})\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <div> {this.state.editMode ? <input onChange={this.onStatusChange} value={this.state.status} onBlur={() => {\r\n                this.setState({editMode: false});\r\n                this.props.updateStatus(this.state.status);\r\n            }}/> : <div onClick={() => {\r\n                this.setState({editMode: true});\r\n            }}>{this.props.status || \"no status\"}</ div>}\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst Profile = (props) => {\r\n    let postElements = props.ProfileData.posts.map(p => <Post text={p.text} key={p.text}/>);\r\n    let text = React.createRef();\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [localProfile, setLocalProfile] = useState({});\r\n    useEffect(() => {\r\n        setLocalProfile({...props.ProfileData.profile});\r\n    }, [props.ProfileData.profile])\r\n\r\n    if (!props.ProfileData.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (<div className={css.Profile}>\r\n\r\n        <div className={css.Columns}>\r\n            <div className={css.LeftColumn}>\r\n                <img className={css.ProfilePicture}\r\n                     src={props.ProfileData.profile.photos.large ? props.ProfileData.profile.photos.large : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"}/>\r\n                {editMode\r\n                    ? <div>Изменить аватар: <input type={\"file\"} id={\"avatar\"} onChange={() => {\r\n                        let avatar = document.getElementById('avatar').files[0];\r\n                        props.updateAvatarThunkCreator(avatar);\r\n                    }}/></div>\r\n                    : null\r\n                }\r\n            </div>\r\n\r\n            <div className={css.RightColumn}>\r\n                <div><span className={css.Name}>{props.ProfileData.profile.fullName}</span></div>\r\n                <div className={css.Status}><ProfileStatus status={props.ProfileData.status}\r\n                                                           updateStatus={props.updateStatus}/></div>\r\n\r\n                <div className={css.Info}>\r\n                    {/*about me*/}\r\n                    <div className={css.AboutMe}>\r\n                        <div style={{display: \"inline\"}}>About me:</div>\r\n                        {editMode\r\n                            ? <input style={{display: \"inline\"}} onChange={(event) => {\r\n                                setLocalProfile({...localProfile, aboutMe: event.currentTarget.value})\r\n                            }\r\n                            } type={\"text\"} value={localProfile.aboutMe || \"\"}/>\r\n                            : <div\r\n                                style={{display: \"inline\"}}>{localProfile.aboutMe ? localProfile.aboutMe : \" no info\"}</div>}\r\n                    </div>\r\n                    {/*looking for a job*/}\r\n                    <div className={css.LookingForAJob}>\r\n                        <div style={{display: \"inline\"}}>Looking for a Job:</div>\r\n                        {editMode\r\n                            ? <input onChange={() => {\r\n                                setLocalProfile({\r\n                                    ...localProfile,\r\n                                    lookingForAJob: !localProfile.lookingForAJob,\r\n                                    lookingForAJobDescription: \"nothing here\"\r\n                                })\r\n                            }} type={\"checkbox\"} checked={localProfile.lookingForAJob}/>\r\n                            : <div style={{display: \"inline\"}}>{localProfile.lookingForAJob ? \"yes\" : \"no\"}</div>}\r\n                    </div>\r\n                    {/*{vk}*/}\r\n                    <div className={css.Contacts}>\r\n                        <div style={{display: \"inline\"}}>vk:</div>\r\n                        {editMode\r\n                            ? <input style={{display: \"inline\"}} onChange={(event) => {\r\n                                setLocalProfile({\r\n                                    ...localProfile,\r\n                                    contacts: {...localProfile.contacts, vk: event.currentTarget.value}\r\n                                })\r\n                            }\r\n                            } type={\"text\"} value={localProfile.contacts.vk || \"\"}/>\r\n                            : <div\r\n                                style={{display: \"inline\"}}>{localProfile.contacts ? localProfile.contacts.vk ? localProfile.contacts.vk : \" no info\" : \" no info\"}</div>}\r\n                    </div>\r\n                    {/*github*/}\r\n                    <div className={css.Contacts}>\r\n                        <div style={{display: \"inline\"}}>github:</div>\r\n                        {editMode\r\n                            ? <input style={{display: \"inline\"}} onChange={(event) => {\r\n                                setLocalProfile({\r\n                                    ...localProfile,\r\n                                    contacts: {...localProfile.contacts, github: event.currentTarget.value}\r\n                                })\r\n                            }\r\n                            } type={\"text\"} value={localProfile.contacts.github || \"\"}/>\r\n                            : <div\r\n                                style={{display: \"inline\"}}>{localProfile.contacts ? localProfile.contacts.github ? localProfile.contacts.github : \" no info\" : \" no info\"}</div>}\r\n                    </div>\r\n                    {/*website*/}\r\n                    <div className={css.Contacts}>\r\n                        <div style={{display: \"inline\"}}>website:</div>\r\n                        {editMode\r\n                            ? <input style={{display: \"inline\"}} onChange={(event) => {\r\n                                setLocalProfile({\r\n                                    ...localProfile,\r\n                                    contacts: {...localProfile.contacts, website: event.currentTarget.value}\r\n                                })\r\n                            }\r\n                            } type={\"text\"} value={localProfile.contacts.website || \"\"}/>\r\n                            : <div\r\n                                style={{display: \"inline\"}}>{localProfile.contacts ? localProfile.contacts.website ? localProfile.contacts.website : \" no info\" : \" no info\"}</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {(props.myId === props.userId) ? <button onClick={() => {\r\n            if (editMode) props.updateProfileThunkCreator(localProfile);\r\n            setEditMode(!editMode);\r\n        }}> {editMode ? \"submit changes\" : \"change profile info\"} </button> : null};\r\n\r\n        <br/>\r\n        <textarea onChange={() => props.textareaChange(text)}\r\n                  ref={text}\r\n                  value={props.ProfileData.newPostText.text}>\r\n        </textarea>\r\n        <br/>\r\n        <button onClick={() => {\r\n            props.addPost();\r\n        }}>Add new post\r\n        </button>\r\n        <br/>\r\n        <div className={css.MyPosts}>\r\n            {postElements}\r\n        </div>\r\n    </div>);\r\n\r\n\r\n    // return (\r\n    //     <div className={css.Profile}>\r\n    //         <div className={css.ProfileName}>{props.ProfileData.profile.fullName}</div>\r\n    //         <img className={css.ProfilePicture}\r\n    //              src={props.ProfileData.profile.photos.large}/>\r\n    //         <br/>\r\n    //         <div>\r\n    //             {props.isOwner && <input type={\"file\"}/>}\r\n    //         </div>\r\n    //         <ProfileStatus status={props.ProfileData.status} updateStatus={props.updateStatus}/>\r\n    //         <br/>\r\n    //         <textarea onChange={() => props.textareaChange(text)}\r\n    //                   ref={text}\r\n    //                   value={props.ProfileData.newPostText.text}>\r\n    //         </textarea>\r\n    //         <br/>\r\n    //         <button onClick={() => {\r\n    //             props.addPost();\r\n    //         }}>Add new post\r\n    //         </button>\r\n    //         <br/>\r\n    //         <div className={css.MyPosts}>\r\n    //             {postElements}\r\n    //         </div>\r\n    //     </div>);\r\n}\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}