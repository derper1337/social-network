{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  headers: {\n    \"API-KEY\": \"0547c747-b993-4214-9f68-ed89a037b0b8\"\n  },\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\"\n});\nexport const usersAPI = {\n  getUsersPage() {\n    let currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\n      this.getFriends();\n      return response.data;\n    });\n  },\n\n  getFriends() {\n    return instance.get(`users?friend=${true}`).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  },\n\n  sendFollowRequest(userId) {\n    return instance.post(`follow/${userId}`).then(response => {\n      return response.data;\n    });\n  },\n\n  sendUnfollowRequest(userId) {\n    return instance.delete(`follow/${userId}`).then(response => {\n      return response.data;\n    });\n  },\n\n  getAuthMe() {\n    return instance.get(`auth/me`).then(response => {\n      return response.data;\n    });\n  },\n\n  getProfile(userID) {\n    return instance.get(`profile/${userID}`).then(response => {\n      return response.data;\n    });\n  }\n\n};\nexport const profileAPI = {\n  getProfile(userID) {\n    return instance.get(`profile/${userID}`).then(response => {\n      return response.data;\n    });\n  },\n\n  getStatus(userID) {\n    return instance.get(`profile/status/` + userID);\n  },\n\n  updateStatus(status) {\n    return instance.put(`profile/status`, {\n      status: status\n    });\n  },\n\n  updateProfile(profile) {\n    return instance.put(`profile`, profile);\n  },\n\n  updateAvatar(avatar) {\n    let formData = new FormData();\n    formData.append(\"image\", avatar);\n    return instance.put(`profile/photo`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n  }\n\n};\nexport const authAPI = {\n  login(email, password) {\n    let rememberMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    return instance.post(`/auth/login`, {\n      email,\n      password,\n      rememberMe\n    });\n  },\n\n  logout() {\n    return instance.delete(`/auth/login`);\n  }\n\n};","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/ api/api.js"],"names":["axios","instance","create","withCredentials","headers","baseURL","usersAPI","getUsersPage","currentPage","pageSize","get","then","response","getFriends","data","console","log","sendFollowRequest","userId","post","sendUnfollowRequest","delete","getAuthMe","getProfile","userID","profileAPI","getStatus","updateStatus","status","put","updateProfile","profile","updateAvatar","avatar","formData","FormData","append","authAPI","login","email","password","rememberMe","logout"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"0547c747-b993-4214-9f68-ed89a037b0b8\"\r\n    },\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsersPage(currentPage = 1, pageSize = 4) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                this.getFriends();\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    getFriends(){\r\n        return instance.get(`users?friend=${true}`)\r\n            .then(response => {\r\n                console.log(response);\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    sendFollowRequest(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    sendUnfollowRequest(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    getAuthMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    getProfile(userID){\r\n        return instance.get(`profile/${userID}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userID){\r\n        return instance.get(`profile/${userID}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n\r\n    getStatus(userID){\r\n        return instance.get(`profile/status/` + userID);\r\n    },\r\n\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status:status});\r\n    },\r\n    updateProfile(profile){\r\n        return instance.put(`profile`, profile)\r\n    },\r\n    updateAvatar(avatar){\r\n        let formData = new FormData();\r\n        formData.append(\"image\", avatar);\r\n        return instance.put(`profile/photo`, formData,{\r\n            headers:{\r\n                \"Content-Type\":\"multipart/form-data\"\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const authAPI ={\r\n    login(email, password, rememberMe = false){\r\n        return instance.post(`/auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout(){\r\n        return instance.delete(`/auth/login`);\r\n    },\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}