{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Philippos\\\\Documents\\\\WebDev\\\\ULTRA_REACT\\\\01\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _objectSpread from\"C:\\\\Users\\\\Philippos\\\\Documents\\\\WebDev\\\\ULTRA_REACT\\\\01\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";var _this=this;import{profileAPI,usersAPI}from\"../ api/api\";var initValue={posts:[{id:\"1\",likesCount:3,text:\"Hi! Unfortunately, current version of API doesn't support post creation on the server side, but you can add them localy, in your profile page!\"}],newPostText:{id:\"5\",likesCount:0,text:\"\"},profile:null,status:null};var profileReducer=function profileReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initValue;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"ADD-POST\":{var stateCopy=_objectSpread({},state);stateCopy.posts=_toConsumableArray(state.posts);stateCopy.posts.push(Object.assign({},state.newPostText));stateCopy.newPostText.text='';return stateCopy;}case\"CHANGE-POST\":{var _stateCopy=_objectSpread({},state);_stateCopy.newPostText.text=action.text;return _stateCopy;}case\"SET-USER-PROFILE\":{return _objectSpread(_objectSpread({},state),{},{profile:action.profile});}case\"SET-USER-STATUS\":{return _objectSpread(_objectSpread({},state),{},{status:action.status});}case\"SET-USER-AVATAR\":{return _objectSpread(_objectSpread({},state),{},{profile:_objectSpread(_objectSpread({},_this),{},{photos:action.photos})});}default:return state;}};export var addPost=function addPost(){return{type:\"ADD-POST\"};};export var textareaChange=function textareaChange(text){return{type:\"CHANGE-POST\",text:text.current.value};};export var setUserProfile=function setUserProfile(profile){return{type:\"SET-USER-PROFILE\",profile:profile};};export var setProfileStatus=function setProfileStatus(status){return{type:\"SET-USER-STATUS\",status:status};};export var setUserAvatar=function setUserAvatar(photos){return{type:\"SET-USER-AVATAR\",photos:photos};};export var getProfileThunkCreator=function getProfileThunkCreator(userId){return function(dispatch){usersAPI.getProfile(userId).then(function(data){dispatch(setUserProfile(data));});};};export var getStatusThunkCreator=function getStatusThunkCreator(userId){return function(dispatch){if(userId==\"\"){userId=2;}profileAPI.getStatus(userId).then(function(response){dispatch(setProfileStatus(response.data));});};};export var updateStatusThunkCreator=function updateStatusThunkCreator(status){return function(dispatch){profileAPI.updateStatus(status).then(function(response){console.log(response);dispatch(setProfileStatus(status));});};};export var updateProfileThunkCreator=function updateProfileThunkCreator(profile){return function(dispatch){profileAPI.updateProfile(profile).then(function(response){dispatch(setUserProfile(profile));});};};export var updateAvatarThunkCreator=function updateAvatarThunkCreator(avatar){return function(dispatch){profileAPI.updateAvatar(avatar).then(function(response){dispatch(setUserAvatar(response.data.data.photos));});};};export default profileReducer;","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/Redux/profileReducer.js"],"names":["profileAPI","usersAPI","initValue","posts","id","likesCount","text","newPostText","profile","status","profileReducer","state","action","type","stateCopy","push","Object","assign","photos","addPost","textareaChange","current","value","setUserProfile","setProfileStatus","setUserAvatar","getProfileThunkCreator","userId","dispatch","getProfile","then","data","getStatusThunkCreator","getStatus","response","updateStatusThunkCreator","updateStatus","console","log","updateProfileThunkCreator","updateProfile","updateAvatarThunkCreator","avatar","updateAvatar"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../ api/api\";\r\n\r\nlet initValue = {\r\n    posts: [\r\n        {id: \"1\", likesCount: 3, text: \"Hi! Unfortunately, current version of API doesn't support post creation on the server side, but you can add them localy, in your profile page!\"},\r\n    ],\r\n    newPostText: {id: \"5\", likesCount: 0, text: \"\"},\r\n    profile: null,\r\n    status: null,\r\n};\r\nconst profileReducer = (state = initValue, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD-POST\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.posts = [...state.posts]\r\n            stateCopy.posts.push(Object.assign({}, state.newPostText));\r\n            stateCopy.newPostText.text = '';\r\n            return stateCopy;}\r\n        case \"CHANGE-POST\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.newPostText.text = action.text;\r\n            return stateCopy;\r\n        }\r\n        case \"SET-USER-PROFILE\":{\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case \"SET-USER-STATUS\":{\r\n            return {...state, status: action.status}\r\n        }\r\n        case \"SET-USER-AVATAR\":{\r\n            return {...state, profile:{...this, photos: action.photos}}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const addPost = () => ({type: \"ADD-POST\"});\r\nexport const textareaChange = (text) => ({type: \"CHANGE-POST\",text: text.current.value});\r\nexport const setUserProfile = (profile) => ({type:\"SET-USER-PROFILE\", profile:profile});\r\nexport const setProfileStatus = (status) => ({type:\"SET-USER-STATUS\", status:status})\r\nexport const setUserAvatar = (photos) => ({type:\"SET-USER-AVATAR\", photos:photos})\r\n\r\nexport const getProfileThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId)\r\n            .then(data => {\r\n                dispatch(setUserProfile(data));\r\n            })\r\n    }\r\n}\r\n\r\nexport const getStatusThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        if(userId==\"\"){\r\n            userId=2;\r\n        }\r\n        profileAPI.getStatus(userId)\r\n            .then(response => {\r\n                dispatch(setProfileStatus(response.data));\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateStatusThunkCreator = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(setProfileStatus(status));\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateProfileThunkCreator = (profile) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateProfile(profile)\r\n            .then(response => {\r\n                dispatch(setUserProfile(profile));\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateAvatarThunkCreator = (avatar) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateAvatar(avatar)\r\n            .then(response => {\r\n                dispatch(setUserAvatar(response.data.data.photos));\r\n            })\r\n    }\r\n}\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}