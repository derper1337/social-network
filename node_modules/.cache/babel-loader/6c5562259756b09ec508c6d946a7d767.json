{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Philippos\\\\Documents\\\\WebDev\\\\ULTRA_REACT\\\\01\\\\src\\\\components\\\\Content\\\\Profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport css from \"./Profile.module.css\";\nimport React, { PureComponent, useState } from \"react\";\nimport Preloader from \"../../common/preloader/preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.Post,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Post;\n\nclass ProfileStatus extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      editMode: false,\n      status: this.props.status\n    };\n\n    this.onStatusChange = e => {\n      this.setState({\n        status: e.currentTarget.value\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({\n        status: this.props.status\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", this.state.editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.onStatusChange,\n          value: this.state.status,\n          onBlur: () => {\n            this.setState({\n              editMode: false\n            });\n            this.props.updateStatus(this.state.status);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            this.setState({\n              editMode: true\n            });\n          },\n          children: this.props.status || \"no status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst Profile = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c2 = _s(props => {\n  _s();\n\n  let postElements = props.ProfileData.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    text: p.text\n  }, p.text, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 57\n  }, this));\n  let text = /*#__PURE__*/React.createRef();\n  const [aboutMeState, setAboutMe] = useState(props.ProfileData.profile.aboutMe);\n\n  if (!props.ProfileData.profile) {\n    return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  }\n\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.Profile,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.Name,\n      children: props.ProfileData.profile.fullName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.AboutMe,\n      children: [\"About me: \", props.ProfileData.profile.aboutMe ? props.ProfileData.profile.aboutMe : \"no info\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.Name,\n      children: [props.ProfileData.profile.lookingForAJob, \"Looking for a job: \", props.ProfileData.profile.lookingForAJob ? \"Yes\" : \"No\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.Name,\n      children: props.ProfileData.profile.lookingForAJobDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this); // return (\n  //     <div className={css.Profile}>\n  //         <div className={css.ProfileName}>{props.ProfileData.profile.fullName}</div>\n  //         <img className={css.ProfilePicture}\n  //              src={props.ProfileData.profile.photos.large}/>\n  //         <br/>\n  //         <div>\n  //             {props.isOwner && <input type={\"file\"}/>}\n  //         </div>\n  //         <ProfileStatus status={props.ProfileData.status} updateStatus={props.updateStatus}/>\n  //         <br/>\n  //         <textarea onChange={() => props.textareaChange(text)}\n  //                   ref={text}\n  //                   value={props.ProfileData.newPostText.text}>\n  //         </textarea>\n  //         <br/>\n  //         <button onClick={() => {\n  //             props.addPost();\n  //         }}>Add new post\n  //         </button>\n  //         <br/>\n  //         <div className={css.MyPosts}>\n  //             {postElements}\n  //         </div>\n  //     </div>);\n}, \"nqSKlDIkjsgdEhNrpZr/2aar9cs=\")), \"nqSKlDIkjsgdEhNrpZr/2aar9cs=\");\n\n_c3 = Profile;\nexport default Profile;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Profile$React.memo\");\n$RefreshReg$(_c3, \"Profile\");","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/components/Content/Profile/Profile.js"],"names":["css","React","PureComponent","useState","Preloader","Post","props","text","ProfileStatus","state","editMode","status","onStatusChange","e","setState","currentTarget","value","componentDidUpdate","prevProps","prevState","render","updateStatus","Profile","memo","postElements","ProfileData","posts","map","p","createRef","aboutMeState","setAboutMe","profile","aboutMe","console","log","Name","fullName","AboutMe","lookingForAJob","lookingForAJobDescription"],"mappings":"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","sourcesContent":["import css from \"./Profile.module.css\"\r\nimport React, {PureComponent, useState} from \"react\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\n\r\nconst Post = (props) => {\r\n    return <div className={css.Post}>\r\n        {props.text}\r\n    </div>\r\n}\r\n\r\nclass ProfileStatus extends PureComponent {\r\n    state = {\r\n        editMode: false, status: this.props.status,\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({status: e.currentTarget.value})\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <div> {this.state.editMode ? <input onChange={this.onStatusChange} value={this.state.status} onBlur={() => {\r\n                this.setState({editMode: false});\r\n                this.props.updateStatus(this.state.status);\r\n            }}/> : <div onClick={() => {\r\n                this.setState({editMode: true});\r\n            }}>{this.props.status || \"no status\"}</ div>}\r\n            </div>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst Profile = React.memo(props => {\r\n    let postElements = props.ProfileData.posts.map(p => <Post text={p.text} key={p.text}/>);\r\n    let text = React.createRef();\r\n\r\n    const [aboutMeState, setAboutMe] = useState(props.ProfileData.profile.aboutMe);\r\n    if (!props.ProfileData.profile) {\r\n        return <Preloader/>\r\n    }\r\n    console.log(props);\r\n    return (\r\n        <div className={css.Profile}>\r\n            <div className={css.Name}>{props.ProfileData.profile.fullName}</div>\r\n\r\n            <div className={css.AboutMe}>\r\n                {\"About me: \"}\r\n                {props.ProfileData.profile.aboutMe ? props.ProfileData.profile.aboutMe : \"no info\"}\r\n            </div>\r\n\r\n            <div className={css.Name}>{props.ProfileData.profile.lookingForAJob}\r\n                {\"Looking for a job: \"}\r\n                {props.ProfileData.profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n            </div>\r\n\r\n            <div className={css.Name}>\r\n                {props.ProfileData.profile.lookingForAJobDescription}\r\n            </div>\r\n        </div>\r\n    );\r\n    // return (\r\n    //     <div className={css.Profile}>\r\n    //         <div className={css.ProfileName}>{props.ProfileData.profile.fullName}</div>\r\n    //         <img className={css.ProfilePicture}\r\n    //              src={props.ProfileData.profile.photos.large}/>\r\n    //         <br/>\r\n    //         <div>\r\n    //             {props.isOwner && <input type={\"file\"}/>}\r\n    //         </div>\r\n    //         <ProfileStatus status={props.ProfileData.status} updateStatus={props.updateStatus}/>\r\n    //         <br/>\r\n    //         <textarea onChange={() => props.textareaChange(text)}\r\n    //                   ref={text}\r\n    //                   value={props.ProfileData.newPostText.text}>\r\n    //         </textarea>\r\n    //         <br/>\r\n    //         <button onClick={() => {\r\n    //             props.addPost();\r\n    //         }}>Add new post\r\n    //         </button>\r\n    //         <br/>\r\n    //         <div className={css.MyPosts}>\r\n    //             {postElements}\r\n    //         </div>\r\n    //     </div>);\r\n})\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}