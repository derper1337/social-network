{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Philippos\\\\Documents\\\\WebDev\\\\ULTRA_REACT\\\\01\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { useFormik, ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { loginThunkCreator } from \"../../Redux/auth-reducer\";\nimport { Navigate } from \"react-router-dom\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet mapStateToProps = state => {\n  return {\n    isAuth: state.auth.loggedIn\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  let initialValues = {\n    email: 'oxotnik3010@gmail.com',\n    password: 'asnaebos'\n  };\n\n  let validationSchema = values => {\n    let errors = {};\n\n    if (!values.email) {\n      errors.email = \"Required field\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Required field\";\n    }\n\n    return errors;\n  };\n\n  let onSubmit = values => {\n    props.loginThunkCreator(values.email, values.password, values.rememberMe);\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validate: validationSchema\n  });\n  if (props.isAuth) return /*#__PURE__*/_jsxDEV(Navigate, {\n    replace: true,\n    to: \"/profile\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 30\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      onSubmit: onSubmit,\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: 'email',\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'email',\n          id: 'email',\n          name: 'email',\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), formik.errors.email && formik.touched.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 60\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: 'password',\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'password',\n          id: 'password',\n          name: 'password',\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), formik.errors.password && formik.touched.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 66\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 17\n  }, this);\n};\n\n_s(Login, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Login;\nexport default connect(mapStateToProps, {\n  loginThunkCreator\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/components/Login/Login.js"],"names":["useFormik","ErrorMessage","Formik","Form","Field","connect","loginThunkCreator","Navigate","React","mapStateToProps","state","isAuth","auth","loggedIn","Login","props","initialValues","email","password","validationSchema","values","errors","onSubmit","rememberMe","formik","validate","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import {useFormik, ErrorMessage, Formik, Form, Field} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../Redux/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.loggedIn,\r\n    }\r\n}\r\n\r\nconst Login = (props) => {\r\n\r\n    let initialValues = {\r\n        email: 'oxotnik3010@gmail.com',\r\n        password: 'asnaebos',\r\n    }\r\n    let validationSchema = (values) => {\r\n        let errors = {};\r\n        if (!values.email) {\r\n            errors.email = \"Required field\";\r\n        }\r\n        if (!values.password) {\r\n            errors.password = \"Required field\";\r\n        }\r\n        return errors;\r\n    }\r\n    let onSubmit = (values) =>{\r\n        props.loginThunkCreator(values.email, values.password, values.rememberMe);\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: onSubmit,\r\n        validate: validationSchema,\r\n    })\r\n\r\n    if (props.isAuth) return <Navigate replace to=\"/profile\"/>\r\n    else return <div>\r\n\r\n        {/*<Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>*/}\r\n        {/*    <Form>*/}\r\n        {/*        <label htmlFor={'email'}>Email</label>*/}\r\n        {/*        <br/>*/}\r\n        {/*        <Field type={'email'} id={'email'} name={'email'}/>*/}\r\n        {/*        <br/>*/}\r\n\r\n        {/*        <label htmlFor={'password'}>Password</label>*/}\r\n        {/*        <br/>*/}\r\n        {/*        <Field type={'password'} id={'password'} name={'password'}/>*/}\r\n        {/*        <br/>*/}\r\n        {/*        <button type='submit'> Submit</button>*/}\r\n        {/*    </Form>*/}\r\n        {/*</Formik>*/}\r\n\r\n        <Formik onSubmit={onSubmit} initialValues={initialValues} validationSchema={validationSchema}>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n            <label htmlFor={'email'}>Email</label>\r\n            <br/>\r\n            <input type={'email'} id={'email'} name={'email'}\r\n                   onChange={formik.handleChange}\r\n                   onBlur={formik.handleBlur}\r\n                   value={formik.values.email}/>\r\n            {formik.errors.email && formik.touched.email ? <div>{formik.errors.email}</div> : null}\r\n            <br/>\r\n\r\n            <label htmlFor={'password'}>Password</label>\r\n            <br/>\r\n            <input type={'password'} id={'password'} name={'password'}\r\n                   onChange={formik.handleChange}\r\n                   onBlur={formik.handleBlur}\r\n                   value={formik.values.password}/>\r\n            {formik.errors.password && formik.touched.password ? <div>{formik.errors.password}</div> : null}\r\n            <br/>\r\n            <button type='submit'> Submit</button>\r\n        </Form>\r\n        </Formik>\r\n    </div>\r\n};\r\nexport default connect(mapStateToProps, {loginThunkCreator})(Login);"]},"metadata":{},"sourceType":"module"}