{"ast":null,"code":"import { usersAPI } from \"../ api/api\";\nlet initValue = {\n  users: [],\n  pageInfo: {\n    pageCount: 4,\n    pageSize: 2,\n    currentPage: 1,\n    isLoading: true,\n    isFollowing: []\n  }\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initValue;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FOLLOW\":\n      {\n        console.log(\"followed\");\n        let stateCopy = { ...state\n        };\n        stateCopy.users = [...state.users];\n        stateCopy.users.map(u => {\n          if (u.id == action.userId) {\n            u.followed = true;\n          }\n        });\n        return stateCopy;\n      }\n\n    case \"UNFOLLOW\":\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.users = [...state.users];\n        stateCopy.users.map(u => {\n          if (u.id == action.userId) {\n            u.followed = false;\n          }\n        });\n        return stateCopy;\n      }\n\n    case \"SET-CURRENT-PAGE\":\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.pageInfo = { ...state.pageInfo\n        };\n        stateCopy.pageInfo.currentPage = action.currentPage;\n        return stateCopy;\n      }\n\n    case \"SET-USERS\":\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.users = [...action.users];\n        return stateCopy;\n      }\n\n    case \"IS-LOADING\":\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.pageInfo = { ...state.pageInfo\n        };\n        stateCopy.pageInfo.isLoading = action.isLoading;\n        return stateCopy;\n      }\n\n    case \"IS-FOLLOWING\":\n      {\n        return { ...state,\n          pageInfo: { ...state.pageInfo,\n            isFollowing: action.isFollowing ? [...state.pageInfo.isFollowing, action.userId] : state.pageInfo.isFollowing.filter(id => id != action.userId)\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst getUsers = dispatch => {\n  this.props.isLoading(true);\n  usersAPI.getUsersPage(this.props.pageInfo.currentPage, this.props.pageInfo.pageSize).then(data => {\n    this.props.setUsers(data.items);\n    this.props.isLoading(false);\n  });\n};\n\nexport default usersReducer;","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/Redux/users-reducer.js"],"names":["usersAPI","initValue","users","pageInfo","pageCount","pageSize","currentPage","isLoading","isFollowing","usersReducer","state","action","type","console","log","stateCopy","map","u","id","userId","followed","filter","getUsers","dispatch","props","getUsersPage","then","data","setUsers","items"],"mappings":"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","sourcesContent":["import {usersAPI} from \"../ api/api\";\r\n\r\nlet initValue = {\r\n        users: [],\r\n        pageInfo: {\r\n            pageCount: 4,\r\n            pageSize: 2,\r\n            currentPage: 1,\r\n            isLoading: true,\r\n            isFollowing: [],\r\n        }\r\n    }\r\n;\r\nconst usersReducer = (state = initValue, action) => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\": {\r\n            console.log(\"followed\")\r\n            let stateCopy = {...state};\r\n            stateCopy.users = [...state.users];\r\n            stateCopy.users.map(u => {\r\n                if (u.id == action.userId) {\r\n                    u.followed = true;\r\n                }\r\n            })\r\n            return stateCopy;\r\n        }\r\n        case \"UNFOLLOW\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.users = [...state.users];\r\n            stateCopy.users.map(u => {\r\n                if (u.id == action.userId) {\r\n                    u.followed = false\r\n                }\r\n            })\r\n            return stateCopy;\r\n        }\r\n        case \"SET-CURRENT-PAGE\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.pageInfo = {...state.pageInfo};\r\n            stateCopy.pageInfo.currentPage = action.currentPage;\r\n            return stateCopy;\r\n        }\r\n        case \"SET-USERS\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.users = [...action.users]\r\n            return stateCopy;\r\n        }\r\n        case \"IS-LOADING\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.pageInfo = {...state.pageInfo};\r\n            stateCopy.pageInfo.isLoading = action.isLoading;\r\n            return stateCopy;\r\n        }\r\n        case \"IS-FOLLOWING\": {\r\n            return {\r\n                ...state,\r\n                pageInfo: {\r\n                    ...state.pageInfo,\r\n                    isFollowing: action.isFollowing\r\n                        ? [...state.pageInfo.isFollowing, action.userId]\r\n                        : state.pageInfo.isFollowing.filter(id => id != action.userId)\r\n                },\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst getUsers = (dispatch) =>{\r\n    this.props.isLoading(true);\r\n    usersAPI.getUsersPage(this.props.pageInfo.currentPage, this.props.pageInfo.pageSize)\r\n        .then(data => {\r\n            this.props.setUsers(data.items);\r\n            this.props.isLoading(false);\r\n        });\r\n}\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}