{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Philippos\\\\Documents\\\\WebDev\\\\ULTRA_REACT\\\\01\\\\src\\\\components\\\\Content\\\\Profile\\\\Profile.js\";\nimport css from \"./Profile.module.css\";\nimport React, { PureComponent } from \"react\";\nimport Preloader from \"../../common/preloader/preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.Post,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Post;\n\nclass ProfileStatus extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      editMode: false,\n      status: this.props.status\n    };\n\n    this.onStatusChange = e => {\n      this.setState({\n        status: e.currentTarget.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", this.state.editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.onStatusChange,\n          value: this.state.status,\n          onBlur: () => {\n            this.setState({\n              editMode: false\n            });\n            this.props.updateStatus(this.state.status);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            this.setState({\n              editMode: true\n            });\n          },\n          children: this.props.status || \"no status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst Profile = /*#__PURE__*/React.memo(_c2 = props => {\n  let postElements = props.ProfileData.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    text: p.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 57\n  }, this));\n  let text = /*#__PURE__*/React.createRef();\n\n  if (!props.ProfileData.profile) {\n    return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.Profile,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.ProfileName,\n      children: props.ProfileData.profile.fullName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: css.ProfilePicture,\n      src: props.ProfileData.profile.photos.large\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.isOwner && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProfileStatus, {\n      status: props.ProfileData.status,\n      updateStatus: props.updateStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: () => props.textareaChange(text),\n      ref: text,\n      value: props.ProfileData.newPostText.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        props.addPost();\n      },\n      children: \"Add new post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.MyPosts,\n      children: postElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n});\n_c3 = Profile;\nexport default Profile;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Profile$React.memo\");\n$RefreshReg$(_c3, \"Profile\");","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/components/Content/Profile/Profile.js"],"names":["css","React","PureComponent","Preloader","Post","props","text","ProfileStatus","state","editMode","status","onStatusChange","e","setState","currentTarget","value","render","updateStatus","Profile","memo","postElements","ProfileData","posts","map","p","createRef","profile","ProfileName","fullName","ProfilePicture","photos","large","isOwner","textareaChange","newPostText","addPost","MyPosts"],"mappings":"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","sourcesContent":["import css from \"./Profile.module.css\"\r\nimport React, {PureComponent} from \"react\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\n\r\nconst Post = (props) => {\r\n    return <div className={css.Post}>\r\n        {props.text}\r\n    </div>\r\n}\r\nclass ProfileStatus extends PureComponent {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     if (prevProps.status !== this.props.status) {\r\n    //         this.setState({status: this.props.status})\r\n    //     }\r\n    // }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({status: e.currentTarget.value})\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <div> {this.state.editMode\r\n                ? <input onChange={this.onStatusChange} value={this.state.status} onBlur={() => {\r\n                    this.setState({editMode: false});\r\n                    this.props.updateStatus(this.state.status);\r\n                }}/>\r\n                : <div onClick={() => {\r\n                    this.setState({editMode: true});\r\n                }}>{this.props.status || \"no status\"}</ div>}\r\n            </div>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst Profile = React.memo(props => {\r\n    let postElements = props.ProfileData.posts.map(p => <Post text={p.text}/>);\r\n    let text = React.createRef();\r\n\r\n    if (!props.ProfileData.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (<div className={css.Profile}>\r\n            <div className={css.ProfileName}>{props.ProfileData.profile.fullName}</div>\r\n            <img className={css.ProfilePicture}\r\n                 src={props.ProfileData.profile.photos.large}/>\r\n            <br/>\r\n            <div>\r\n                {props.isOwner && <input type={\"file\"}/>}\r\n            </div>\r\n\r\n            <ProfileStatus status={props.ProfileData.status} updateStatus={props.updateStatus}/>\r\n\r\n            <br/>\r\n            <textarea onChange={() => props.textareaChange(text)}\r\n                      ref={text}\r\n                      value={props.ProfileData.newPostText.text}>\r\n            </textarea>\r\n            <br/>\r\n            <button onClick={() => {\r\n                props.addPost();\r\n            }}>Add new post\r\n            </button>\r\n            <br/>\r\n            <div className={css.MyPosts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}