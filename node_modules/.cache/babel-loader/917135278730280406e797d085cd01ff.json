{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Philippos\\\\Documents\\\\WebDev\\\\ULTRA_REACT\\\\01\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _objectSpread from\"C:\\\\Users\\\\Philippos\\\\Documents\\\\WebDev\\\\ULTRA_REACT\\\\01\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import{usersAPI}from\"../ api/api\";import{isLoading,setCurrentPage,setUsers}from\"./users-reducer\";var initValue={// dialogs: [\n//     {   id: \"stepa\",\n//         messages: [\n//             {name: \"user1\", message: \"sup brah\"},\n//             {name: \"user1\", message: \"sup brahh\"},\n//             {name: \"user1\", message: \"sup brahhhh\"},\n//             {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\n//     },\n//     {   id: \"sssstepa\",\n//         messages: [\n//             {name: \"user1\", message: \"sussssp brah\"},\n//             {name: \"user1\", message: \"sup brahh\"},\n//             {name: \"user1\", message: \"sup brahhhh\"},\n//             {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\n//     },\n//     {   id: \"seeeeetepa\",\n//         messages: [\n//             {name: \"user1\", message: \"sup brah\"},\n//             {name: \"user1\", message: \"sup brahh\"},\n//             {name: \"user1\", message: \"sussssssssssp brahhhh\"},\n//             {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\n//     },\n// ],\nnewMessageText:{name:\"user1\",message:\"\"},friends:[],dialogs:[],activeDialog:\"\"};var messageReducer=function messageReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initValue;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"ADD-MESSAGE\":{var stateCopy=_objectSpread({},state);stateCopy.dialogs=_toConsumableArray(state.dialogs);stateCopy.newMessageText=_objectSpread({},state.newMessageText);var currentDialogNumber=stateCopy.dialogs.findIndex(function(obj){return obj.name===stateCopy.activeDialog;});stateCopy.dialogs[currentDialogNumber].messages.push(Object.assign({},stateCopy.newMessageText));stateCopy.newMessageText.message=\"\";return stateCopy;}case\"CHANGE-MESSAGE\":{var _stateCopy=_objectSpread({},state);_stateCopy.dialogs=_toConsumableArray(state.dialogs);_stateCopy.newMessageText=_objectSpread({},state.newMessageText);_stateCopy.newMessageText.message=action.text;return _stateCopy;}case\"SET-FRIENDS\":{var _stateCopy2=_objectSpread({},state);_stateCopy2.friends=action.friends;return _stateCopy2;}case\"SET-DIALOGS\":{var _stateCopy3=_objectSpread({},state);_stateCopy3.dialogs=_stateCopy3.friends.map(function(f){return{name:f.name,id:f.id,messages:[]};});return _stateCopy3;}case\"SET-ACTIVE-DIALOG\":{var _stateCopy4=_objectSpread({},state);_stateCopy4.activeDialog=action.dialogName;return _stateCopy4;}default:return state;}};var setFriends=function setFriends(friends){return{type:\"SET-FRIENDS\",friends:friends};};// export const getFriendsThunkCreator = () => {\n//     return (dispatch) => {\n//         usersAPI.getFriends().then(data => {\n//             dispatch({type: \"SET-FRIENDS\", friends: data.items});\n//             dispatch({type: \"SET-DIALOGS\"});\n//         });\n//     }\n// }\nexport default messageReducer;","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/Redux/message-reducer.js"],"names":["usersAPI","isLoading","setCurrentPage","setUsers","initValue","newMessageText","name","message","friends","dialogs","activeDialog","messageReducer","state","action","type","stateCopy","currentDialogNumber","findIndex","obj","messages","push","Object","assign","text","map","f","id","dialogName","setFriends"],"mappings":"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","sourcesContent":["import {usersAPI} from \"../ api/api\";\r\nimport {isLoading, setCurrentPage, setUsers} from \"./users-reducer\";\r\n\r\nlet initValue = {\r\n    // dialogs: [\r\n    //     {   id: \"stepa\",\r\n    //         messages: [\r\n    //             {name: \"user1\", message: \"sup brah\"},\r\n    //             {name: \"user1\", message: \"sup brahh\"},\r\n    //             {name: \"user1\", message: \"sup brahhhh\"},\r\n    //             {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\r\n    //     },\r\n    //     {   id: \"sssstepa\",\r\n    //         messages: [\r\n    //             {name: \"user1\", message: \"sussssp brah\"},\r\n    //             {name: \"user1\", message: \"sup brahh\"},\r\n    //             {name: \"user1\", message: \"sup brahhhh\"},\r\n    //             {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\r\n    //     },\r\n    //     {   id: \"seeeeetepa\",\r\n    //         messages: [\r\n    //             {name: \"user1\", message: \"sup brah\"},\r\n    //             {name: \"user1\", message: \"sup brahh\"},\r\n    //             {name: \"user1\", message: \"sussssssssssp brahhhh\"},\r\n    //             {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\r\n    //     },\r\n    // ],\r\n    newMessageText: {name: \"user1\", message: \"\"},\r\n    friends: [],\r\n    dialogs:[],\r\n    activeDialog:\"\",\r\n};\r\nconst messageReducer = (state = initValue, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD-MESSAGE\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.dialogs = [...state.dialogs];\r\n            stateCopy.newMessageText = {...state.newMessageText};\r\n            let currentDialogNumber = stateCopy.dialogs.findIndex((obj)=>{return obj.name===stateCopy.activeDialog});\r\n            stateCopy.dialogs[currentDialogNumber].messages.push(Object.assign({}, stateCopy.newMessageText));\r\n            stateCopy.newMessageText.message = \"\";\r\n            return stateCopy;\r\n        }\r\n        case \"CHANGE-MESSAGE\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.dialogs = [...state.dialogs];\r\n            stateCopy.newMessageText = {...state.newMessageText};\r\n            stateCopy.newMessageText.message = action.text;\r\n            return stateCopy;\r\n        }\r\n        case \"SET-FRIENDS\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.friends = action.friends;\r\n            return stateCopy;\r\n        }\r\n        case \"SET-DIALOGS\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.dialogs = stateCopy.friends.map(f => ({\r\n                name:f.name,\r\n                id: f.id,\r\n                messages:[]\r\n            }));\r\n            return stateCopy;\r\n        }\r\n        case \"SET-ACTIVE-DIALOG\":{\r\n                let stateCopy = {...state};\r\n                stateCopy.activeDialog = action.dialogName;\r\n                return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst setFriends = (friends) => ({type: \"SET-FRIENDS\", friends: friends});\r\n\r\n// export const getFriendsThunkCreator = () => {\r\n//     return (dispatch) => {\r\n//         usersAPI.getFriends().then(data => {\r\n//             dispatch({type: \"SET-FRIENDS\", friends: data.items});\r\n//             dispatch({type: \"SET-DIALOGS\"});\r\n//         });\r\n//     }\r\n// }\r\n\r\nexport default messageReducer;"]},"metadata":{},"sourceType":"module"}