{"ast":null,"code":"import{ErrorMessage,Formik,Form,Field}from\"formik\";import{connect}from\"react-redux\";import{loginThunkCreator}from\"../../../Redux/auth-reducer\";import{Navigate}from\"react-router-dom\";import React from\"react\";import css from\"./Login.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(props){// formik consts\nvar initialValues={email:'free@samuraijs.com',password:'free'};var validate=function validate(values){var errors={};if(!values.email){errors.email=\"Required field\";}if(!values.password){errors.password=\"Required field\";}return errors;};var onSubmit=function onSubmit(values,_ref){var setStatus=_ref.setStatus;props.loginThunkCreator(values.email,values.password,values.rememberMe,setStatus);};if(props.isAuth)return/*#__PURE__*/_jsx(Navigate,{replace:true,to:\"/profile\"});else return/*#__PURE__*/_jsx(Formik,{onSubmit:onSubmit,initialValues:initialValues,validate:validate,children:function children(_ref2){var status=_ref2.status;return/*#__PURE__*/_jsx(Form,{className:css.Login,children:/*#__PURE__*/_jsxs(\"div\",{className:css.LoginContainer,children:[/*#__PURE__*/_jsx(\"div\",{children:status}),/*#__PURE__*/_jsx(\"label\",{htmlFor:'email',children:\"Email\"}),/*#__PURE__*/_jsx(Field,{type:'email',id:'email',name:'email'}),/*#__PURE__*/_jsx(\"div\",{className:css.Error,children:/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\"})}),/*#__PURE__*/_jsx(\"label\",{htmlFor:'password',children:\"Password\"}),/*#__PURE__*/_jsx(Field,{type:'password',id:'password',name:'password'}),/*#__PURE__*/_jsx(\"div\",{className:css.Error,children:/*#__PURE__*/_jsx(ErrorMessage,{name:\"password\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\" Submit\"})]})});}});};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.loggedIn};};export default connect(mapStateToProps,{loginThunkCreator:loginThunkCreator})(Login);","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/components/Content/Login/Login.js"],"names":["ErrorMessage","Formik","Form","Field","connect","loginThunkCreator","Navigate","React","css","Login","props","initialValues","email","password","validate","values","errors","onSubmit","setStatus","rememberMe","isAuth","status","LoginContainer","Error","mapStateToProps","state","auth","loggedIn"],"mappings":"AAAA,OAAQA,YAAR,CAAsBC,MAAtB,CAA8BC,IAA9B,CAAoCC,KAApC,KAAgD,QAAhD,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,iBAAR,KAAgC,6BAAhC,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,GAAP,KAAgB,oBAAhB,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACrB;AACA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,KAAK,CAAE,oBADW,CAElBC,QAAQ,CAAE,MAFQ,CAAtB,CAIA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,MAAD,CAAY,CACzB,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAI,CAACD,MAAM,CAACH,KAAZ,CAAmB,CACfI,MAAM,CAACJ,KAAP,CAAe,gBAAf,CACH,CACD,GAAI,CAACG,MAAM,CAACF,QAAZ,CAAsB,CAClBG,MAAM,CAACH,QAAP,CAAkB,gBAAlB,CACH,CACD,MAAOG,CAAAA,MAAP,CACH,CATD,CAUA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACF,MAAD,MAAyB,IAAfG,CAAAA,SAAe,MAAfA,SAAe,CACtCR,KAAK,CAACL,iBAAN,CAAwBU,MAAM,CAACH,KAA/B,CAAsCG,MAAM,CAACF,QAA7C,CAAuDE,MAAM,CAACI,UAA9D,CAA0ED,SAA1E,EACH,CAFD,CAIA,GAAIR,KAAK,CAACU,MAAV,CAAkB,mBAAO,KAAC,QAAD,EAAU,OAAO,KAAjB,CAAkB,EAAE,CAAC,UAArB,EAAP,CAAlB,IACK,oBACD,KAAC,MAAD,EAAQ,QAAQ,CAAEH,QAAlB,CAA4B,aAAa,CAAEN,aAA3C,CAA0D,QAAQ,CAAEG,QAApE,UACK,4BAAEO,CAAAA,MAAF,OAAEA,MAAF,oBACG,KAAC,IAAD,EAAM,SAAS,CAAEb,GAAG,CAACC,KAArB,uBACI,aAAK,SAAS,CAAED,GAAG,CAACc,cAApB,wBACI,qBAAMD,MAAN,EADJ,cAEI,cAAO,OAAO,CAAE,OAAhB,mBAFJ,cAGI,KAAC,KAAD,EAAO,IAAI,CAAE,OAAb,CAAsB,EAAE,CAAE,OAA1B,CAAmC,IAAI,CAAE,OAAzC,EAHJ,cAII,YAAK,SAAS,CAAEb,GAAG,CAACe,KAApB,uBAA2B,KAAC,YAAD,EAAc,IAAI,CAAE,OAApB,EAA3B,EAJJ,cAMI,cAAO,OAAO,CAAE,UAAhB,sBANJ,cAOI,KAAC,KAAD,EAAO,IAAI,CAAE,UAAb,CAAyB,EAAE,CAAE,UAA7B,CAAyC,IAAI,CAAE,UAA/C,EAPJ,cAQI,YAAK,SAAS,CAAEf,GAAG,CAACe,KAApB,uBAA2B,KAAC,YAAD,EAAc,IAAI,CAAE,UAApB,EAA3B,EARJ,cASI,eAAQ,IAAI,CAAC,QAAb,qBATJ,GADJ,EADH,EADL,EADC,CAmBR,CAxCD,CA0CA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC7B,MAAO,CACHL,MAAM,CAAEK,KAAK,CAACC,IAAN,CAAWC,QADhB,CAAP,CAGH,CAJD,CAMA,cAAevB,CAAAA,OAAO,CAACoB,eAAD,CAAkB,CAACnB,iBAAiB,CAAjBA,iBAAD,CAAlB,CAAP,CAA8CI,KAA9C,CAAf","sourcesContent":["import {ErrorMessage, Formik, Form, Field} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../../Redux/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport css from \"./Login.module.css\"\r\n\r\nconst Login = (props) => {\r\n    // formik consts\r\n    const initialValues = {\r\n        email: 'free@samuraijs.com',\r\n        password: 'free',\r\n    }\r\n    const validate = (values) => {\r\n        let errors = {};\r\n        if (!values.email) {\r\n            errors.email = \"Required field\";\r\n        }\r\n        if (!values.password) {\r\n            errors.password = \"Required field\";\r\n        }\r\n        return errors;\r\n    }\r\n    const onSubmit = (values, {setStatus}) => {\r\n        props.loginThunkCreator(values.email, values.password, values.rememberMe, setStatus);\r\n    }\r\n\r\n    if (props.isAuth) return <Navigate replace to=\"/profile\"/>\r\n    else return (\r\n        <Formik onSubmit={onSubmit} initialValues={initialValues} validate={validate}>\r\n            {({status}) => (\r\n                <Form className={css.Login}>\r\n                    <div className={css.LoginContainer}>\r\n                        <div>{status}</div>\r\n                        <label htmlFor={'email'}>Email</label>\r\n                        <Field type={'email'} id={'email'} name={'email'}/>\r\n                        <div className={css.Error}><ErrorMessage name={\"email\"}/></div>\r\n\r\n                        <label htmlFor={'password'}>Password</label>\r\n                        <Field type={'password'} id={'password'} name={'password'}/>\r\n                        <div className={css.Error}><ErrorMessage name={\"password\"}/></div>\r\n                        <button type='submit'> Submit</button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.loggedIn,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {loginThunkCreator})(Login);"]},"metadata":{},"sourceType":"module"}