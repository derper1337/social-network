{"ast":null,"code":"let initValue = {\n  dialogs: [{\n    name: \"stepa\",\n    messages: [{\n      name: \"user1\",\n      message: \"sup brah\"\n    }, {\n      name: \"user1\",\n      message: \"sup brahh\"\n    }, {\n      name: \"user1\",\n      message: \"sup brahhhh\"\n    }, {\n      name: \"user1\",\n      message: \"sup brahhhhhhhhh\"\n    }]\n  }, {\n    name: \"pasha\",\n    messages: [{\n      name: \"user1\",\n      message: \"supes brahes\"\n    }, {\n      name: \"user1\",\n      message: \"sup brah\"\n    }, {\n      name: \"user1\",\n      message: \"sup brah\"\n    }, {\n      name: \"user1\",\n      message: \"sup brah\"\n    }]\n  }, {\n    name: \"sanya\",\n    messages: [{\n      name: \"user1\",\n      message: \"sup brah\"\n    }, {\n      name: \"user1\",\n      message: \"sup brah\"\n    }, {\n      name: \"user1\",\n      message: \"sup brah\"\n    }, {\n      name: \"user1\",\n      message: \"sup brah\"\n    }]\n  }],\n  newMessageText: {\n    name: \"user1\",\n    message: \"shieeeet\"\n  }\n};\n\nconst messageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initValue;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  let addMessage = () => {\n    state.dialogs[0].messages.push(Object.assign({}, state.newMessageText));\n    messageTextChange(\"\");\n  };\n\n  let messageTextChange = newText => {\n    state.newMessageText.message = newText;\n  };\n\n  switch (action.type) {\n    case \"ADD-MESSAGE\":\n      {\n        let stateCopy = { ...state\n        };\n        state.dialogs[0].messages.push(Object.assign({}, state.newMessageText));\n        messageTextChange(\"\");\n        return;\n      }\n\n    case \"CHANGE-MESSAGE\":\n      messageTextChange(action.text);\n      break;\n\n    default:\n      return state;\n  }\n\n  return state;\n};\n\nexport default messageReducer;","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/Redux/message-reducer.js"],"names":["initValue","dialogs","name","messages","message","newMessageText","messageReducer","state","action","addMessage","push","Object","assign","messageTextChange","newText","type","stateCopy","text"],"mappings":"AAAA,IAAIA,SAAS,GAAG;AACRC,EAAAA,OAAO,EAAE,CACL;AACIC,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,QAAQ,EAAE,CACN;AAACD,MAAAA,IAAI,EAAE,OAAP;AAAgBE,MAAAA,OAAO,EAAE;AAAzB,KADM,EAEN;AAACF,MAAAA,IAAI,EAAE,OAAP;AAAgBE,MAAAA,OAAO,EAAE;AAAzB,KAFM,EAGN;AAACF,MAAAA,IAAI,EAAE,OAAP;AAAgBE,MAAAA,OAAO,EAAE;AAAzB,KAHM,EAIN;AAACF,MAAAA,IAAI,EAAE,OAAP;AAAgBE,MAAAA,OAAO,EAAE;AAAzB,KAJM;AAFd,GADK,EASL;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,QAAQ,EAAE,CACN;AAACD,MAAAA,IAAI,EAAE,OAAP;AAAgBE,MAAAA,OAAO,EAAE;AAAzB,KADM,EAEN;AAACF,MAAAA,IAAI,EAAE,OAAP;AAAgBE,MAAAA,OAAO,EAAE;AAAzB,KAFM,EAGN;AAACF,MAAAA,IAAI,EAAE,OAAP;AAAgBE,MAAAA,OAAO,EAAE;AAAzB,KAHM,EAIN;AAACF,MAAAA,IAAI,EAAE,OAAP;AAAgBE,MAAAA,OAAO,EAAE;AAAzB,KAJM;AAFd,GATK,EAkBL;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,QAAQ,EAAE,CACN;AAACD,MAAAA,IAAI,EAAE,OAAP;AAAgBE,MAAAA,OAAO,EAAE;AAAzB,KADM,EAEN;AAACF,MAAAA,IAAI,EAAE,OAAP;AAAgBE,MAAAA,OAAO,EAAE;AAAzB,KAFM,EAGN;AAACF,MAAAA,IAAI,EAAE,OAAP;AAAgBE,MAAAA,OAAO,EAAE;AAAzB,KAHM,EAIN;AAACF,MAAAA,IAAI,EAAE,OAAP;AAAgBE,MAAAA,OAAO,EAAE;AAAzB,KAJM;AAFd,GAlBK,CADD;AA4BRC,EAAAA,cAAc,EAAE;AAACH,IAAAA,IAAI,EAAE,OAAP;AAAgBE,IAAAA,OAAO,EAAE;AAAzB;AA5BR,CAAhB;;AA8BA,MAAME,cAAc,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBP,SAAsB;AAAA,MAAXQ,MAAW;;AAElD,MAAIC,UAAU,GAAG,MAAM;AACnBF,IAAAA,KAAK,CAACN,OAAN,CAAc,CAAd,EAAiBE,QAAjB,CAA0BO,IAA1B,CAA+BC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAK,CAACF,cAAxB,CAA/B;AACAQ,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACH,GAHD;;AAIA,MAAIA,iBAAiB,GAAIC,OAAD,IAAa;AACjCP,IAAAA,KAAK,CAACF,cAAN,CAAqBD,OAArB,GAA+BU,OAA/B;AACH,GAFD;;AAIA,UAAQN,MAAM,CAACO,IAAf;AACI,SAAK,aAAL;AAAmB;AACf,YAAIC,SAAS,GAAG,EAAC,GAAGT;AAAJ,SAAhB;AACAA,QAAAA,KAAK,CAACN,OAAN,CAAc,CAAd,EAAiBE,QAAjB,CAA0BO,IAA1B,CAA+BC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAK,CAACF,cAAxB,CAA/B;AACAQ,QAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACA;AACH;;AACD,SAAK,gBAAL;AACIA,MAAAA,iBAAiB,CAACL,MAAM,CAACS,IAAR,CAAjB;AACA;;AACJ;AACI,aAAOV,KAAP;AAXR;;AAcA,SAAOA,KAAP;AACH,CAzBD;;AA2BA,eAAeD,cAAf","sourcesContent":["let initValue = {\r\n        dialogs: [\r\n            {\r\n                name: \"stepa\",\r\n                messages: [\r\n                    {name: \"user1\", message: \"sup brah\"},\r\n                    {name: \"user1\", message: \"sup brahh\"},\r\n                    {name: \"user1\", message: \"sup brahhhh\"},\r\n                    {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\r\n            },\r\n            {\r\n                name: \"pasha\",\r\n                messages: [\r\n                    {name: \"user1\", message: \"supes brahes\"},\r\n                    {name: \"user1\", message: \"sup brah\"},\r\n                    {name: \"user1\", message: \"sup brah\"},\r\n                    {name: \"user1\", message: \"sup brah\"}\r\n                ]\r\n            },\r\n            {\r\n                name: \"sanya\",\r\n                messages: [\r\n                    {name: \"user1\", message: \"sup brah\"},\r\n                    {name: \"user1\", message: \"sup brah\"},\r\n                    {name: \"user1\", message: \"sup brah\"},\r\n                    {name: \"user1\", message: \"sup brah\"}]\r\n            }\r\n        ],\r\n        newMessageText: {name: \"user1\", message: \"shieeeet\"}\r\n};\r\nconst messageReducer = (state = initValue, action) => {\r\n\r\n    let addMessage = () => {\r\n        state.dialogs[0].messages.push(Object.assign({}, state.newMessageText));\r\n        messageTextChange(\"\");\r\n    };\r\n    let messageTextChange = (newText) => {\r\n        state.newMessageText.message = newText;\r\n    };\r\n\r\n    switch (action.type) {\r\n        case \"ADD-MESSAGE\":{\r\n            let stateCopy = {...state}\r\n            state.dialogs[0].messages.push(Object.assign({}, state.newMessageText));\r\n            messageTextChange(\"\");\r\n            return\r\n        }\r\n        case \"CHANGE-MESSAGE\":\r\n            messageTextChange(action.text);\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default messageReducer;"]},"metadata":{},"sourceType":"module"}