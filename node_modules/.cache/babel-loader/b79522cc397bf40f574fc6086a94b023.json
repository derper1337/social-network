{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Philippos\\\\Documents\\\\WebDev\\\\ULTRA_REACT\\\\01\\\\src\\\\components\\\\Content\\\\Profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport css from \"./Profile.module.css\";\nimport React, { PureComponent, useEffect, useState } from \"react\";\nimport Preloader from \"../../common/preloader/preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.Post,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Post;\n\nclass ProfileStatus extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      editMode: false,\n      status: this.props.status\n    };\n\n    this.onStatusChange = e => {\n      console.log(this.props);\n      this.setState({\n        status: e.currentTarget.value\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({\n        status: this.props.status\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", this.state.editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.onStatusChange,\n          value: this.state.status,\n          onBlur: () => {\n            this.setState({\n              editMode: false\n            });\n            this.props.updateStatus(this.state.status);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            this.setState({\n              editMode: true\n            });\n          },\n          children: this.props.status || \"no status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst Profile = props => {\n  _s();\n\n  console.log(props);\n  let postElements = props.ProfileData.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    text: p.text\n  }, p.text, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 57\n  }, this));\n  let text = /*#__PURE__*/React.createRef();\n  const [editMode, setEditMode] = useState(false);\n  const [localProfile, setLocalProfile] = useState({});\n  useEffect(() => {\n    setLocalProfile({ ...props.ProfileData.profile\n    });\n  }, [props.ProfileData.profile]);\n\n  if (!props.ProfileData.profile) {\n    return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.Profile,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.Name,\n      children: props.ProfileData.profile.fullName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ProfileStatus, {\n      status: props.ProfileData.status,\n      updateStatus: props.updateStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: css.ProfilePicture,\n      src: props.ProfileData.profile.photos.large ? props.ProfileData.profile.photos.large : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), editMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" change picture \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.AboutMe,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline\"\n        },\n        children: \"About me:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: \"inline\"\n        },\n        onChange: event => {\n          setLocalProfile({ ...localProfile,\n            aboutMe: event.currentTarget.value\n          });\n        },\n        type: \"text\",\n        value: localProfile.aboutMe || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline\"\n        },\n        children: localProfile.aboutMe ? localProfile.aboutMe : \" no info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.LookingForAJob,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline\"\n        },\n        children: \"Looking for a Job:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: () => {\n          setLocalProfile({ ...localProfile,\n            lookingForAJob: !localProfile.lookingForAJob\n          });\n        },\n        type: \"checkbox\",\n        checked: localProfile.lookingForAJob\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline\"\n        },\n        children: localProfile.lookingForAJob ? \"yes\" : \"no\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.Contacts,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline\"\n        },\n        children: \"vk:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: \"inline\"\n        },\n        onChange: event => {\n          setLocalProfile({ ...localProfile,\n            contacts: { ...localProfile.contacts,\n              vk: event.currentTarget.value\n            }\n          });\n        },\n        type: \"text\",\n        value: localProfile.contacts.vk || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline\"\n        },\n        children: localProfile.contacts ? localProfile.contacts.vk ? localProfile.contacts.vk : \" no info\" : \" no info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.Contacts,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline\"\n        },\n        children: \"github:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: \"inline\"\n        },\n        onChange: event => {\n          setLocalProfile({ ...localProfile,\n            contacts: { ...localProfile.contacts,\n              github: event.currentTarget.value\n            }\n          });\n        },\n        type: \"text\",\n        value: localProfile.contacts.github || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline\"\n        },\n        children: localProfile.contacts ? localProfile.contacts.github ? localProfile.contacts.github : \" no info\" : \" no info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.Contacts,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline\"\n        },\n        children: \"website:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: \"inline\"\n        },\n        onChange: event => {\n          setLocalProfile({ ...localProfile,\n            contacts: { ...localProfile.contacts,\n              website: event.currentTarget.value\n            }\n          });\n        },\n        type: \"text\",\n        value: localProfile.contacts.website || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline\"\n        },\n        children: localProfile.contacts ? localProfile.contacts.website ? localProfile.contacts.website : \" no info\" : \" no info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), props.myId === props.userId || props.userId === \"\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setEditMode(!editMode);\n      },\n      children: [\" \", editMode ? \"submit changes\" : \"change profile info\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 65\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }, this); // return (\n  //     <div className={css.Profile}>\n  //         <div className={css.ProfileName}>{props.ProfileData.profile.fullName}</div>\n  //         <img className={css.ProfilePicture}\n  //              src={props.ProfileData.profile.photos.large}/>\n  //         <br/>\n  //         <div>\n  //             {props.isOwner && <input type={\"file\"}/>}\n  //         </div>\n  //         <ProfileStatus status={props.ProfileData.status} updateStatus={props.updateStatus}/>\n  //         <br/>\n  //         <textarea onChange={() => props.textareaChange(text)}\n  //                   ref={text}\n  //                   value={props.ProfileData.newPostText.text}>\n  //         </textarea>\n  //         <br/>\n  //         <button onClick={() => {\n  //             props.addPost();\n  //         }}>Add new post\n  //         </button>\n  //         <br/>\n  //         <div className={css.MyPosts}>\n  //             {postElements}\n  //         </div>\n  //     </div>);\n};\n\n_s(Profile, \"9ibWErgunSd2rsZy9AaQ97z1J+k=\");\n\n_c2 = Profile;\nexport default Profile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/components/Content/Profile/Profile.js"],"names":["css","React","PureComponent","useEffect","useState","Preloader","Post","props","text","ProfileStatus","state","editMode","status","onStatusChange","e","console","log","setState","currentTarget","value","componentDidUpdate","prevProps","prevState","render","updateStatus","Profile","postElements","ProfileData","posts","map","p","createRef","setEditMode","localProfile","setLocalProfile","profile","Name","fullName","ProfilePicture","photos","large","AboutMe","display","event","aboutMe","LookingForAJob","lookingForAJob","Contacts","contacts","vk","github","website","myId","userId"],"mappings":"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","sourcesContent":["import css from \"./Profile.module.css\"\r\nimport React, {PureComponent, useEffect, useState} from \"react\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\n\r\nconst Post = (props) => {\r\n    return <div className={css.Post}>\r\n        {props.text}\r\n    </div>\r\n}\r\n\r\nclass ProfileStatus extends PureComponent {\r\n    state = {\r\n        editMode: false, status: this.props.status,\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        console.log(this.props)\r\n        this.setState({status: e.currentTarget.value})\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <div> {this.state.editMode ? <input onChange={this.onStatusChange} value={this.state.status} onBlur={() => {\r\n                this.setState({editMode: false});\r\n                this.props.updateStatus(this.state.status);\r\n            }}/> : <div onClick={() => {\r\n                this.setState({editMode: true});\r\n            }}>{this.props.status || \"no status\"}</ div>}\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst Profile = (props) => {\r\n    console.log(props)\r\n    let postElements = props.ProfileData.posts.map(p => <Post text={p.text} key={p.text}/>);\r\n    let text = React.createRef();\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [localProfile, setLocalProfile] = useState({});\r\n    useEffect(() => {\r\n        setLocalProfile({...props.ProfileData.profile});\r\n    }, [props.ProfileData.profile])\r\n\r\n\r\n    if (!props.ProfileData.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (<div className={css.Profile}>\r\n        <div className={css.Name}>{props.ProfileData.profile.fullName}</div>\r\n        <ProfileStatus status={props.ProfileData.status} updateStatus={props.updateStatus}/>\r\n        <img className={css.ProfilePicture}\r\n             src={props.ProfileData.profile.photos.large ? props.ProfileData.profile.photos.large : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"}/>\r\n        {editMode\r\n            ? <button> change picture </button>\r\n            : null\r\n        }\r\n        {/*about me*/}\r\n        <div className={css.AboutMe}>\r\n            <div style={{display: \"inline\"}}>About me:</div>\r\n            {editMode\r\n                ? <input style={{display: \"inline\"}} onChange={(event) => {\r\n                    setLocalProfile({...localProfile, aboutMe: event.currentTarget.value})\r\n                }\r\n                } type={\"text\"} value={localProfile.aboutMe || \"\"}/>\r\n                : <div style={{display: \"inline\"}}>{localProfile.aboutMe ? localProfile.aboutMe : \" no info\"}</div>}\r\n        </div>\r\n        {/*looking for a job*/}\r\n        <div className={css.LookingForAJob}>\r\n            <div style={{display: \"inline\"}}>Looking for a Job:</div>\r\n            {editMode\r\n                ? <input onChange={() => {\r\n                    setLocalProfile({...localProfile, lookingForAJob: !localProfile.lookingForAJob})\r\n                }} type={\"checkbox\"} checked={localProfile.lookingForAJob}/>\r\n                : <div style={{display: \"inline\"}}>{localProfile.lookingForAJob ? \"yes\" : \"no\"}</div>}\r\n        </div>\r\n        {/*{vk}*/}\r\n        <div className={css.Contacts}>\r\n            <div style={{display: \"inline\"}}>vk:</div>\r\n            {editMode\r\n                ? <input style={{display: \"inline\"}} onChange={(event) => {\r\n                    setLocalProfile({\r\n                        ...localProfile,\r\n                        contacts: {...localProfile.contacts, vk: event.currentTarget.value}\r\n                    })\r\n                }\r\n                } type={\"text\"} value={localProfile.contacts.vk || \"\"}/>\r\n                : <div\r\n                    style={{display: \"inline\"}}>{localProfile.contacts ? localProfile.contacts.vk ? localProfile.contacts.vk : \" no info\" : \" no info\"}</div>}\r\n        </div>\r\n        {/*github*/}\r\n        <div className={css.Contacts}>\r\n            <div style={{display: \"inline\"}}>github:</div>\r\n            {editMode\r\n                ? <input style={{display: \"inline\"}} onChange={(event) => {\r\n                    setLocalProfile({\r\n                        ...localProfile,\r\n                        contacts: {...localProfile.contacts, github: event.currentTarget.value}\r\n                    })\r\n                }\r\n                } type={\"text\"} value={localProfile.contacts.github || \"\"}/>\r\n                : <div\r\n                    style={{display: \"inline\"}}>{localProfile.contacts ? localProfile.contacts.github ? localProfile.contacts.github : \" no info\" : \" no info\"}</div>}\r\n        </div>\r\n        {/*website*/}\r\n        <div className={css.Contacts}>\r\n            <div style={{display: \"inline\"}}>website:</div>\r\n            {editMode\r\n                ? <input style={{display: \"inline\"}} onChange={(event) => {\r\n                    setLocalProfile({\r\n                        ...localProfile,\r\n                        contacts: {...localProfile.contacts, website: event.currentTarget.value}\r\n                    })\r\n                }\r\n                } type={\"text\"} value={localProfile.contacts.website || \"\"}/>\r\n                : <div\r\n                    style={{display: \"inline\"}}>{localProfile.contacts ? localProfile.contacts.website ? localProfile.contacts.website : \" no info\" : \" no info\"}</div>}\r\n        </div>\r\n\r\n        {(props.myId === props.userId || props.userId === \"\") ? <button onClick={() => {\r\n            setEditMode(!editMode);\r\n        }}> {editMode ? \"submit changes\" : \"change profile info\"} </button> : null}\r\n    </div>);\r\n\r\n\r\n    // return (\r\n    //     <div className={css.Profile}>\r\n    //         <div className={css.ProfileName}>{props.ProfileData.profile.fullName}</div>\r\n    //         <img className={css.ProfilePicture}\r\n    //              src={props.ProfileData.profile.photos.large}/>\r\n    //         <br/>\r\n    //         <div>\r\n    //             {props.isOwner && <input type={\"file\"}/>}\r\n    //         </div>\r\n    //         <ProfileStatus status={props.ProfileData.status} updateStatus={props.updateStatus}/>\r\n    //         <br/>\r\n    //         <textarea onChange={() => props.textareaChange(text)}\r\n    //                   ref={text}\r\n    //                   value={props.ProfileData.newPostText.text}>\r\n    //         </textarea>\r\n    //         <br/>\r\n    //         <button onClick={() => {\r\n    //             props.addPost();\r\n    //         }}>Add new post\r\n    //         </button>\r\n    //         <br/>\r\n    //         <div className={css.MyPosts}>\r\n    //             {postElements}\r\n    //         </div>\r\n    //     </div>);\r\n}\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}