{"ast":null,"code":"import { usersAPI } from \"../ api/api\";\nimport { isLoading, setCurrentPage, setUsers } from \"./users-reducer\";\nlet initValue = {\n  dialogs: [{\n    name: \"stepa\",\n    messages: [{\n      name: \"user1\",\n      message: \"sup brah\"\n    }, {\n      name: \"user1\",\n      message: \"sup brahh\"\n    }, {\n      name: \"user1\",\n      message: \"sup brahhhh\"\n    }, {\n      name: \"user1\",\n      message: \"sup brahhhhhhhhh\"\n    }]\n  }, {\n    name: \"pasha\",\n    messages: [{\n      name: \"user1\",\n      message: \"supes brahes\"\n    }, {\n      name: \"user1\",\n      message: \"sup brah\"\n    }, {\n      name: \"user1\",\n      message: \"sup brah\"\n    }, {\n      name: \"user1\",\n      message: \"sup brah\"\n    }]\n  }, {\n    name: \"sanya\",\n    messages: [{\n      name: \"user1\",\n      message: \"sup brah\"\n    }, {\n      name: \"user1\",\n      message: \"sup brah\"\n    }, {\n      name: \"user1\",\n      message: \"sup brah\"\n    }, {\n      name: \"user1\",\n      message: \"sup brah\"\n    }]\n  }],\n  newMessageText: {\n    name: \"user1\",\n    message: \"shieeeet\"\n  },\n  friends: []\n};\n\nconst messageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initValue;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD-MESSAGE\":\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.dialogs = [...state.dialogs];\n        stateCopy.newMessageText = { ...state.newMessageText\n        };\n        stateCopy.dialogs[0].messages.push(Object.assign({}, stateCopy.newMessageText));\n        stateCopy.newMessageText.message = \"\";\n        return stateCopy;\n      }\n\n    case \"CHANGE-MESSAGE\":\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.dialogs = [...state.dialogs];\n        stateCopy.newMessageText = { ...state.newMessageText\n        };\n        stateCopy.newMessageText.message = action.text;\n        return stateCopy;\n      }\n\n    case \"SET-FRIENDS\":\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.friends = action.friends;\n        console.log(action.friends);\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst setFriends = friends => ({\n  type: \"SET-FRIENDS\",\n  friends: friends\n});\n\nexport const getFriendsThunkCreator = () => {\n  return dispatch => {\n    usersAPI.getFriends().then(data => {\n      if (data.resultCode === 0) {\n        console.log(data);\n        dispatch({\n          type: \"SET-FRIENDS\",\n          friends: data.items\n        });\n      }\n    });\n  };\n};\nexport default messageReducer;","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/Redux/message-reducer.js"],"names":["usersAPI","isLoading","setCurrentPage","setUsers","initValue","dialogs","name","messages","message","newMessageText","friends","messageReducer","state","action","type","stateCopy","push","Object","assign","text","console","log","setFriends","getFriendsThunkCreator","dispatch","getFriends","then","data","resultCode","items"],"mappings":"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","sourcesContent":["import {usersAPI} from \"../ api/api\";\r\nimport {isLoading, setCurrentPage, setUsers} from \"./users-reducer\";\r\n\r\nlet initValue = {\r\n        dialogs: [\r\n            {\r\n                name: \"stepa\",\r\n                messages: [\r\n                    {name: \"user1\", message: \"sup brah\"},\r\n                    {name: \"user1\", message: \"sup brahh\"},\r\n                    {name: \"user1\", message: \"sup brahhhh\"},\r\n                    {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\r\n            },\r\n            {\r\n                name: \"pasha\",\r\n                messages: [\r\n                    {name: \"user1\", message: \"supes brahes\"},\r\n                    {name: \"user1\", message: \"sup brah\"},\r\n                    {name: \"user1\", message: \"sup brah\"},\r\n                    {name: \"user1\", message: \"sup brah\"}\r\n                ]\r\n            },\r\n            {\r\n                name: \"sanya\",\r\n                messages: [\r\n                    {name: \"user1\", message: \"sup brah\"},\r\n                    {name: \"user1\", message: \"sup brah\"},\r\n                    {name: \"user1\", message: \"sup brah\"},\r\n                    {name: \"user1\", message: \"sup brah\"}]\r\n            }\r\n        ],\r\n        newMessageText: {name: \"user1\", message: \"shieeeet\"},\r\n        friends:[],\r\n};\r\nconst messageReducer = (state = initValue, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD-MESSAGE\":{\r\n            let stateCopy = {...state};\r\n            stateCopy.dialogs = [...state.dialogs];\r\n            stateCopy.newMessageText = {...state.newMessageText};\r\n            stateCopy.dialogs[0].messages.push(Object.assign({}, stateCopy.newMessageText));\r\n            stateCopy.newMessageText.message = \"\";\r\n            return stateCopy;\r\n        }\r\n        case \"CHANGE-MESSAGE\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.dialogs = [...state.dialogs];\r\n            stateCopy.newMessageText = {...state.newMessageText};\r\n            stateCopy.newMessageText.message = action.text;\r\n            return stateCopy;\r\n        }\r\n        case \"SET-FRIENDS\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.friends = action.friends;\r\n            console.log(action.friends);\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst setFriends = (friends) => ({type: \"SET-FRIENDS\", friends: friends});\r\n\r\nexport const getFriendsThunkCreator = () => {\r\n    return (dispatch) => {\r\n        usersAPI.getFriends().then(data => {\r\n            if (data.resultCode === 0) {\r\n                console.log(data);\r\n                dispatch({type: \"SET-FRIENDS\", friends:data.items});\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default messageReducer;"]},"metadata":{},"sourceType":"module"}