{"ast":null,"code":"import { usersAPI } from \"../ api/api\";\nimport { follow, isFollowing } from \"./users-reducer\";\nlet initValue = {\n  posts: [{\n    id: \"1\",\n    likesCount: 3,\n    text: \"jopa\"\n  }, {\n    id: \"2\",\n    likesCount: 6,\n    text: \"jopaa\"\n  }, {\n    id: \"3\",\n    likesCount: 2,\n    text: \"jopaaa\"\n  }, {\n    id: \"4\",\n    likesCount: 1,\n    text: \"jopaaaaaa\"\n  }],\n  newPostText: {\n    id: \"5\",\n    likesCount: 0,\n    text: \"asdasda\"\n  },\n  profile: null\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initValue;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD-POST\":\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.posts = [...state.posts];\n        stateCopy.posts.push(Object.assign({}, state.newPostText));\n        stateCopy.newPostText.text = '';\n        return stateCopy;\n      }\n\n    case \"CHANGE-POST\":\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.newPostText.text = action.text;\n        return stateCopy;\n      }\n\n    case \"SET-USER-PROFILE\":\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPost = () => ({\n  type: \"ADD-POST\"\n});\nexport const textareaChange = text => ({\n  type: \"CHANGE-POST\",\n  text: text.current.value\n});\nexport const setUserProfile = profile => ({\n  type: \"SET-USER-PROFILE\",\n  profile: profile\n});\nexport const getUserThunkCreator = userId => {\n  return dispatch => {\n    if (userId == \"\") {\n      userId = 2;\n    }\n\n    usersAPI.getProfile(userId).then(data => {\n      dispatch(setUserProfile(data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/Redux/profileReducer.js"],"names":["usersAPI","follow","isFollowing","initValue","posts","id","likesCount","text","newPostText","profile","profileReducer","state","action","type","stateCopy","push","Object","assign","addPost","textareaChange","current","value","setUserProfile","getUserThunkCreator","userId","dispatch","getProfile","then","data"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,aAAvB;AACA,SAAQC,MAAR,EAAgBC,WAAhB,QAAkC,iBAAlC;AAEA,IAAIC,SAAS,GAAG;AACZC,EAAAA,KAAK,EAAE,CACH;AAACC,IAAAA,EAAE,EAAE,GAAL;AAAUC,IAAAA,UAAU,EAAE,CAAtB;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GADG,EAEH;AAACF,IAAAA,EAAE,EAAE,GAAL;AAAUC,IAAAA,UAAU,EAAE,CAAtB;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAFG,EAGH;AAACF,IAAAA,EAAE,EAAE,GAAL;AAAUC,IAAAA,UAAU,EAAE,CAAtB;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAHG,EAIH;AAACF,IAAAA,EAAE,EAAE,GAAL;AAAUC,IAAAA,UAAU,EAAE,CAAtB;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAJG,CADK;AAOZC,EAAAA,WAAW,EAAE;AAACH,IAAAA,EAAE,EAAE,GAAL;AAAUC,IAAAA,UAAU,EAAE,CAAtB;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAPD;AAQZE,EAAAA,OAAO,EAAE;AARG,CAAhB;;AAUA,MAAMC,cAAc,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBR,SAAsB;AAAA,MAAXS,MAAW;;AAElD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AAAiB;AACb,YAAIC,SAAS,GAAG,EAAC,GAAGH;AAAJ,SAAhB;AACAG,QAAAA,SAAS,CAACV,KAAV,GAAkB,CAAC,GAAGO,KAAK,CAACP,KAAV,CAAlB;AACAU,QAAAA,SAAS,CAACV,KAAV,CAAgBW,IAAhB,CAAqBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAK,CAACH,WAAxB,CAArB;AACAM,QAAAA,SAAS,CAACN,WAAV,CAAsBD,IAAtB,GAA6B,EAA7B;AACA,eAAOO,SAAP;AAAkB;;AACtB,SAAK,aAAL;AAAoB;AAChB,YAAIA,SAAS,GAAG,EAAC,GAAGH;AAAJ,SAAhB;AACAG,QAAAA,SAAS,CAACN,WAAV,CAAsBD,IAAtB,GAA6BK,MAAM,CAACL,IAApC;AACA,eAAOO,SAAP;AACH;;AACD,SAAK,kBAAL;AAAwB;AACpB,eAAO,EAAC,GAAGH,KAAJ;AAAWF,UAAAA,OAAO,EAAEG,MAAM,CAACH;AAA3B,SAAP;AACH;;AACD;AACI,aAAOE,KAAP;AAhBR;AAmBH,CArBD;;AAsBA,OAAO,MAAMO,OAAO,GAAG,OAAO;AAACL,EAAAA,IAAI,EAAE;AAAP,CAAP,CAAhB;AACP,OAAO,MAAMM,cAAc,GAAIZ,IAAD,KAAW;AAACM,EAAAA,IAAI,EAAE,aAAP;AAAqBN,EAAAA,IAAI,EAAEA,IAAI,CAACa,OAAL,CAAaC;AAAxC,CAAX,CAAvB;AACP,OAAO,MAAMC,cAAc,GAAIb,OAAD,KAAc;AAACI,EAAAA,IAAI,EAAC,kBAAN;AAA0BJ,EAAAA,OAAO,EAACA;AAAlC,CAAd,CAAvB;AAEP,OAAO,MAAMc,mBAAmB,GAAIC,MAAD,IAAY;AAC3C,SAAQC,QAAD,IAAc;AACjB,QAAGD,MAAM,IAAE,EAAX,EAAc;AACVA,MAAAA,MAAM,GAAC,CAAP;AACH;;AACDxB,IAAAA,QAAQ,CAAC0B,UAAT,CAAoBF,MAApB,EACKG,IADL,CACUC,IAAI,IAAI;AACVH,MAAAA,QAAQ,CAACH,cAAc,CAACM,IAAD,CAAf,CAAR;AACH,KAHL;AAIH,GARD;AASH,CAVM;AAYP,eAAelB,cAAf","sourcesContent":["import {usersAPI} from \"../ api/api\";\r\nimport {follow, isFollowing} from \"./users-reducer\";\r\n\r\nlet initValue = {\r\n    posts: [\r\n        {id: \"1\", likesCount: 3, text: \"jopa\"},\r\n        {id: \"2\", likesCount: 6, text: \"jopaa\"},\r\n        {id: \"3\", likesCount: 2, text: \"jopaaa\"},\r\n        {id: \"4\", likesCount: 1, text: \"jopaaaaaa\"}\r\n    ],\r\n    newPostText: {id: \"5\", likesCount: 0, text: \"asdasda\"},\r\n    profile: null,\r\n};\r\nconst profileReducer = (state = initValue, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD-POST\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.posts = [...state.posts]\r\n            stateCopy.posts.push(Object.assign({}, state.newPostText));\r\n            stateCopy.newPostText.text = '';\r\n            return stateCopy;}\r\n        case \"CHANGE-POST\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.newPostText.text = action.text;\r\n            return stateCopy;\r\n        }\r\n        case \"SET-USER-PROFILE\":{\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const addPost = () => ({type: \"ADD-POST\"});\r\nexport const textareaChange = (text) => ({type: \"CHANGE-POST\",text: text.current.value});\r\nexport const setUserProfile = (profile) => ({type:\"SET-USER-PROFILE\", profile:profile});\r\n\r\nexport const getUserThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        if(userId==\"\"){\r\n            userId=2;\r\n        }\r\n        usersAPI.getProfile(userId)\r\n            .then(data => {\r\n                dispatch(setUserProfile(data));\r\n            })\r\n    }\r\n}\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}