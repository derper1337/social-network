{"ast":null,"code":"import { usersAPI, authAPI } from \"../ api/api\";\nimport { setAuthThunkCreator } from \"./auth-reducer\";\nlet initValue = {\n  initialized: false\n};\n\nconst appReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initValue;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET-INITIALIZED\":\n      {\n        let stateCopy = { ...state,\n          ...(action.initialized = true)\n        };\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const init = () => ({\n  type: \"SET-INITIALIZED\"\n});\nexport const initThunkCreator = () => {\n  return dispatch => {\n    debugger;\n    let promise = dispatch(setAuthThunkCreator());\n    promise.then(() => {\n      dispatch(init());\n    });\n  };\n};\nexport default appReducer;","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/Redux/app-reducer.js"],"names":["usersAPI","authAPI","setAuthThunkCreator","initValue","initialized","appReducer","state","action","type","stateCopy","init","initThunkCreator","dispatch","promise","then"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,OAAlB,QAAgC,aAAhC;AACA,SAAQC,mBAAR,QAAkC,gBAAlC;AAEA,IAAIC,SAAS,GAAG;AACZC,EAAAA,WAAW,EAAE;AADD,CAAhB;;AAGA,MAAMC,UAAU,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBH,SAAsB;AAAA,MAAXI,MAAW;;AAE9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AAAwB;AACpB,YAAIC,SAAS,GAAG,EACZ,GAAGH,KADS;AAEZ,cAAGC,MAAM,CAACH,WAAP,GAAmB,IAAtB;AAFY,SAAhB;AAIA,eAAOK,SAAP;AACH;;AACD;AACI,aAAOH,KAAP;AATR;AAWH,CAbD;;AAcA,OAAO,MAAMI,IAAI,GAAG,OAAO;AAACF,EAAAA,IAAI,EAAE;AAAP,CAAP,CAAb;AAEP,OAAO,MAAMG,gBAAgB,GAAG,MAAK;AACjC,SAAQC,QAAD,IAAa;AAChB;AACA,QAAIC,OAAO,GAAGD,QAAQ,CAACV,mBAAmB,EAApB,CAAtB;AACAW,IAAAA,OAAO,CAACC,IAAR,CAAa,MAAI;AACbF,MAAAA,QAAQ,CAACF,IAAI,EAAL,CAAR;AACH,KAFD;AAGH,GAND;AAOH,CARM;AAUP,eAAeL,UAAf","sourcesContent":["import {usersAPI, authAPI} from \"../ api/api\";\r\nimport {setAuthThunkCreator} from \"./auth-reducer\";\r\n\r\nlet initValue = {\r\n    initialized: false\r\n};\r\nconst appReducer = (state = initValue, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"SET-INITIALIZED\": {\r\n            let stateCopy = {\r\n                ...state,\r\n                ...action.initialized=true,\r\n            }\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const init = () => ({type: \"SET-INITIALIZED\"});\r\n\r\nexport const initThunkCreator = () =>{\r\n    return (dispatch) =>{\r\n        debugger\r\n        let promise = dispatch(setAuthThunkCreator());\r\n        promise.then(()=>{\r\n            dispatch(init());\r\n        });\r\n    }\r\n}\r\n\r\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}