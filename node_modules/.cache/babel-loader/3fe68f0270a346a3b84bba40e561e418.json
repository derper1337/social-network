{"ast":null,"code":"import { usersAPI } from \"../ api/api\";\nimport { isLoading, setCurrentPage, setUsers } from \"./users-reducer\";\nlet initValue = {\n  // dialogs: [\n  //     {   id: \"stepa\",\n  //         messages: [\n  //             {name: \"user1\", message: \"sup brah\"},\n  //             {name: \"user1\", message: \"sup brahh\"},\n  //             {name: \"user1\", message: \"sup brahhhh\"},\n  //             {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\n  //     },\n  //     {   id: \"sssstepa\",\n  //         messages: [\n  //             {name: \"user1\", message: \"sussssp brah\"},\n  //             {name: \"user1\", message: \"sup brahh\"},\n  //             {name: \"user1\", message: \"sup brahhhh\"},\n  //             {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\n  //     },\n  //     {   id: \"seeeeetepa\",\n  //         messages: [\n  //             {name: \"user1\", message: \"sup brah\"},\n  //             {name: \"user1\", message: \"sup brahh\"},\n  //             {name: \"user1\", message: \"sussssssssssp brahhhh\"},\n  //             {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\n  //     },\n  // ],\n  newMessageText: {\n    name: \"user1\",\n    message: \"shieeeet\"\n  },\n  friends: [],\n  dialogs: [],\n  activeDialog: \"\"\n};\n\nconst messageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initValue;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD-MESSAGE\":\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.dialogs = [...state.dialogs];\n        stateCopy.newMessageText = { ...state.newMessageText\n        };\n        let currentDialogNumber = stateCopy.dialogs.findIndex(obj => {\n          return obj.name === stateCopy.activeDialog;\n        });\n        console.log(currentDialogNumber);\n        stateCopy.dialogs[0].messages.push(Object.assign({}, stateCopy.newMessageText));\n        stateCopy.newMessageText.message = \"\";\n        return stateCopy;\n      }\n\n    case \"CHANGE-MESSAGE\":\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.dialogs = [...state.dialogs];\n        stateCopy.newMessageText = { ...state.newMessageText\n        };\n        stateCopy.newMessageText.message = action.text;\n        return stateCopy;\n      }\n\n    case \"SET-FRIENDS\":\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.friends = action.friends;\n        return stateCopy;\n      }\n\n    case \"SET-DIALOGS\":\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.dialogs = stateCopy.friends.map(f => ({\n          name: f.name,\n          id: f.id,\n          messages: [{\n            name: \"user1\",\n            message: \"sup brah\"\n          }, {\n            name: \"user1\",\n            message: \"sup brahh\"\n          }, {\n            name: \"user1\",\n            message: \"sup brahhhh\"\n          }, {\n            name: \"user1\",\n            message: \"sup brahhhhhhhhh\"\n          }]\n        }));\n        return stateCopy;\n      }\n\n    case \"SET-ACTIVE-DIALOG\":\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.activeDialog = action.dialogName;\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst setFriends = friends => ({\n  type: \"SET-FRIENDS\",\n  friends: friends\n}); // export const getFriendsThunkCreator = () => {\n//     return (dispatch) => {\n//         usersAPI.getFriends().then(data => {\n//             dispatch({type: \"SET-FRIENDS\", friends: data.items});\n//             dispatch({type: \"SET-DIALOGS\"});\n//         });\n//     }\n// }\n\n\nexport default messageReducer;","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/Redux/message-reducer.js"],"names":["usersAPI","isLoading","setCurrentPage","setUsers","initValue","newMessageText","name","message","friends","dialogs","activeDialog","messageReducer","state","action","type","stateCopy","currentDialogNumber","findIndex","obj","console","log","messages","push","Object","assign","text","map","f","id","dialogName","setFriends"],"mappings":"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","sourcesContent":["import {usersAPI} from \"../ api/api\";\r\nimport {isLoading, setCurrentPage, setUsers} from \"./users-reducer\";\r\n\r\nlet initValue = {\r\n    // dialogs: [\r\n    //     {   id: \"stepa\",\r\n    //         messages: [\r\n    //             {name: \"user1\", message: \"sup brah\"},\r\n    //             {name: \"user1\", message: \"sup brahh\"},\r\n    //             {name: \"user1\", message: \"sup brahhhh\"},\r\n    //             {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\r\n    //     },\r\n    //     {   id: \"sssstepa\",\r\n    //         messages: [\r\n    //             {name: \"user1\", message: \"sussssp brah\"},\r\n    //             {name: \"user1\", message: \"sup brahh\"},\r\n    //             {name: \"user1\", message: \"sup brahhhh\"},\r\n    //             {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\r\n    //     },\r\n    //     {   id: \"seeeeetepa\",\r\n    //         messages: [\r\n    //             {name: \"user1\", message: \"sup brah\"},\r\n    //             {name: \"user1\", message: \"sup brahh\"},\r\n    //             {name: \"user1\", message: \"sussssssssssp brahhhh\"},\r\n    //             {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\r\n    //     },\r\n    // ],\r\n    newMessageText: {name: \"user1\", message: \"shieeeet\"},\r\n    friends: [],\r\n    dialogs:[],\r\n    activeDialog:\"\",\r\n};\r\nconst messageReducer = (state = initValue, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD-MESSAGE\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.dialogs = [...state.dialogs];\r\n            stateCopy.newMessageText = {...state.newMessageText};\r\n            let currentDialogNumber = stateCopy.dialogs.findIndex((obj)=>{return obj.name===stateCopy.activeDialog});\r\n            console.log(currentDialogNumber);\r\n            stateCopy.dialogs[0].messages.push(Object.assign({}, stateCopy.newMessageText));\r\n            stateCopy.newMessageText.message = \"\";\r\n            return stateCopy;\r\n        }\r\n        case \"CHANGE-MESSAGE\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.dialogs = [...state.dialogs];\r\n            stateCopy.newMessageText = {...state.newMessageText};\r\n            stateCopy.newMessageText.message = action.text;\r\n            return stateCopy;\r\n        }\r\n        case \"SET-FRIENDS\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.friends = action.friends;\r\n            return stateCopy;\r\n        }\r\n        case \"SET-DIALOGS\": {\r\n            let stateCopy = {...state};\r\n            stateCopy.dialogs = stateCopy.friends.map(f => ({\r\n                name:f.name,\r\n                id: f.id,\r\n                messages:[\r\n                    {name: \"user1\", message: \"sup brah\"},\r\n                    {name: \"user1\", message: \"sup brahh\"},\r\n                    {name: \"user1\", message: \"sup brahhhh\"},\r\n                    {name: \"user1\", message: \"sup brahhhhhhhhh\"}]\r\n            }));\r\n            return stateCopy;\r\n        }\r\n        case \"SET-ACTIVE-DIALOG\":{\r\n                let stateCopy = {...state};\r\n                stateCopy.activeDialog = action.dialogName;\r\n                return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst setFriends = (friends) => ({type: \"SET-FRIENDS\", friends: friends});\r\n\r\n// export const getFriendsThunkCreator = () => {\r\n//     return (dispatch) => {\r\n//         usersAPI.getFriends().then(data => {\r\n//             dispatch({type: \"SET-FRIENDS\", friends: data.items});\r\n//             dispatch({type: \"SET-DIALOGS\"});\r\n//         });\r\n//     }\r\n// }\r\n\r\nexport default messageReducer;"]},"metadata":{},"sourceType":"module"}