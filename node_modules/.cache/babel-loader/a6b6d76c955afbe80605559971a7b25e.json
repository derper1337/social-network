{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Philippos\\\\Documents\\\\WebDev\\\\ULTRA_REACT\\\\01\\\\src\\\\components\\\\Content\\\\Messages\\\\Messages.js\";\nimport { NavLink, Navigate, Route, Routes } from \"react-router-dom\";\nimport css from \"./Messages.module.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DialogItem = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.DialogItem,\n    children: /*#__PURE__*/_jsxDEV(NavLink, {\n      onClick: () => {\n        props.setActiveDialog(props.name);\n      },\n      className: props.messageData.activeDialog === props.name ? css.active : null,\n      to: \"/messages/\" + props.name,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n};\n\n_c = DialogItem;\n\nconst MessageItem = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.MessageItem,\n    children: props.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n};\n\n_c2 = MessageItem;\n\nconst Messages = props => {\n  console.log(props);\n  let text = /*#__PURE__*/React.createRef();\n  const dialogList = props.messageData.friends.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    messageData: props.messageData,\n    setActiveDialog: props.setActiveDialog,\n    id: d.id,\n    name: d.name\n  }, d.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 59\n  }, this));\n  let messageList = props.messageData.dialogs.map(m => /*#__PURE__*/_jsxDEV(Route, {\n    path: m.name,\n    element: m.messages.map(ml => /*#__PURE__*/_jsxDEV(MessageItem, {\n      message: ml.message\n    }, ml.message, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 39\n    }, this))\n  }, m.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 58\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.Messages,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.LeftColumn,\n      children: dialogList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.RightColumn,\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: messageList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: text,\n        value: props.messageData.newMessageText.message,\n        onChange: () => props.textareaChange(text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.addMessage();\n        },\n        children: \" send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this); // let messageList;\n  // let dialogList = props.messageData.dialogs.map(d => <DialogItem dialogName={d.name} key={d.name}/>);\n  // let messages = props.messageData.dialogs.map(m => <Route\n  //     path={m.name}\n  //     key={m.name}\n  //     element={messageList = m.messages.map(ml => <MessageItem message={ml.message} key={ml.message}/>)}>\n  // </Route>);\n  // let text = React.createRef();\n  // return (\n  //     <div className={css.Messages}>\n  //         <div className={css.leftbar}>\n  //             {dialogList}\n  //         </div>\n  //         <div className={css.rightBar}>\n  //             <Routes>\n  //                 {messages}\n  //             </Routes>\n  //             <textarea ref={text}\n  //                       value={props.messageData.newMessageText.message}\n  //                       onChange={() => props.textareaChange(text)}></textarea>\n  //             <br/>\n  //             <button onClick={() => {\n  //                 props.addMessage()\n  //             }}> send\n  //             </button>\n  //\n  //         </div>\n  //     </div>\n  // );\n};\n\n_c3 = Messages;\nexport default Messages;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DialogItem\");\n$RefreshReg$(_c2, \"MessageItem\");\n$RefreshReg$(_c3, \"Messages\");","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/components/Content/Messages/Messages.js"],"names":["NavLink","Navigate","Route","Routes","css","React","useState","DialogItem","props","setActiveDialog","name","messageData","activeDialog","active","MessageItem","message","Messages","console","log","text","createRef","dialogList","friends","map","d","id","messageList","dialogs","m","messages","ml","LeftColumn","RightColumn","newMessageText","textareaChange","addMessage"],"mappings":"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","sourcesContent":["import {NavLink, Navigate, Route, Routes} from \"react-router-dom\";\r\nimport css from \"./Messages.module.css\"\r\nimport React, {useState} from \"react\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return <div className={css.DialogItem}>\r\n        <NavLink onClick={()=>{props.setActiveDialog(props.name)}}\r\n                 className={props.messageData.activeDialog === props.name ? css.active : null}\r\n                 to={\"/messages/\" + props.name}><span>{props.name}</span></NavLink>\r\n    </div>\r\n}\r\nconst MessageItem = (props) => {\r\n    return <div className={css.MessageItem}>\r\n        {props.message}\r\n    </div>\r\n}\r\n\r\nconst Messages = (props) => {\r\n    console.log(props);\r\n\r\n\r\n    let text = React.createRef();\r\n    const dialogList = props.messageData.friends.map(d => <DialogItem\r\n        messageData={props.messageData}\r\n        setActiveDialog={props.setActiveDialog}\r\n        id={d.id} name={d.name} key={d.id}/>);\r\n    let messageList = props.messageData.dialogs.map(m => <Route\r\n        path={m.name}\r\n        key={m.name}\r\n        element={m.messages.map(ml => <MessageItem message={ml.message} key={ml.message}/>)}/>);\r\n\r\n    return <div className={css.Messages}>\r\n        <div className={css.LeftColumn}>\r\n            {dialogList}\r\n        </div>\r\n        <div className={css.RightColumn}>\r\n            <Routes>\r\n                {messageList}\r\n            </Routes>\r\n            <textarea ref={text}\r\n                      value={props.messageData.newMessageText.message}\r\n                      onChange={() => props.textareaChange(text)}/>\r\n            <br/>\r\n            <button onClick={() => {\r\n                props.addMessage()\r\n            }}> send\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    // let messageList;\r\n    // let dialogList = props.messageData.dialogs.map(d => <DialogItem dialogName={d.name} key={d.name}/>);\r\n    // let messages = props.messageData.dialogs.map(m => <Route\r\n    //     path={m.name}\r\n    //     key={m.name}\r\n    //     element={messageList = m.messages.map(ml => <MessageItem message={ml.message} key={ml.message}/>)}>\r\n    // </Route>);\r\n    // let text = React.createRef();\r\n    // return (\r\n    //     <div className={css.Messages}>\r\n    //         <div className={css.leftbar}>\r\n    //             {dialogList}\r\n    //         </div>\r\n    //         <div className={css.rightBar}>\r\n    //             <Routes>\r\n    //                 {messages}\r\n    //             </Routes>\r\n    //             <textarea ref={text}\r\n    //                       value={props.messageData.newMessageText.message}\r\n    //                       onChange={() => props.textareaChange(text)}></textarea>\r\n    //             <br/>\r\n    //             <button onClick={() => {\r\n    //                 props.addMessage()\r\n    //             }}> send\r\n    //             </button>\r\n    //\r\n    //         </div>\r\n    //     </div>\r\n    // );\r\n}\r\n\r\nexport default Messages;"]},"metadata":{},"sourceType":"module"}