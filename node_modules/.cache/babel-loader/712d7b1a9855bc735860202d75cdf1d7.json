{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Philippos\\\\Documents\\\\WebDev\\\\ULTRA_REACT\\\\01\\\\src\\\\components\\\\Content\\\\Messages\\\\Messages.js\";\nimport { NavLink, Navigate, Route, Routes } from \"react-router-dom\";\nimport css from \"./Messages.module.css\";\nimport React, { useEffect, useState } from \"react\";\nimport SendPostButton from \"../../common/images/send.png\";\nimport WarningImage from \"../../common/images/warning.png\";\nimport DeleteButton from \"../../common/images/delete.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DialogItem = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.DialogItem,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.deleteFriend(props.userId),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        width: \"10px\",\n        src: DeleteButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      onClick: () => {\n        props.setActiveDialog(props.name);\n      },\n      className: props.messageData.activeDialog === props.name ? css.active : null,\n      to: \"/messages/\" + props.name,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n};\n\n_c = DialogItem;\n\nconst MessageItem = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.MessageItem,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.Message,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: css.MessageContent,\n        children: props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n\n_c2 = MessageItem;\nlet idCrutch = 0;\n\nconst Messages = props => {\n  let text = /*#__PURE__*/React.createRef();\n  const dialogList = props.messageData.friends.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    messageData: props.messageData,\n    setActiveDialog: props.setActiveDialog,\n    userId: d.id,\n    deleteFriend: props.deleteFriend,\n    id: d.id,\n    name: d.name\n  }, d.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 59\n  }, this));\n  let messageList = props.messageData.dialogs.map(m => /*#__PURE__*/_jsxDEV(Route, {\n    path: m.name,\n    element: m.messages.map(ml => /*#__PURE__*/_jsxDEV(MessageItem, {\n      message: ml.message,\n      name: props.login\n    }, idCrutch++, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 39\n    }, this))\n  }, m.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 58\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.Messages,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.LeftColumn,\n      children: dialogList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.RightColumn,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.MessageWarning,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: WarningImage,\n          width: \"40px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Current version of API doesn't support proper message exchange, this page exist as a space for future improvement!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.MessageSpace,\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: messageList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.MessagePanel,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: text,\n          value: props.messageData.newMessageText.message,\n          onChange: () => props.textareaChange(text.current.value),\n          onFocus: () => {\n            let flag = 0;\n\n            if (props.messageData.activeDialog === \"\") {\n              props.textareaChange(\"Select a dialog\");\n              flag = 1;\n            } else if (flag == 1) {\n              console.log(text);\n            }\n          },\n          onKeyDown: event => {\n            if (event.key === \"Enter\") {\n              event.preventDefault();\n              props.addMessage();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            props.addMessage();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: SendPostButton,\n            width: \"40px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this); // let messageList;\n  // let dialogList = props.messageData.dialogs.map(d => <DialogItem dialogName={d.name} key={d.name}/>);\n  // let messages = props.messageData.dialogs.map(m => <Route\n  //     path={m.name}\n  //     key={m.name}\n  //     element={messageList = m.messages.map(ml => <MessageItem message={ml.message} key={ml.message}/>)}>\n  // </Route>);\n  // let text = React.createRef();\n  // return (\n  //     <div className={css.Messages}>\n  //         <div className={css.leftbar}>\n  //             {dialogList}\n  //         </div>\n  //         <div className={css.rightBar}>\n  //             <Routes>\n  //                 {messages}\n  //             </Routes>\n  //             <textarea ref={text}\n  //                       value={props.messageData.newMessageText.message}\n  //                       onChange={() => props.textareaChange(text)}></textarea>\n  //             <br/>\n  //             <button onClick={() => {\n  //                 props.addMessage()\n  //             }}> send\n  //             </button>\n  //\n  //         </div>\n  //     </div>\n  // );\n};\n\n_c3 = Messages;\nexport default Messages;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DialogItem\");\n$RefreshReg$(_c2, \"MessageItem\");\n$RefreshReg$(_c3, \"Messages\");","map":{"version":3,"sources":["C:/Users/Philippos/Documents/WebDev/ULTRA_REACT/01/src/components/Content/Messages/Messages.js"],"names":["NavLink","Navigate","Route","Routes","css","React","useEffect","useState","SendPostButton","WarningImage","DeleteButton","DialogItem","props","deleteFriend","userId","setActiveDialog","name","messageData","activeDialog","active","MessageItem","Message","MessageContent","message","idCrutch","Messages","text","createRef","dialogList","friends","map","d","id","messageList","dialogs","m","messages","ml","login","LeftColumn","RightColumn","MessageWarning","MessageSpace","MessagePanel","newMessageText","textareaChange","current","value","flag","console","log","event","key","preventDefault","addMessage"],"mappings":";AAAA,SAAQA,OAAR,EAAiBC,QAAjB,EAA2BC,KAA3B,EAAkCC,MAAlC,QAA+C,kBAA/C;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,sBAAO;AAAK,IAAA,SAAS,EAAER,GAAG,CAACO,UAApB;AAAA,4BACH;AAAQ,MAAA,OAAO,EAAE,MAAIC,KAAK,CAACC,YAAN,CAAmBD,KAAK,CAACE,MAAzB,CAArB;AAAA,6BAAuD;AAAK,QAAA,KAAK,EAAE,MAAZ;AAAoB,QAAA,GAAG,EAAEJ;AAAzB;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,YADG,eAEH,QAAC,OAAD;AAAS,MAAA,OAAO,EAAE,MAAM;AACpBE,QAAAA,KAAK,CAACG,eAAN,CAAsBH,KAAK,CAACI,IAA5B;AACH,OAFD;AAES,MAAA,SAAS,EAAEJ,KAAK,CAACK,WAAN,CAAkBC,YAAlB,KAAmCN,KAAK,CAACI,IAAzC,GAAgDZ,GAAG,CAACe,MAApD,GAA6D,IAFjF;AAGS,MAAA,EAAE,EAAE,eAAeP,KAAK,CAACI,IAHlC;AAAA,6BAGwC;AAAA,kBAAOJ,KAAK,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA;AAHxC;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAOH,CARD;;KAAML,U;;AASN,MAAMS,WAAW,GAAIR,KAAD,IAAW;AAC3B,sBAAO;AAAK,IAAA,SAAS,EAAER,GAAG,CAACgB,WAApB;AAAA,2BACH;AAAK,MAAA,SAAS,EAAEhB,GAAG,CAACiB,OAApB;AAAA,6BACI;AAAM,QAAA,SAAS,EAAEjB,GAAG,CAACkB,cAArB;AAAA,kBAAsCV,KAAK,CAACW;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CAND;;MAAMH,W;AAON,IAAII,QAAQ,GAAG,CAAf;;AACA,MAAMC,QAAQ,GAAIb,KAAD,IAAW;AAExB,MAAIc,IAAI,gBAAGrB,KAAK,CAACsB,SAAN,EAAX;AACA,QAAMC,UAAU,GAAGhB,KAAK,CAACK,WAAN,CAAkBY,OAAlB,CAA0BC,GAA1B,CAA8BC,CAAC,iBAAI,QAAC,UAAD;AAClD,IAAA,WAAW,EAAEnB,KAAK,CAACK,WAD+B;AAElD,IAAA,eAAe,EAAEL,KAAK,CAACG,eAF2B;AAGlD,IAAA,MAAM,EAAEgB,CAAC,CAACC,EAHwC;AAIlD,IAAA,YAAY,EAAEpB,KAAK,CAACC,YAJ8B;AAKlD,IAAA,EAAE,EAAEkB,CAAC,CAACC,EAL4C;AAKxC,IAAA,IAAI,EAAED,CAAC,CAACf;AALgC,KAKrBe,CAAC,CAACC,EALmB;AAAA;AAAA;AAAA;AAAA,UAAnC,CAAnB;AAMA,MAAIC,WAAW,GAAGrB,KAAK,CAACK,WAAN,CAAkBiB,OAAlB,CAA0BJ,GAA1B,CAA8BK,CAAC,iBAAI,QAAC,KAAD;AACjD,IAAA,IAAI,EAAEA,CAAC,CAACnB,IADyC;AAGjD,IAAA,OAAO,EAAEmB,CAAC,CAACC,QAAF,CAAWN,GAAX,CAAeO,EAAE,iBAAI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEA,EAAE,CAACd,OAAzB;AAAkC,MAAA,IAAI,EAAEX,KAAK,CAAC0B;AAA9C,OAA0Dd,QAAQ,EAAlE;AAAA;AAAA;AAAA;AAAA,YAArB;AAHwC,KAE5CW,CAAC,CAACnB,IAF0C;AAAA;AAAA;AAAA;AAAA,UAAnC,CAAlB;AAKA,sBAAO;AAAK,IAAA,SAAS,EAAEZ,GAAG,CAACqB,QAApB;AAAA,4BACH;AAAK,MAAA,SAAS,EAAErB,GAAG,CAACmC,UAApB;AAAA,gBACKX;AADL;AAAA;AAAA;AAAA;AAAA,YADG,eAIH;AAAK,MAAA,SAAS,EAAExB,GAAG,CAACoC,WAApB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEpC,GAAG,CAACqC,cAApB;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEhC,YAAV;AAAwB,UAAA,KAAK,EAAE;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAEL,GAAG,CAACsC,YAApB;AAAA,+BACI,QAAC,MAAD;AAAA,oBACKT;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI;AAAK,QAAA,SAAS,EAAE7B,GAAG,CAACuC,YAApB;AAAA,gCACI;AAAU,UAAA,GAAG,EAAEjB,IAAf;AACU,UAAA,KAAK,EAAEd,KAAK,CAACK,WAAN,CAAkB2B,cAAlB,CAAiCrB,OADlD;AAEU,UAAA,QAAQ,EAAE,MAAMX,KAAK,CAACiC,cAAN,CAAqBnB,IAAI,CAACoB,OAAL,CAAaC,KAAlC,CAF1B;AAGU,UAAA,OAAO,EAAE,MAAI;AACT,gBAAIC,IAAI,GAAG,CAAX;;AACA,gBAAIpC,KAAK,CAACK,WAAN,CAAkBC,YAAlB,KAAmC,EAAvC,EAA2C;AACvCN,cAAAA,KAAK,CAACiC,cAAN,CAAqB,iBAArB;AACAG,cAAAA,IAAI,GAAG,CAAP;AACH,aAHD,MAIK,IAAIA,IAAI,IAAI,CAAZ,EAAc;AACfC,cAAAA,OAAO,CAACC,GAAR,CAAYxB,IAAZ;AACH;AACJ,WAZX;AAaU,UAAA,SAAS,EAAGyB,KAAD,IAAS;AAChB,gBAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA0B;AACtBD,cAAAA,KAAK,CAACE,cAAN;AACAzC,cAAAA,KAAK,CAAC0C,UAAN;AACH;AAAC;AAjBhB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAmBI;AAAQ,UAAA,OAAO,EAAE,MAAM;AACnB1C,YAAAA,KAAK,CAAC0C,UAAN;AACH,WAFD;AAAA,iCAEG;AAAK,YAAA,GAAG,EAAE9C,cAAV;AAA0B,YAAA,KAAK,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAdwB,CAyDxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAtFD;;MAAMiB,Q;AAwFN,eAAeA,QAAf","sourcesContent":["import {NavLink, Navigate, Route, Routes} from \"react-router-dom\";\r\nimport css from \"./Messages.module.css\"\r\nimport React, {useEffect, useState} from \"react\";\r\nimport SendPostButton from \"../../common/images/send.png\";\r\nimport WarningImage from \"../../common/images/warning.png\";\r\nimport DeleteButton from \"../../common/images/delete.png\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return <div className={css.DialogItem}>\r\n        <button onClick={()=>props.deleteFriend(props.userId)}><img width={\"10px\"} src={DeleteButton}/></button>\r\n        <NavLink onClick={() => {\r\n            props.setActiveDialog(props.name)\r\n        }}       className={props.messageData.activeDialog === props.name ? css.active : null}\r\n                 to={\"/messages/\" + props.name}><span>{props.name}</span></NavLink>\r\n    </div>\r\n}\r\nconst MessageItem = (props) => {\r\n    return <div className={css.MessageItem}>\r\n        <div className={css.Message}>\r\n            <span className={css.MessageContent}>{props.message}</span>\r\n        </div>\r\n    </div>\r\n}\r\nlet idCrutch = 0;\r\nconst Messages = (props) => {\r\n\r\n    let text = React.createRef();\r\n    const dialogList = props.messageData.friends.map(d => <DialogItem\r\n        messageData={props.messageData}\r\n        setActiveDialog={props.setActiveDialog}\r\n        userId={d.id}\r\n        deleteFriend={props.deleteFriend}\r\n        id={d.id} name={d.name} key={d.id}/>);\r\n    let messageList = props.messageData.dialogs.map(m => <Route\r\n        path={m.name}\r\n        key={m.name}\r\n        element={m.messages.map(ml => <MessageItem message={ml.message} name={props.login} key={idCrutch++}/>)}/>);\r\n\r\n    return <div className={css.Messages}>\r\n        <div className={css.LeftColumn}>\r\n            {dialogList}\r\n        </div>\r\n        <div className={css.RightColumn}>\r\n            <div className={css.MessageWarning}>\r\n                <img src={WarningImage} width={\"40px\"}/>\r\n                <span>Current version of API doesn't support proper message exchange, this page exist as a space for\r\n                future improvement!</span>\r\n            </div>\r\n            <div className={css.MessageSpace}>\r\n                <Routes>\r\n                    {messageList}\r\n                </Routes>\r\n            </div>\r\n            <div className={css.MessagePanel}>\r\n                <textarea ref={text}\r\n                          value={props.messageData.newMessageText.message}\r\n                          onChange={() => props.textareaChange(text.current.value)}\r\n                          onFocus={()=>{\r\n                              let flag = 0;\r\n                              if (props.messageData.activeDialog === \"\") {\r\n                                  props.textareaChange(\"Select a dialog\")\r\n                                  flag = 1;\r\n                              }\r\n                              else if (flag == 1){\r\n                                  console.log(text);\r\n                              }\r\n                          }}\r\n                          onKeyDown={(event)=>{\r\n                              if (event.key === \"Enter\"){\r\n                                  event.preventDefault();\r\n                                  props.addMessage();\r\n                              }}}/>\r\n                <button onClick={() => {\r\n                    props.addMessage();\r\n                }}><img src={SendPostButton} width={\"40px\"}/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    // let messageList;\r\n    // let dialogList = props.messageData.dialogs.map(d => <DialogItem dialogName={d.name} key={d.name}/>);\r\n    // let messages = props.messageData.dialogs.map(m => <Route\r\n    //     path={m.name}\r\n    //     key={m.name}\r\n    //     element={messageList = m.messages.map(ml => <MessageItem message={ml.message} key={ml.message}/>)}>\r\n    // </Route>);\r\n    // let text = React.createRef();\r\n    // return (\r\n    //     <div className={css.Messages}>\r\n    //         <div className={css.leftbar}>\r\n    //             {dialogList}\r\n    //         </div>\r\n    //         <div className={css.rightBar}>\r\n    //             <Routes>\r\n    //                 {messages}\r\n    //             </Routes>\r\n    //             <textarea ref={text}\r\n    //                       value={props.messageData.newMessageText.message}\r\n    //                       onChange={() => props.textareaChange(text)}></textarea>\r\n    //             <br/>\r\n    //             <button onClick={() => {\r\n    //                 props.addMessage()\r\n    //             }}> send\r\n    //             </button>\r\n    //\r\n    //         </div>\r\n    //     </div>\r\n    // );\r\n}\r\n\r\nexport default Messages;"]},"metadata":{},"sourceType":"module"}